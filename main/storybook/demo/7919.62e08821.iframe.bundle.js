"use strict";(self.webpackChunkgeonetwork_ui=self.webpackChunkgeonetwork_ui||[]).push([[7919],{"./node_modules/marked/lib/marked.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _getDefaults(){return{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}__webpack_require__.d(__webpack_exports__,{xI:()=>marked});let _defaults={async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null};function changeDefaults(newDefaults){_defaults=newDefaults}const noopTest={exec:()=>null};function edit(regex,opt=""){let source="string"==typeof regex?regex:regex.source;const obj={replace:(name,val)=>{let valSource="string"==typeof val?val:val.source;return valSource=valSource.replace(other.caret,"$1"),source=source.replace(name,valSource),obj},getRegex:()=>new RegExp(source,opt)};return obj}const other={codeRemoveIndent:/^(?: {1,4}| {0,3}\t)/gm,outputLinkReplace:/\\([\[\]])/g,indentCodeCompensation:/^(\s+)(?:```)/,beginningSpace:/^\s+/,endingHash:/#$/,startingSpaceChar:/^ /,endingSpaceChar:/ $/,nonSpaceChar:/[^ ]/,newLineCharGlobal:/\n/g,tabCharGlobal:/\t/g,multipleSpaceGlobal:/\s+/g,blankLine:/^[ \t]*$/,doubleBlankLine:/\n[ \t]*\n[ \t]*$/,blockquoteStart:/^ {0,3}>/,blockquoteSetextReplace:/\n {0,3}((?:=+|-+) *)(?=\n|$)/g,blockquoteSetextReplace2:/^ {0,3}>[ \t]?/gm,listReplaceTabs:/^\t+/,listReplaceNesting:/^ {1,4}(?=( {4})*[^ ])/g,listIsTask:/^\[[ xX]\] /,listReplaceTask:/^\[[ xX]\] +/,anyLine:/\n.*\n/,hrefBrackets:/^<(.*)>$/,tableDelimiter:/[:|]/,tableAlignChars:/^\||\| *$/g,tableRowBlankLine:/\n[ \t]*$/,tableAlignRight:/^ *-+: *$/,tableAlignCenter:/^ *:-+: *$/,tableAlignLeft:/^ *:-+ *$/,startATag:/^<a /i,endATag:/^<\/a>/i,startPreScriptTag:/^<(pre|code|kbd|script)(\s|>)/i,endPreScriptTag:/^<\/(pre|code|kbd|script)(\s|>)/i,startAngleBracket:/^</,endAngleBracket:/>$/,pedanticHrefTitle:/^([^'"]*[^\s])\s+(['"])(.*)\2/,unicodeAlphaNumeric:/[\p{L}\p{N}]/u,escapeTest:/[&<>"']/,escapeReplace:/[&<>"']/g,escapeTestNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,escapeReplaceNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,unescapeTest:/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,caret:/(^|[^\[])\^/g,percentDecode:/%25/g,findPipe:/\|/g,splitPipe:/ \|/,slashPipe:/\\\|/g,carriageReturn:/\r\n|\r/g,spaceLine:/^ +$/gm,notSpaceStart:/^\S*/,endingNewline:/\n$/,listItemRegex:bull=>new RegExp(`^( {0,3}${bull})((?:[\t ][^\\n]*)?(?:\\n|$))`),nextBulletRegex:indent=>new RegExp(`^ {0,${Math.min(3,indent-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))`),hrRegex:indent=>new RegExp(`^ {0,${Math.min(3,indent-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),fencesBeginRegex:indent=>new RegExp(`^ {0,${Math.min(3,indent-1)}}(?:\`\`\`|~~~)`),headingBeginRegex:indent=>new RegExp(`^ {0,${Math.min(3,indent-1)}}#`),htmlBeginRegex:indent=>new RegExp(`^ {0,${Math.min(3,indent-1)}}<(?:[a-z].*>|!--)`,"i")},hr=/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,bullet=/(?:[*+-]|\d{1,9}[.)])/,lheading=edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html))+?)\n {0,3}(=+|-+) *(?:\n+|$)/).replace(/bull/g,bullet).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).getRegex(),_paragraph=/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,_blockLabel=/(?!\s*\])(?:\\.|[^\[\]\\])+/,def=edit(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label",_blockLabel).replace("title",/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(),list=edit(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g,bullet).getRegex(),_tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",_comment=/<!--(?:-?>|[\s\S]*?(?:-->|$))/,html=edit("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$))","i").replace("comment",_comment).replace("tag",_tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),paragraph=edit(_paragraph).replace("hr",hr).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",_tag).getRegex(),blockNormal={blockquote:edit(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph",paragraph).getRegex(),code:/^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/,def,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,hr,html,lheading,list,newline:/^(?:[ \t]*(?:\n|$))+/,paragraph,table:noopTest,text:/^[^\n]+/},gfmTable=edit("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr",hr).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("blockquote"," {0,3}>").replace("code","(?: {4}| {0,3}\t)[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",_tag).getRegex(),blockGfm={...blockNormal,table:gfmTable,paragraph:edit(_paragraph).replace("hr",hr).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("table",gfmTable).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",_tag).getRegex()},blockPedantic={...blockNormal,html:edit("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",_comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:noopTest,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:edit(_paragraph).replace("hr",hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",lheading).replace("|table","").replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").replace("|tag","").getRegex()},escape$1=/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,br=/^( {2,}|\\)\n(?!\s*$)/,_punctuation=/[\p{P}\p{S}]/u,_punctuationOrSpace=/[\s\p{P}\p{S}]/u,_notPunctuationOrSpace=/[^\s\p{P}\p{S}]/u,punctuation=edit(/^((?![*_])punctSpace)/,"u").replace(/punctSpace/g,_punctuationOrSpace).getRegex(),emStrongLDelim=edit(/^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/,"u").replace(/punct/g,_punctuation).getRegex(),emStrongRDelimAst=edit("^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)","gu").replace(/notPunctSpace/g,_notPunctuationOrSpace).replace(/punctSpace/g,_punctuationOrSpace).replace(/punct/g,_punctuation).getRegex(),emStrongRDelimUnd=edit("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)","gu").replace(/notPunctSpace/g,_notPunctuationOrSpace).replace(/punctSpace/g,_punctuationOrSpace).replace(/punct/g,_punctuation).getRegex(),anyPunctuation=edit(/\\(punct)/,"gu").replace(/punct/g,_punctuation).getRegex(),autolink=edit(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme",/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email",/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),_inlineComment=edit(_comment).replace("(?:--\x3e|$)","--\x3e").getRegex(),tag=edit("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment",_inlineComment).replace("attribute",/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(),_inlineLabel=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,link=edit(/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/).replace("label",_inlineLabel).replace("href",/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/).replace("title",/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(),reflink=edit(/^!?\[(label)\]\[(ref)\]/).replace("label",_inlineLabel).replace("ref",_blockLabel).getRegex(),nolink=edit(/^!?\[(ref)\](?:\[\])?/).replace("ref",_blockLabel).getRegex(),inlineNormal={_backpedal:noopTest,anyPunctuation,autolink,blockSkip:/\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g,br,code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,del:noopTest,emStrongLDelim,emStrongRDelimAst,emStrongRDelimUnd,escape:escape$1,link,nolink,punctuation,reflink,reflinkSearch:edit("reflink|nolink(?!\\()","g").replace("reflink",reflink).replace("nolink",nolink).getRegex(),tag,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,url:noopTest},inlinePedantic={...inlineNormal,link:edit(/^!?\[(label)\]\((.*?)\)/).replace("label",_inlineLabel).getRegex(),reflink:edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",_inlineLabel).getRegex()},inlineGfm={...inlineNormal,escape:edit(escape$1).replace("])","~|])").getRegex(),url:edit(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,"i").replace("email",/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/},inlineBreaks={...inlineGfm,br:edit(br).replace("{2,}","*").getRegex(),text:edit(inlineGfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()},block={normal:blockNormal,gfm:blockGfm,pedantic:blockPedantic},inline={normal:inlineNormal,gfm:inlineGfm,breaks:inlineBreaks,pedantic:inlinePedantic},escapeReplacements={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},getEscapeReplacement=ch=>escapeReplacements[ch];function escape(html,encode){if(encode){if(other.escapeTest.test(html))return html.replace(other.escapeReplace,getEscapeReplacement)}else if(other.escapeTestNoEncode.test(html))return html.replace(other.escapeReplaceNoEncode,getEscapeReplacement);return html}function cleanUrl(href){try{href=encodeURI(href).replace(other.percentDecode,"%")}catch{return null}return href}function splitCells(tableRow,count){const cells=tableRow.replace(other.findPipe,((match,offset,str)=>{let escaped=!1,curr=offset;for(;--curr>=0&&"\\"===str[curr];)escaped=!escaped;return escaped?"|":" |"})).split(other.splitPipe);let i=0;if(cells[0].trim()||cells.shift(),cells.length>0&&!cells.at(-1)?.trim()&&cells.pop(),count)if(cells.length>count)cells.splice(count);else for(;cells.length<count;)cells.push("");for(;i<cells.length;i++)cells[i]=cells[i].trim().replace(other.slashPipe,"|");return cells}function rtrim(str,c,invert){const l=str.length;if(0===l)return"";let suffLen=0;for(;suffLen<l;){const currChar=str.charAt(l-suffLen-1);if(currChar!==c||invert){if(currChar===c||!invert)break;suffLen++}else suffLen++}return str.slice(0,l-suffLen)}function outputLink(cap,link,raw,lexer,rules){const href=link.href,title=link.title||null,text=cap[1].replace(rules.other.outputLinkReplace,"$1");if("!"!==cap[0].charAt(0)){lexer.state.inLink=!0;const token={type:"link",raw,href,title,text,tokens:lexer.inlineTokens(text)};return lexer.state.inLink=!1,token}return{type:"image",raw,href,title,text}}class _Tokenizer{options;rules;lexer;constructor(options){this.options=options||_defaults}space(src){const cap=this.rules.block.newline.exec(src);if(cap&&cap[0].length>0)return{type:"space",raw:cap[0]}}code(src){const cap=this.rules.block.code.exec(src);if(cap){const text=cap[0].replace(this.rules.other.codeRemoveIndent,"");return{type:"code",raw:cap[0],codeBlockStyle:"indented",text:this.options.pedantic?text:rtrim(text,"\n")}}}fences(src){const cap=this.rules.block.fences.exec(src);if(cap){const raw=cap[0],text=function indentCodeCompensation(raw,text,rules){const matchIndentToCode=raw.match(rules.other.indentCodeCompensation);if(null===matchIndentToCode)return text;const indentToCode=matchIndentToCode[1];return text.split("\n").map((node=>{const matchIndentInNode=node.match(rules.other.beginningSpace);if(null===matchIndentInNode)return node;const[indentInNode]=matchIndentInNode;return indentInNode.length>=indentToCode.length?node.slice(indentToCode.length):node})).join("\n")}(raw,cap[3]||"",this.rules);return{type:"code",raw,lang:cap[2]?cap[2].trim().replace(this.rules.inline.anyPunctuation,"$1"):cap[2],text}}}heading(src){const cap=this.rules.block.heading.exec(src);if(cap){let text=cap[2].trim();if(this.rules.other.endingHash.test(text)){const trimmed=rtrim(text,"#");this.options.pedantic?text=trimmed.trim():trimmed&&!this.rules.other.endingSpaceChar.test(trimmed)||(text=trimmed.trim())}return{type:"heading",raw:cap[0],depth:cap[1].length,text,tokens:this.lexer.inline(text)}}}hr(src){const cap=this.rules.block.hr.exec(src);if(cap)return{type:"hr",raw:rtrim(cap[0],"\n")}}blockquote(src){const cap=this.rules.block.blockquote.exec(src);if(cap){let lines=rtrim(cap[0],"\n").split("\n"),raw="",text="";const tokens=[];for(;lines.length>0;){let inBlockquote=!1;const currentLines=[];let i;for(i=0;i<lines.length;i++)if(this.rules.other.blockquoteStart.test(lines[i]))currentLines.push(lines[i]),inBlockquote=!0;else{if(inBlockquote)break;currentLines.push(lines[i])}lines=lines.slice(i);const currentRaw=currentLines.join("\n"),currentText=currentRaw.replace(this.rules.other.blockquoteSetextReplace,"\n    $1").replace(this.rules.other.blockquoteSetextReplace2,"");raw=raw?`${raw}\n${currentRaw}`:currentRaw,text=text?`${text}\n${currentText}`:currentText;const top=this.lexer.state.top;if(this.lexer.state.top=!0,this.lexer.blockTokens(currentText,tokens,!0),this.lexer.state.top=top,0===lines.length)break;const lastToken=tokens.at(-1);if("code"===lastToken?.type)break;if("blockquote"===lastToken?.type){const oldToken=lastToken,newText=oldToken.raw+"\n"+lines.join("\n"),newToken=this.blockquote(newText);tokens[tokens.length-1]=newToken,raw=raw.substring(0,raw.length-oldToken.raw.length)+newToken.raw,text=text.substring(0,text.length-oldToken.text.length)+newToken.text;break}if("list"!==lastToken?.type);else{const oldToken=lastToken,newText=oldToken.raw+"\n"+lines.join("\n"),newToken=this.list(newText);tokens[tokens.length-1]=newToken,raw=raw.substring(0,raw.length-lastToken.raw.length)+newToken.raw,text=text.substring(0,text.length-oldToken.raw.length)+newToken.raw,lines=newText.substring(tokens.at(-1).raw.length).split("\n")}}return{type:"blockquote",raw,tokens,text}}}list(src){let cap=this.rules.block.list.exec(src);if(cap){let bull=cap[1].trim();const isordered=bull.length>1,list={type:"list",raw:"",ordered:isordered,start:isordered?+bull.slice(0,-1):"",loose:!1,items:[]};bull=isordered?`\\d{1,9}\\${bull.slice(-1)}`:`\\${bull}`,this.options.pedantic&&(bull=isordered?bull:"[*+-]");const itemRegex=this.rules.other.listItemRegex(bull);let endsWithBlankLine=!1;for(;src;){let endEarly=!1,raw="",itemContents="";if(!(cap=itemRegex.exec(src)))break;if(this.rules.block.hr.test(src))break;raw=cap[0],src=src.substring(raw.length);let line=cap[2].split("\n",1)[0].replace(this.rules.other.listReplaceTabs,(t=>" ".repeat(3*t.length))),nextLine=src.split("\n",1)[0],blankLine=!line.trim(),indent=0;if(this.options.pedantic?(indent=2,itemContents=line.trimStart()):blankLine?indent=cap[1].length+1:(indent=cap[2].search(this.rules.other.nonSpaceChar),indent=indent>4?1:indent,itemContents=line.slice(indent),indent+=cap[1].length),blankLine&&this.rules.other.blankLine.test(nextLine)&&(raw+=nextLine+"\n",src=src.substring(nextLine.length+1),endEarly=!0),!endEarly){const nextBulletRegex=this.rules.other.nextBulletRegex(indent),hrRegex=this.rules.other.hrRegex(indent),fencesBeginRegex=this.rules.other.fencesBeginRegex(indent),headingBeginRegex=this.rules.other.headingBeginRegex(indent),htmlBeginRegex=this.rules.other.htmlBeginRegex(indent);for(;src;){const rawLine=src.split("\n",1)[0];let nextLineWithoutTabs;if(nextLine=rawLine,this.options.pedantic?(nextLine=nextLine.replace(this.rules.other.listReplaceNesting,"  "),nextLineWithoutTabs=nextLine):nextLineWithoutTabs=nextLine.replace(this.rules.other.tabCharGlobal,"    "),fencesBeginRegex.test(nextLine))break;if(headingBeginRegex.test(nextLine))break;if(htmlBeginRegex.test(nextLine))break;if(nextBulletRegex.test(nextLine))break;if(hrRegex.test(nextLine))break;if(nextLineWithoutTabs.search(this.rules.other.nonSpaceChar)>=indent||!nextLine.trim())itemContents+="\n"+nextLineWithoutTabs.slice(indent);else{if(blankLine)break;if(line.replace(this.rules.other.tabCharGlobal,"    ").search(this.rules.other.nonSpaceChar)>=4)break;if(fencesBeginRegex.test(line))break;if(headingBeginRegex.test(line))break;if(hrRegex.test(line))break;itemContents+="\n"+nextLine}blankLine||nextLine.trim()||(blankLine=!0),raw+=rawLine+"\n",src=src.substring(rawLine.length+1),line=nextLineWithoutTabs.slice(indent)}}list.loose||(endsWithBlankLine?list.loose=!0:this.rules.other.doubleBlankLine.test(raw)&&(endsWithBlankLine=!0));let ischecked,istask=null;this.options.gfm&&(istask=this.rules.other.listIsTask.exec(itemContents),istask&&(ischecked="[ ] "!==istask[0],itemContents=itemContents.replace(this.rules.other.listReplaceTask,""))),list.items.push({type:"list_item",raw,task:!!istask,checked:ischecked,loose:!1,text:itemContents,tokens:[]}),list.raw+=raw}const lastItem=list.items.at(-1);if(!lastItem)return;lastItem.raw=lastItem.raw.trimEnd(),lastItem.text=lastItem.text.trimEnd(),list.raw=list.raw.trimEnd();for(let i=0;i<list.items.length;i++)if(this.lexer.state.top=!1,list.items[i].tokens=this.lexer.blockTokens(list.items[i].text,[]),!list.loose){const spacers=list.items[i].tokens.filter((t=>"space"===t.type)),hasMultipleLineBreaks=spacers.length>0&&spacers.some((t=>this.rules.other.anyLine.test(t.raw)));list.loose=hasMultipleLineBreaks}if(list.loose)for(let i=0;i<list.items.length;i++)list.items[i].loose=!0;return list}}html(src){const cap=this.rules.block.html.exec(src);if(cap){return{type:"html",block:!0,raw:cap[0],pre:"pre"===cap[1]||"script"===cap[1]||"style"===cap[1],text:cap[0]}}}def(src){const cap=this.rules.block.def.exec(src);if(cap){const tag=cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal," "),href=cap[2]?cap[2].replace(this.rules.other.hrefBrackets,"$1").replace(this.rules.inline.anyPunctuation,"$1"):"",title=cap[3]?cap[3].substring(1,cap[3].length-1).replace(this.rules.inline.anyPunctuation,"$1"):cap[3];return{type:"def",tag,raw:cap[0],href,title}}}table(src){const cap=this.rules.block.table.exec(src);if(!cap)return;if(!this.rules.other.tableDelimiter.test(cap[2]))return;const headers=splitCells(cap[1]),aligns=cap[2].replace(this.rules.other.tableAlignChars,"").split("|"),rows=cap[3]?.trim()?cap[3].replace(this.rules.other.tableRowBlankLine,"").split("\n"):[],item={type:"table",raw:cap[0],header:[],align:[],rows:[]};if(headers.length===aligns.length){for(const align of aligns)this.rules.other.tableAlignRight.test(align)?item.align.push("right"):this.rules.other.tableAlignCenter.test(align)?item.align.push("center"):this.rules.other.tableAlignLeft.test(align)?item.align.push("left"):item.align.push(null);for(let i=0;i<headers.length;i++)item.header.push({text:headers[i],tokens:this.lexer.inline(headers[i]),header:!0,align:item.align[i]});for(const row of rows)item.rows.push(splitCells(row,item.header.length).map(((cell,i)=>({text:cell,tokens:this.lexer.inline(cell),header:!1,align:item.align[i]}))));return item}}lheading(src){const cap=this.rules.block.lheading.exec(src);if(cap)return{type:"heading",raw:cap[0],depth:"="===cap[2].charAt(0)?1:2,text:cap[1],tokens:this.lexer.inline(cap[1])}}paragraph(src){const cap=this.rules.block.paragraph.exec(src);if(cap){const text="\n"===cap[1].charAt(cap[1].length-1)?cap[1].slice(0,-1):cap[1];return{type:"paragraph",raw:cap[0],text,tokens:this.lexer.inline(text)}}}text(src){const cap=this.rules.block.text.exec(src);if(cap)return{type:"text",raw:cap[0],text:cap[0],tokens:this.lexer.inline(cap[0])}}escape(src){const cap=this.rules.inline.escape.exec(src);if(cap)return{type:"escape",raw:cap[0],text:cap[1]}}tag(src){const cap=this.rules.inline.tag.exec(src);if(cap)return!this.lexer.state.inLink&&this.rules.other.startATag.test(cap[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&this.rules.other.endATag.test(cap[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&this.rules.other.startPreScriptTag.test(cap[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&this.rules.other.endPreScriptTag.test(cap[0])&&(this.lexer.state.inRawBlock=!1),{type:"html",raw:cap[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:cap[0]}}link(src){const cap=this.rules.inline.link.exec(src);if(cap){const trimmedUrl=cap[2].trim();if(!this.options.pedantic&&this.rules.other.startAngleBracket.test(trimmedUrl)){if(!this.rules.other.endAngleBracket.test(trimmedUrl))return;const rtrimSlash=rtrim(trimmedUrl.slice(0,-1),"\\");if((trimmedUrl.length-rtrimSlash.length)%2==0)return}else{const lastParenIndex=function findClosingBracket(str,b){if(-1===str.indexOf(b[1]))return-1;let level=0;for(let i=0;i<str.length;i++)if("\\"===str[i])i++;else if(str[i]===b[0])level++;else if(str[i]===b[1]&&(level--,level<0))return i;return-1}(cap[2],"()");if(lastParenIndex>-1){const linkLen=(0===cap[0].indexOf("!")?5:4)+cap[1].length+lastParenIndex;cap[2]=cap[2].substring(0,lastParenIndex),cap[0]=cap[0].substring(0,linkLen).trim(),cap[3]=""}}let href=cap[2],title="";if(this.options.pedantic){const link=this.rules.other.pedanticHrefTitle.exec(href);link&&(href=link[1],title=link[3])}else title=cap[3]?cap[3].slice(1,-1):"";return href=href.trim(),this.rules.other.startAngleBracket.test(href)&&(href=this.options.pedantic&&!this.rules.other.endAngleBracket.test(trimmedUrl)?href.slice(1):href.slice(1,-1)),outputLink(cap,{href:href?href.replace(this.rules.inline.anyPunctuation,"$1"):href,title:title?title.replace(this.rules.inline.anyPunctuation,"$1"):title},cap[0],this.lexer,this.rules)}}reflink(src,links){let cap;if((cap=this.rules.inline.reflink.exec(src))||(cap=this.rules.inline.nolink.exec(src))){const link=links[(cap[2]||cap[1]).replace(this.rules.other.multipleSpaceGlobal," ").toLowerCase()];if(!link){const text=cap[0].charAt(0);return{type:"text",raw:text,text}}return outputLink(cap,link,cap[0],this.lexer,this.rules)}}emStrong(src,maskedSrc,prevChar=""){let match=this.rules.inline.emStrongLDelim.exec(src);if(!match)return;if(match[3]&&prevChar.match(this.rules.other.unicodeAlphaNumeric))return;if(!(match[1]||match[2]||"")||!prevChar||this.rules.inline.punctuation.exec(prevChar)){const lLength=[...match[0]].length-1;let rDelim,rLength,delimTotal=lLength,midDelimTotal=0;const endReg="*"===match[0][0]?this.rules.inline.emStrongRDelimAst:this.rules.inline.emStrongRDelimUnd;for(endReg.lastIndex=0,maskedSrc=maskedSrc.slice(-1*src.length+lLength);null!=(match=endReg.exec(maskedSrc));){if(rDelim=match[1]||match[2]||match[3]||match[4]||match[5]||match[6],!rDelim)continue;if(rLength=[...rDelim].length,match[3]||match[4]){delimTotal+=rLength;continue}if((match[5]||match[6])&&lLength%3&&!((lLength+rLength)%3)){midDelimTotal+=rLength;continue}if(delimTotal-=rLength,delimTotal>0)continue;rLength=Math.min(rLength,rLength+delimTotal+midDelimTotal);const lastCharLength=[...match[0]][0].length,raw=src.slice(0,lLength+match.index+lastCharLength+rLength);if(Math.min(lLength,rLength)%2){const text=raw.slice(1,-1);return{type:"em",raw,text,tokens:this.lexer.inlineTokens(text)}}const text=raw.slice(2,-2);return{type:"strong",raw,text,tokens:this.lexer.inlineTokens(text)}}}}codespan(src){const cap=this.rules.inline.code.exec(src);if(cap){let text=cap[2].replace(this.rules.other.newLineCharGlobal," ");const hasNonSpaceChars=this.rules.other.nonSpaceChar.test(text),hasSpaceCharsOnBothEnds=this.rules.other.startingSpaceChar.test(text)&&this.rules.other.endingSpaceChar.test(text);return hasNonSpaceChars&&hasSpaceCharsOnBothEnds&&(text=text.substring(1,text.length-1)),{type:"codespan",raw:cap[0],text}}}br(src){const cap=this.rules.inline.br.exec(src);if(cap)return{type:"br",raw:cap[0]}}del(src){const cap=this.rules.inline.del.exec(src);if(cap)return{type:"del",raw:cap[0],text:cap[2],tokens:this.lexer.inlineTokens(cap[2])}}autolink(src){const cap=this.rules.inline.autolink.exec(src);if(cap){let text,href;return"@"===cap[2]?(text=cap[1],href="mailto:"+text):(text=cap[1],href=text),{type:"link",raw:cap[0],text,href,tokens:[{type:"text",raw:text,text}]}}}url(src){let cap;if(cap=this.rules.inline.url.exec(src)){let text,href;if("@"===cap[2])text=cap[0],href="mailto:"+text;else{let prevCapZero;do{prevCapZero=cap[0],cap[0]=this.rules.inline._backpedal.exec(cap[0])?.[0]??""}while(prevCapZero!==cap[0]);text=cap[0],href="www."===cap[1]?"http://"+cap[0]:cap[0]}return{type:"link",raw:cap[0],text,href,tokens:[{type:"text",raw:text,text}]}}}inlineText(src){const cap=this.rules.inline.text.exec(src);if(cap){const escaped=this.lexer.state.inRawBlock;return{type:"text",raw:cap[0],text:cap[0],escaped}}}}class _Lexer{tokens;options;state;tokenizer;inlineQueue;constructor(options){this.tokens=[],this.tokens.links=Object.create(null),this.options=options||_defaults,this.options.tokenizer=this.options.tokenizer||new _Tokenizer,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const rules={other,block:block.normal,inline:inline.normal};this.options.pedantic?(rules.block=block.pedantic,rules.inline=inline.pedantic):this.options.gfm&&(rules.block=block.gfm,this.options.breaks?rules.inline=inline.breaks:rules.inline=inline.gfm),this.tokenizer.rules=rules}static get rules(){return{block,inline}}static lex(src,options){return new _Lexer(options).lex(src)}static lexInline(src,options){return new _Lexer(options).inlineTokens(src)}lex(src){src=src.replace(other.carriageReturn,"\n"),this.blockTokens(src,this.tokens);for(let i=0;i<this.inlineQueue.length;i++){const next=this.inlineQueue[i];this.inlineTokens(next.src,next.tokens)}return this.inlineQueue=[],this.tokens}blockTokens(src,tokens=[],lastParagraphClipped=!1){for(this.options.pedantic&&(src=src.replace(other.tabCharGlobal,"    ").replace(other.spaceLine,""));src;){let token;if(this.options.extensions?.block?.some((extTokenizer=>!!(token=extTokenizer.call({lexer:this},src,tokens))&&(src=src.substring(token.raw.length),tokens.push(token),!0))))continue;if(token=this.tokenizer.space(src)){src=src.substring(token.raw.length);const lastToken=tokens.at(-1);1===token.raw.length&&void 0!==lastToken?lastToken.raw+="\n":tokens.push(token);continue}if(token=this.tokenizer.code(src)){src=src.substring(token.raw.length);const lastToken=tokens.at(-1);"paragraph"===lastToken?.type||"text"===lastToken?.type?(lastToken.raw+="\n"+token.raw,lastToken.text+="\n"+token.text,this.inlineQueue.at(-1).src=lastToken.text):tokens.push(token);continue}if(token=this.tokenizer.fences(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.heading(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.hr(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.blockquote(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.list(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.html(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.def(src)){src=src.substring(token.raw.length);const lastToken=tokens.at(-1);"paragraph"===lastToken?.type||"text"===lastToken?.type?(lastToken.raw+="\n"+token.raw,lastToken.text+="\n"+token.raw,this.inlineQueue.at(-1).src=lastToken.text):this.tokens.links[token.tag]||(this.tokens.links[token.tag]={href:token.href,title:token.title});continue}if(token=this.tokenizer.table(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.lheading(src)){src=src.substring(token.raw.length),tokens.push(token);continue}let cutSrc=src;if(this.options.extensions?.startBlock){let startIndex=1/0;const tempSrc=src.slice(1);let tempStart;this.options.extensions.startBlock.forEach((getStartIndex=>{tempStart=getStartIndex.call({lexer:this},tempSrc),"number"==typeof tempStart&&tempStart>=0&&(startIndex=Math.min(startIndex,tempStart))})),startIndex<1/0&&startIndex>=0&&(cutSrc=src.substring(0,startIndex+1))}if(this.state.top&&(token=this.tokenizer.paragraph(cutSrc))){const lastToken=tokens.at(-1);lastParagraphClipped&&"paragraph"===lastToken?.type?(lastToken.raw+="\n"+token.raw,lastToken.text+="\n"+token.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=lastToken.text):tokens.push(token),lastParagraphClipped=cutSrc.length!==src.length,src=src.substring(token.raw.length)}else if(token=this.tokenizer.text(src)){src=src.substring(token.raw.length);const lastToken=tokens.at(-1);"text"===lastToken?.type?(lastToken.raw+="\n"+token.raw,lastToken.text+="\n"+token.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=lastToken.text):tokens.push(token)}else if(src){const errMsg="Infinite loop on byte: "+src.charCodeAt(0);if(this.options.silent){console.error(errMsg);break}throw new Error(errMsg)}}return this.state.top=!0,tokens}inline(src,tokens=[]){return this.inlineQueue.push({src,tokens}),tokens}inlineTokens(src,tokens=[]){let maskedSrc=src,match=null;if(this.tokens.links){const links=Object.keys(this.tokens.links);if(links.length>0)for(;null!=(match=this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc));)links.includes(match[0].slice(match[0].lastIndexOf("[")+1,-1))&&(maskedSrc=maskedSrc.slice(0,match.index)+"["+"a".repeat(match[0].length-2)+"]"+maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(match=this.tokenizer.rules.inline.blockSkip.exec(maskedSrc));)maskedSrc=maskedSrc.slice(0,match.index)+"["+"a".repeat(match[0].length-2)+"]"+maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;null!=(match=this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc));)maskedSrc=maskedSrc.slice(0,match.index)+"++"+maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);let keepPrevChar=!1,prevChar="";for(;src;){let token;if(keepPrevChar||(prevChar=""),keepPrevChar=!1,this.options.extensions?.inline?.some((extTokenizer=>!!(token=extTokenizer.call({lexer:this},src,tokens))&&(src=src.substring(token.raw.length),tokens.push(token),!0))))continue;if(token=this.tokenizer.escape(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.tag(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.link(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.reflink(src,this.tokens.links)){src=src.substring(token.raw.length);const lastToken=tokens.at(-1);"text"===token.type&&"text"===lastToken?.type?(lastToken.raw+=token.raw,lastToken.text+=token.text):tokens.push(token);continue}if(token=this.tokenizer.emStrong(src,maskedSrc,prevChar)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.codespan(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.br(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.del(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(token=this.tokenizer.autolink(src)){src=src.substring(token.raw.length),tokens.push(token);continue}if(!this.state.inLink&&(token=this.tokenizer.url(src))){src=src.substring(token.raw.length),tokens.push(token);continue}let cutSrc=src;if(this.options.extensions?.startInline){let startIndex=1/0;const tempSrc=src.slice(1);let tempStart;this.options.extensions.startInline.forEach((getStartIndex=>{tempStart=getStartIndex.call({lexer:this},tempSrc),"number"==typeof tempStart&&tempStart>=0&&(startIndex=Math.min(startIndex,tempStart))})),startIndex<1/0&&startIndex>=0&&(cutSrc=src.substring(0,startIndex+1))}if(token=this.tokenizer.inlineText(cutSrc)){src=src.substring(token.raw.length),"_"!==token.raw.slice(-1)&&(prevChar=token.raw.slice(-1)),keepPrevChar=!0;const lastToken=tokens.at(-1);"text"===lastToken?.type?(lastToken.raw+=token.raw,lastToken.text+=token.text):tokens.push(token)}else if(src){const errMsg="Infinite loop on byte: "+src.charCodeAt(0);if(this.options.silent){console.error(errMsg);break}throw new Error(errMsg)}}return tokens}}class _Renderer{options;parser;constructor(options){this.options=options||_defaults}space(token){return""}code({text,lang,escaped}){const langString=(lang||"").match(other.notSpaceStart)?.[0],code=text.replace(other.endingNewline,"")+"\n";return langString?'<pre><code class="language-'+escape(langString)+'">'+(escaped?code:escape(code,!0))+"</code></pre>\n":"<pre><code>"+(escaped?code:escape(code,!0))+"</code></pre>\n"}blockquote({tokens}){return`<blockquote>\n${this.parser.parse(tokens)}</blockquote>\n`}html({text}){return text}heading({tokens,depth}){return`<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\n`}hr(token){return"<hr>\n"}list(token){const ordered=token.ordered,start=token.start;let body="";for(let j=0;j<token.items.length;j++){const item=token.items[j];body+=this.listitem(item)}const type=ordered?"ol":"ul";return"<"+type+(ordered&&1!==start?' start="'+start+'"':"")+">\n"+body+"</"+type+">\n"}listitem(item){let itemBody="";if(item.task){const checkbox=this.checkbox({checked:!!item.checked});item.loose?"paragraph"===item.tokens[0]?.type?(item.tokens[0].text=checkbox+" "+item.tokens[0].text,item.tokens[0].tokens&&item.tokens[0].tokens.length>0&&"text"===item.tokens[0].tokens[0].type&&(item.tokens[0].tokens[0].text=checkbox+" "+escape(item.tokens[0].tokens[0].text),item.tokens[0].tokens[0].escaped=!0)):item.tokens.unshift({type:"text",raw:checkbox+" ",text:checkbox+" ",escaped:!0}):itemBody+=checkbox+" "}return itemBody+=this.parser.parse(item.tokens,!!item.loose),`<li>${itemBody}</li>\n`}checkbox({checked}){return"<input "+(checked?'checked="" ':"")+'disabled="" type="checkbox">'}paragraph({tokens}){return`<p>${this.parser.parseInline(tokens)}</p>\n`}table(token){let header="",cell="";for(let j=0;j<token.header.length;j++)cell+=this.tablecell(token.header[j]);header+=this.tablerow({text:cell});let body="";for(let j=0;j<token.rows.length;j++){const row=token.rows[j];cell="";for(let k=0;k<row.length;k++)cell+=this.tablecell(row[k]);body+=this.tablerow({text:cell})}return body&&(body=`<tbody>${body}</tbody>`),"<table>\n<thead>\n"+header+"</thead>\n"+body+"</table>\n"}tablerow({text}){return`<tr>\n${text}</tr>\n`}tablecell(token){const content=this.parser.parseInline(token.tokens),type=token.header?"th":"td";return(token.align?`<${type} align="${token.align}">`:`<${type}>`)+content+`</${type}>\n`}strong({tokens}){return`<strong>${this.parser.parseInline(tokens)}</strong>`}em({tokens}){return`<em>${this.parser.parseInline(tokens)}</em>`}codespan({text}){return`<code>${escape(text,!0)}</code>`}br(token){return"<br>"}del({tokens}){return`<del>${this.parser.parseInline(tokens)}</del>`}link({href,title,tokens}){const text=this.parser.parseInline(tokens),cleanHref=cleanUrl(href);if(null===cleanHref)return text;let out='<a href="'+(href=cleanHref)+'"';return title&&(out+=' title="'+escape(title)+'"'),out+=">"+text+"</a>",out}image({href,title,text}){const cleanHref=cleanUrl(href);if(null===cleanHref)return escape(text);let out=`<img src="${href=cleanHref}" alt="${text}"`;return title&&(out+=` title="${escape(title)}"`),out+=">",out}text(token){return"tokens"in token&&token.tokens?this.parser.parseInline(token.tokens):"escaped"in token&&token.escaped?token.text:escape(token.text)}}class _TextRenderer{strong({text}){return text}em({text}){return text}codespan({text}){return text}del({text}){return text}html({text}){return text}text({text}){return text}link({text}){return""+text}image({text}){return""+text}br(){return""}}class _Parser{options;renderer;textRenderer;constructor(options){this.options=options||_defaults,this.options.renderer=this.options.renderer||new _Renderer,this.renderer=this.options.renderer,this.renderer.options=this.options,this.renderer.parser=this,this.textRenderer=new _TextRenderer}static parse(tokens,options){return new _Parser(options).parse(tokens)}static parseInline(tokens,options){return new _Parser(options).parseInline(tokens)}parse(tokens,top=!0){let out="";for(let i=0;i<tokens.length;i++){const anyToken=tokens[i];if(this.options.extensions?.renderers?.[anyToken.type]){const genericToken=anyToken,ret=this.options.extensions.renderers[genericToken.type].call({parser:this},genericToken);if(!1!==ret||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(genericToken.type)){out+=ret||"";continue}}const token=anyToken;switch(token.type){case"space":out+=this.renderer.space(token);continue;case"hr":out+=this.renderer.hr(token);continue;case"heading":out+=this.renderer.heading(token);continue;case"code":out+=this.renderer.code(token);continue;case"table":out+=this.renderer.table(token);continue;case"blockquote":out+=this.renderer.blockquote(token);continue;case"list":out+=this.renderer.list(token);continue;case"html":out+=this.renderer.html(token);continue;case"paragraph":out+=this.renderer.paragraph(token);continue;case"text":{let textToken=token,body=this.renderer.text(textToken);for(;i+1<tokens.length&&"text"===tokens[i+1].type;)textToken=tokens[++i],body+="\n"+this.renderer.text(textToken);out+=top?this.renderer.paragraph({type:"paragraph",raw:body,text:body,tokens:[{type:"text",raw:body,text:body,escaped:!0}]}):body;continue}default:{const errMsg='Token with "'+token.type+'" type was not found.';if(this.options.silent)return console.error(errMsg),"";throw new Error(errMsg)}}}return out}parseInline(tokens,renderer=this.renderer){let out="";for(let i=0;i<tokens.length;i++){const anyToken=tokens[i];if(this.options.extensions?.renderers?.[anyToken.type]){const ret=this.options.extensions.renderers[anyToken.type].call({parser:this},anyToken);if(!1!==ret||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(anyToken.type)){out+=ret||"";continue}}const token=anyToken;switch(token.type){case"escape":case"text":out+=renderer.text(token);break;case"html":out+=renderer.html(token);break;case"link":out+=renderer.link(token);break;case"image":out+=renderer.image(token);break;case"strong":out+=renderer.strong(token);break;case"em":out+=renderer.em(token);break;case"codespan":out+=renderer.codespan(token);break;case"br":out+=renderer.br(token);break;case"del":out+=renderer.del(token);break;default:{const errMsg='Token with "'+token.type+'" type was not found.';if(this.options.silent)return console.error(errMsg),"";throw new Error(errMsg)}}}return out}}class _Hooks{options;block;constructor(options){this.options=options||_defaults}static passThroughHooks=new Set(["preprocess","postprocess","processAllTokens"]);preprocess(markdown){return markdown}postprocess(html){return html}processAllTokens(tokens){return tokens}provideLexer(){return this.block?_Lexer.lex:_Lexer.lexInline}provideParser(){return this.block?_Parser.parse:_Parser.parseInline}}const markedInstance=new class Marked{defaults={async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null};options=this.setOptions;parse=this.parseMarkdown(!0);parseInline=this.parseMarkdown(!1);Parser=_Parser;Renderer=_Renderer;TextRenderer=_TextRenderer;Lexer=_Lexer;Tokenizer=_Tokenizer;Hooks=_Hooks;constructor(...args){this.use(...args)}walkTokens(tokens,callback){let values=[];for(const token of tokens)switch(values=values.concat(callback.call(this,token)),token.type){case"table":{const tableToken=token;for(const cell of tableToken.header)values=values.concat(this.walkTokens(cell.tokens,callback));for(const row of tableToken.rows)for(const cell of row)values=values.concat(this.walkTokens(cell.tokens,callback));break}case"list":{const listToken=token;values=values.concat(this.walkTokens(listToken.items,callback));break}default:{const genericToken=token;this.defaults.extensions?.childTokens?.[genericToken.type]?this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens=>{const tokens=genericToken[childTokens].flat(1/0);values=values.concat(this.walkTokens(tokens,callback))})):genericToken.tokens&&(values=values.concat(this.walkTokens(genericToken.tokens,callback)))}}return values}use(...args){const extensions=this.defaults.extensions||{renderers:{},childTokens:{}};return args.forEach((pack=>{const opts={...pack};if(opts.async=this.defaults.async||opts.async||!1,pack.extensions&&(pack.extensions.forEach((ext=>{if(!ext.name)throw new Error("extension name required");if("renderer"in ext){const prevRenderer=extensions.renderers[ext.name];extensions.renderers[ext.name]=prevRenderer?function(...args){let ret=ext.renderer.apply(this,args);return!1===ret&&(ret=prevRenderer.apply(this,args)),ret}:ext.renderer}if("tokenizer"in ext){if(!ext.level||"block"!==ext.level&&"inline"!==ext.level)throw new Error("extension level must be 'block' or 'inline'");const extLevel=extensions[ext.level];extLevel?extLevel.unshift(ext.tokenizer):extensions[ext.level]=[ext.tokenizer],ext.start&&("block"===ext.level?extensions.startBlock?extensions.startBlock.push(ext.start):extensions.startBlock=[ext.start]:"inline"===ext.level&&(extensions.startInline?extensions.startInline.push(ext.start):extensions.startInline=[ext.start]))}"childTokens"in ext&&ext.childTokens&&(extensions.childTokens[ext.name]=ext.childTokens)})),opts.extensions=extensions),pack.renderer){const renderer=this.defaults.renderer||new _Renderer(this.defaults);for(const prop in pack.renderer){if(!(prop in renderer))throw new Error(`renderer '${prop}' does not exist`);if(["options","parser"].includes(prop))continue;const rendererProp=prop,rendererFunc=pack.renderer[rendererProp],prevRenderer=renderer[rendererProp];renderer[rendererProp]=(...args)=>{let ret=rendererFunc.apply(renderer,args);return!1===ret&&(ret=prevRenderer.apply(renderer,args)),ret||""}}opts.renderer=renderer}if(pack.tokenizer){const tokenizer=this.defaults.tokenizer||new _Tokenizer(this.defaults);for(const prop in pack.tokenizer){if(!(prop in tokenizer))throw new Error(`tokenizer '${prop}' does not exist`);if(["options","rules","lexer"].includes(prop))continue;const tokenizerProp=prop,tokenizerFunc=pack.tokenizer[tokenizerProp],prevTokenizer=tokenizer[tokenizerProp];tokenizer[tokenizerProp]=(...args)=>{let ret=tokenizerFunc.apply(tokenizer,args);return!1===ret&&(ret=prevTokenizer.apply(tokenizer,args)),ret}}opts.tokenizer=tokenizer}if(pack.hooks){const hooks=this.defaults.hooks||new _Hooks;for(const prop in pack.hooks){if(!(prop in hooks))throw new Error(`hook '${prop}' does not exist`);if(["options","block"].includes(prop))continue;const hooksProp=prop,hooksFunc=pack.hooks[hooksProp],prevHook=hooks[hooksProp];_Hooks.passThroughHooks.has(prop)?hooks[hooksProp]=arg=>{if(this.defaults.async)return Promise.resolve(hooksFunc.call(hooks,arg)).then((ret=>prevHook.call(hooks,ret)));const ret=hooksFunc.call(hooks,arg);return prevHook.call(hooks,ret)}:hooks[hooksProp]=(...args)=>{let ret=hooksFunc.apply(hooks,args);return!1===ret&&(ret=prevHook.apply(hooks,args)),ret}}opts.hooks=hooks}if(pack.walkTokens){const walkTokens=this.defaults.walkTokens,packWalktokens=pack.walkTokens;opts.walkTokens=function(token){let values=[];return values.push(packWalktokens.call(this,token)),walkTokens&&(values=values.concat(walkTokens.call(this,token))),values}}this.defaults={...this.defaults,...opts}})),this}setOptions(opt){return this.defaults={...this.defaults,...opt},this}lexer(src,options){return _Lexer.lex(src,options??this.defaults)}parser(tokens,options){return _Parser.parse(tokens,options??this.defaults)}parseMarkdown(blockType){return(src,options)=>{const origOpt={...options},opt={...this.defaults,...origOpt},throwError=this.onError(!!opt.silent,!!opt.async);if(!0===this.defaults.async&&!1===origOpt.async)return throwError(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));if(null==src)return throwError(new Error("marked(): input parameter is undefined or null"));if("string"!=typeof src)return throwError(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(src)+", string expected"));opt.hooks&&(opt.hooks.options=opt,opt.hooks.block=blockType);const lexer=opt.hooks?opt.hooks.provideLexer():blockType?_Lexer.lex:_Lexer.lexInline,parser=opt.hooks?opt.hooks.provideParser():blockType?_Parser.parse:_Parser.parseInline;if(opt.async)return Promise.resolve(opt.hooks?opt.hooks.preprocess(src):src).then((src=>lexer(src,opt))).then((tokens=>opt.hooks?opt.hooks.processAllTokens(tokens):tokens)).then((tokens=>opt.walkTokens?Promise.all(this.walkTokens(tokens,opt.walkTokens)).then((()=>tokens)):tokens)).then((tokens=>parser(tokens,opt))).then((html=>opt.hooks?opt.hooks.postprocess(html):html)).catch(throwError);try{opt.hooks&&(src=opt.hooks.preprocess(src));let tokens=lexer(src,opt);opt.hooks&&(tokens=opt.hooks.processAllTokens(tokens)),opt.walkTokens&&this.walkTokens(tokens,opt.walkTokens);let html=parser(tokens,opt);return opt.hooks&&(html=opt.hooks.postprocess(html)),html}catch(e){return throwError(e)}}}onError(silent,async){return e=>{if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",silent){const msg="<p>An error occurred:</p><pre>"+escape(e.message+"",!0)+"</pre>";return async?Promise.resolve(msg):msg}if(async)return Promise.reject(e);throw e}}};function marked(src,opt){return markedInstance.parse(src,opt)}marked.options=marked.setOptions=function(options){return markedInstance.setOptions(options),marked.defaults=markedInstance.defaults,changeDefaults(marked.defaults),marked},marked.getDefaults=_getDefaults,marked.defaults=_defaults,marked.use=function(...args){return markedInstance.use(...args),marked.defaults=markedInstance.defaults,changeDefaults(marked.defaults),marked},marked.walkTokens=function(tokens,callback){return markedInstance.walkTokens(tokens,callback)},marked.parseInline=markedInstance.parseInline,marked.Parser=_Parser,marked.parser=_Parser.parse,marked.Renderer=_Renderer,marked.TextRenderer=_TextRenderer,marked.Lexer=_Lexer,marked.lexer=_Lexer.lex,marked.Tokenizer=_Tokenizer,marked.Hooks=_Hooks,marked.parse=marked;marked.options,marked.setOptions,marked.use,marked.walkTokens,marked.parseInline,_Parser.parse,_Lexer.lex}}]);