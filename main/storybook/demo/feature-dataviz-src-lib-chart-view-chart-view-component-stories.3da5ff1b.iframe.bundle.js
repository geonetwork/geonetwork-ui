(self.webpackChunkgeonetwork_ui=self.webpackChunkgeonetwork_ui||[]).push([[6065],{"./libs/feature/dataviz/src/lib/chart-view/chart-view.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{b:()=>ChartViewComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var chart_view_componentngResource=__webpack_require__("./libs/feature/dataviz/src/lib/chart-view/chart-view.component.css?ngResource"),chart_view_componentngResource_default=__webpack_require__.n(chart_view_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),biesbjerg_ngx_translate_extract_marker=__webpack_require__("./node_modules/@biesbjerg/ngx-translate-extract-marker/fesm5/biesbjerg-ngx-translate-extract-marker.js"),src=__webpack_require__("./libs/util/data-fetcher/src/index.ts"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),data_service=__webpack_require__("./libs/feature/dataviz/src/lib/service/data.service.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/fesm2020/ngx-translate-core.mjs");(0,biesbjerg_ngx_translate_extract_marker.J)("chart.type.bar"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.type.barHorizontal"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.type.line"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.type.lineSmooth"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.type.pie"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.aggregation.sum"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.aggregation.max"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.aggregation.min"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.aggregation.average"),(0,biesbjerg_ngx_translate_extract_marker.J)("chart.aggregation.count");let ChartViewComponent=class ChartViewComponent{set link(value){this.currentLink$.next(value)}set aggregation(value){this.aggregation$.next(value)}set xProperty(value){this.xProperty$.next(value)}set yProperty(value){this.yProperty$.next(value)}set chartType(value){this.chartType$.next(value)}get aggregationChoices(){return this.yProperty$.value?[{label:"chart.aggregation.sum",value:"sum"},{label:"chart.aggregation.max",value:"max"},{label:"chart.aggregation.min",value:"min"},{label:"chart.aggregation.average",value:"average"},{label:"chart.aggregation.count",value:"count"}]:[{label:"chart.aggregation.count",value:"count"}]}get labelProperty(){return this.xProperty$.value?`distinct(${this.xProperty$.value})`:""}get valueProperty(){return this.isCountAggregation?"count()":`${this.aggregation$.value}(${this.yProperty$.value})`}get isCountAggregation(){return"count"===this.aggregation$.value}constructor(dataService,changeDetector,translateService){this.dataService=dataService,this.changeDetector=changeDetector,this.translateService=translateService,this.currentLink$=new BehaviorSubject.X(null),this.aggregation$=new BehaviorSubject.X("sum"),this.xProperty$=new BehaviorSubject.X(void 0),this.yProperty$=new BehaviorSubject.X(void 0),this.chartType$=new BehaviorSubject.X("bar"),this.chartConfig$=(0,combineLatest.a)([this.xProperty$.pipe((0,filter.h)((value=>void 0!==value))),this.yProperty$.pipe((0,filter.h)((value=>void 0!==value))),this.aggregation$,this.chartType$]).pipe((0,map.U)((([xProperty,yProperty,aggregation,chartType])=>({aggregation,xProperty,yProperty,chartType})))),this.loading=!1,this.error=null,this.errorInfo=null,this.typeChoices=[{label:"chart.type.bar",value:"bar"},{label:"chart.type.barHorizontal",value:"bar-horizontal"},{label:"chart.type.line",value:"line"},{label:"chart.type.lineSmooth",value:"line-interpolated"},{label:"chart.type.pie",value:"pie"}],this.dataset$=this.currentLink$.pipe((0,filter.h)((link=>!!link)),(0,switchMap.w)((link=>(this.error=null,this.loading=!0,this.dataService.getDataset(link).pipe((0,catchError.K)((error=>(this.handleError(error),empty.E))))))),(0,shareReplay.d)(1)),this.properties$=this.dataset$.pipe((0,switchMap.w)((dataset=>dataset.properties.catch((error=>(this.handleError(error),[]))))),(0,shareReplay.d)(1)),this.yChoices$=this.properties$.pipe((0,map.U)((properties=>properties.filter((prop=>"number"===prop.type||"date"===prop.type)).map((prop=>({value:prop.name,label:prop.label||prop.name}))))),(0,tap.b)((choices=>{if(!choices.find((choice=>choice.value===this.yProperty$.value))){const newProp=choices[0]?.value||"";newProp||"count"===this.aggregation$.value||this.aggregation$.next("count"),this.yProperty$.next(newProp)}}))),this.xChoices$=this.properties$.pipe((0,map.U)((properties=>properties.filter((prop=>"string"===prop.type)).map((prop=>({value:prop.name,label:prop.label||prop.name}))))),(0,tap.b)((choices=>{choices.find((choice=>choice.value===this.xProperty$.value))||this.xProperty$.next(choices[0]?.value||"")}))),this.chartData$=(0,combineLatest.a)([this.dataset$,this.xProperty$.pipe((0,filter.h)((value=>void 0!==value))),this.yProperty$.pipe((0,filter.h)((value=>void 0!==value))),this.aggregation$]).pipe((0,switchMap.w)((([dataset,xProp,yProp,aggregation])=>{const fieldAgg="count"===aggregation?["count"]:[aggregation,yProp];return dataset.groupBy(["distinct",xProp]).aggregate(fieldAgg).read().catch((error=>(this.handleError(error),[]))).finally((()=>{this.loading=!1}))})),(0,map.U)(src.fW),(0,startWith.O)([]),(0,shareReplay.d)(1))}handleError(error){error instanceof src.kp?(this.error=this.translateService.instant(`dataset.error.${error.type}`,{info:error.info}),console.warn(error.message)):error instanceof Error?(this.error=this.translateService.instant(error.message),console.warn(error.stack||error)):(this.error=this.translateService.instant(error),console.warn(error)),this.loading=!1,this.changeDetector.detectChanges()}static#_=this.ctorParameters=()=>[{type:data_service.D},{type:core.ChangeDetectorRef},{type:ngx_translate_core.sK}];static#_2=this.propDecorators={link:[{type:core.Input}],aggregation:[{type:core.Input}],xProperty:[{type:core.Input}],yProperty:[{type:core.Input}],chartType:[{type:core.Input}],chartConfig$:[{type:core.Output}]}};ChartViewComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"gn-ui-chart-view",template:'<div class="w-full h-full flex flex-col">\n  <div\n    class="flex flex-col space-y-2 sm:flex-row sm:space-y-0 sm:space-x-2 justify-between text-[13px]"\n  >\n    <gn-ui-dropdown-selector\n      class="basis-1/4"\n      [choices]="typeChoices"\n      [extraBtnClass]="\'secondary min-w-full\'"\n      (selectValue)="chartType$.next($event)"\n      [selected]="chartType$.value"\n      [title]="\'chart.dropdown.type\' | translate"\n    ></gn-ui-dropdown-selector>\n    <gn-ui-dropdown-selector\n      class="basis-1/4"\n      [choices]="xChoices$ | async"\n      [extraBtnClass]="\'secondary min-w-full\'"\n      (selectValue)="xProperty$.next($event)"\n      [selected]="xProperty$.value"\n      [title]="\'chart.dropdown.xProperty\' | translate"\n    ></gn-ui-dropdown-selector>\n    <gn-ui-dropdown-selector\n      class="basis-1/4"\n      *ngIf="!isCountAggregation"\n      [choices]="yChoices$ | async"\n      (selectValue)="yProperty$.next($event)"\n      [selected]="yProperty$.value"\n      [title]="\'chart.dropdown.yProperty\' | translate"\n      class="select-y-prop"\n    ></gn-ui-dropdown-selector>\n    <gn-ui-dropdown-selector\n      class="basis-1/4"\n      [choices]="aggregationChoices"\n      class="aggregation-choices"\n      (selectValue)="aggregation$.next($event)"\n      [selected]="aggregation$.value"\n      [title]="\'chart.dropdown.aggregation\' | translate"\n    ></gn-ui-dropdown-selector>\n  </div>\n  <div\n    class="relative h-full mt-2 bg-white border border-gray-300 rounded-lg overflow-hidden"\n  >\n    <gn-ui-chart\n      [data]="chartData$ | async"\n      [type]="chartType$.value"\n      [labelProperty]="labelProperty"\n      [valueProperty]="valueProperty"\n    ></gn-ui-chart>\n    <gn-ui-loading-mask\n      *ngIf="loading"\n      class="absolute inset-0"\n      [message]="\'chart.loading.data\' | translate"\n    ></gn-ui-loading-mask>\n    <gn-ui-popup-alert\n      *ngIf="error"\n      type="warning"\n      icon="error_outline"\n      class="absolute m-2 inset-0"\n    >\n      <span>{{ error }}</span>\n    </gn-ui-popup-alert>\n  </div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[chart_view_componentngResource_default()]}),(0,tslib_es6.w6)("design:paramtypes",[data_service.D,core.ChangeDetectorRef,ngx_translate_core.sK])],ChartViewComponent)},"./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>firstValueFrom});var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/EmptyError.js"),_Subscriber__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscriber.js");function firstValueFrom(source,config){var hasConfig="object"==typeof config;return new Promise((function(resolve,reject){var subscriber=new _Subscriber__WEBPACK_IMPORTED_MODULE_0__.Hp({next:function(value){resolve(value),subscriber.unsubscribe()},error:reject,complete:function(){hasConfig?resolve(config.defaultValue):reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__.K)}});source.subscribe(subscriber)}))}},"./libs/feature/dataviz/src/lib/chart-view/chart-view.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),_geonetwork_ui_util_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/util/i18n/src/index.ts"),_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@ngx-translate/core/fesm2020/ngx-translate-core.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_chart_view_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/feature/dataviz/src/lib/chart-view/chart-view.component.ts"),_geonetwork_ui_ui_dataviz__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/ui/dataviz/src/index.ts"),_angular_core__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_geonetwork_ui_ui_inputs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/ui/inputs/src/index.ts"),_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/cdk/fesm2022/overlay.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Smart/Dataviz/ChartView",component:_chart_view_component__WEBPACK_IMPORTED_MODULE_2__.b,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.moduleMetadata)({imports:[_geonetwork_ui_ui_dataviz__WEBPACK_IMPORTED_MODULE_3__.xH,_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_5__.U8,_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.aw.forRoot(_geonetwork_ui_util_i18n__WEBPACK_IMPORTED_MODULE_0__.fR),_geonetwork_ui_ui_inputs__WEBPACK_IMPORTED_MODULE_4__.uU]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.applicationConfig)({providers:[(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.importProvidersFrom)(_geonetwork_ui_ui_dataviz__WEBPACK_IMPORTED_MODULE_3__.CP),(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.importProvidersFrom)(_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__.BrowserAnimationsModule),(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.importProvidersFrom)(_angular_common_http__WEBPACK_IMPORTED_MODULE_9__.JF)]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.componentWrapperDecorator)((story=>`<div class="border border-gray-300 h-[500px] w-[800px] p-[10px]" style="resize: both; overflow: auto">${story}</div>`))]},LINKS={wfs:{description:"US states",name:"topp:states",url:new URL("https://ahocevar.com/geoserver/wfs?service=WFS&version=1.1.0&request=GetCapabilities"),type:"service",accessServiceProtocol:"wfs"},csv:{description:"France departments",url:new URL("https://www.data.gouv.fr/fr/datasets/r/70cef74f-70b1-495a-8500-c089229c0254"),type:"download"}},Primary={args:{link:"wfs"},argTypes:{link:{control:"radio",options:Object.keys(LINKS)}},render:args=>({props:{...args,link:LINKS[args.link]}})}},"./libs/feature/dataviz/src/lib/chart-view/chart-view.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);