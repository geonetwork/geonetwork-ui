"use strict";(self.webpackChunkgeonetwork_ui=self.webpackChunkgeonetwork_ui||[]).push([[7270],{"./node_modules/ol/format/Feature.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{YU:()=>createGeometry,zg:()=>createRenderFeature,ZP:()=>format_Feature,lj:()=>transformExtentWithOptions,fI:()=>transformGeometryWithOptions});var Feature=__webpack_require__("./node_modules/ol/Feature.js"),render_Feature=__webpack_require__("./node_modules/ol/render/Feature.js"),Point=__webpack_require__("./node_modules/ol/geom/Point.js"),LineString=__webpack_require__("./node_modules/ol/geom/LineString.js"),Polygon=__webpack_require__("./node_modules/ol/geom/Polygon.js"),MultiPoint=__webpack_require__("./node_modules/ol/geom/MultiPoint.js"),MultiLineString=__webpack_require__("./node_modules/ol/geom/MultiLineString.js"),MultiPolygon=__webpack_require__("./node_modules/ol/geom/MultiPolygon.js"),EventType=__webpack_require__("./node_modules/ol/events/EventType.js"),Geometry=__webpack_require__("./node_modules/ol/geom/Geometry.js"),ol_extent=__webpack_require__("./node_modules/ol/extent.js"),events=__webpack_require__("./node_modules/ol/events.js");class GeometryCollection extends Geometry.Z{constructor(geometries){super(),this.geometries_=geometries||null,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(events.bN),this.changeEventsKeys_.length=0}listenGeometriesChange_(){if(this.geometries_)for(let i=0,ii=this.geometries_.length;i<ii;++i)this.changeEventsKeys_.push((0,events.oL)(this.geometries_[i],EventType.Z.CHANGE,this.changed,this))}clone(){const geometryCollection=new GeometryCollection(null);return geometryCollection.setGeometries(this.geometries_),geometryCollection.applyProperties(this),geometryCollection}closestPointXY(x,y,closestPoint,minSquaredDistance){if(minSquaredDistance<(0,ol_extent.qf)(this.getExtent(),x,y))return minSquaredDistance;const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)minSquaredDistance=geometries[i].closestPointXY(x,y,closestPoint,minSquaredDistance);return minSquaredDistance}containsXY(x,y){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)if(geometries[i].containsXY(x,y))return!0;return!1}computeExtent(extent){(0,ol_extent.YN)(extent);const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)(0,ol_extent.l7)(extent,geometries[i].getExtent());return extent}getGeometries(){return cloneGeometries(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let geometriesArray=[];const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].getType()===this.getType()?geometriesArray=geometriesArray.concat(geometries[i].getGeometriesArrayRecursive()):geometriesArray.push(geometries[i]);return geometriesArray}getSimplifiedGeometry(squaredTolerance){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),squaredTolerance<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&squaredTolerance<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const simplifiedGeometries=[],geometries=this.geometries_;let simplified=!1;for(let i=0,ii=geometries.length;i<ii;++i){const geometry=geometries[i],simplifiedGeometry=geometry.getSimplifiedGeometry(squaredTolerance);simplifiedGeometries.push(simplifiedGeometry),simplifiedGeometry!==geometry&&(simplified=!0)}if(simplified){const simplifiedGeometryCollection=new GeometryCollection(null);return simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries),simplifiedGeometryCollection}return this.simplifiedGeometryMaxMinSquaredTolerance=squaredTolerance,this}getType(){return"GeometryCollection"}intersectsExtent(extent){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)if(geometries[i].intersectsExtent(extent))return!0;return!1}isEmpty(){return 0===this.geometries_.length}rotate(angle,anchor){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].rotate(angle,anchor);this.changed()}scale(sx,sy,anchor){anchor||(anchor=(0,ol_extent.qg)(this.getExtent()));const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].scale(sx,sy,anchor);this.changed()}setGeometries(geometries){this.setGeometriesArray(cloneGeometries(geometries))}setGeometriesArray(geometries){this.unlistenGeometriesChange_(),this.geometries_=geometries,this.listenGeometriesChange_(),this.changed()}applyTransform(transformFn){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].applyTransform(transformFn);this.changed()}translate(deltaX,deltaY){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].translate(deltaX,deltaY);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function cloneGeometries(geometries){const clonedGeometries=[];for(let i=0,ii=geometries.length;i<ii;++i)clonedGeometries.push(geometries[i].clone());return clonedGeometries}const geom_GeometryCollection=GeometryCollection;var util=__webpack_require__("./node_modules/ol/util.js"),proj=__webpack_require__("./node_modules/ol/proj.js"),orient=__webpack_require__("./node_modules/ol/geom/flat/orient.js");const format_Feature=class FeatureFormat{constructor(){this.dataProjection=void 0,this.defaultFeatureProjection=void 0,this.featureClass=Feature.Z,this.supportedMediaTypes=null}getReadOptions(source,options){if(options){let dataProjection=options.dataProjection?(0,proj.U2)(options.dataProjection):this.readProjection(source);options.extent&&dataProjection&&"tile-pixels"===dataProjection.getUnits()&&(dataProjection=(0,proj.U2)(dataProjection),dataProjection.setWorldExtent(options.extent)),options={dataProjection,featureProjection:options.featureProjection}}return this.adaptOptions(options)}adaptOptions(options){return Object.assign({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection,featureClass:this.featureClass},options)}getType(){return(0,util.O3)()}readFeature(source,options){return(0,util.O3)()}readFeatures(source,options){return(0,util.O3)()}readGeometry(source,options){return(0,util.O3)()}readProjection(source){return(0,util.O3)()}writeFeature(feature,options){return(0,util.O3)()}writeFeatures(features,options){return(0,util.O3)()}writeGeometry(geometry,options){return(0,util.O3)()}};function transformGeometryWithOptions(geometry,write,options){const featureProjection=options?(0,proj.U2)(options.featureProjection):null,dataProjection=options?(0,proj.U2)(options.dataProjection):null;let transformed=geometry;if(featureProjection&&dataProjection&&!(0,proj.OP)(featureProjection,dataProjection)){write&&(transformed=geometry.clone());const fromProjection=write?featureProjection:dataProjection,toProjection=write?dataProjection:featureProjection;"tile-pixels"===fromProjection.getUnits()?transformed.transform(fromProjection,toProjection):transformed.applyTransform((0,proj.Ck)(fromProjection,toProjection))}if(write&&options&&void 0!==options.decimals){const power=Math.pow(10,options.decimals),transform=function(coordinates){for(let i=0,ii=coordinates.length;i<ii;++i)coordinates[i]=Math.round(coordinates[i]*power)/power;return coordinates};transformed===geometry&&(transformed=geometry.clone()),transformed.applyTransform(transform)}return transformed}function transformExtentWithOptions(extent,options){const featureProjection=options?(0,proj.U2)(options.featureProjection):null,dataProjection=options?(0,proj.U2)(options.dataProjection):null;return featureProjection&&dataProjection&&!(0,proj.OP)(featureProjection,dataProjection)?(0,proj.$A)(extent,dataProjection,featureProjection):extent}const GeometryConstructor={Point:Point.Z,LineString:LineString.Z,Polygon:Polygon.ZP,MultiPoint:MultiPoint.Z,MultiLineString:MultiLineString.Z,MultiPolygon:MultiPolygon.Z};function createRenderFeature(object,options){const geometry=object.geometry;if(!geometry)return[];if(Array.isArray(geometry))return geometry.map((geometry=>createRenderFeature({...object,geometry}))).flat();const geometryType="MultiPolygon"===geometry.type?"Polygon":geometry.type;if("GeometryCollection"===geometryType||"Circle"===geometryType)throw new Error("Unsupported geometry type: "+geometryType);const stride=geometry.layout.length;return transformGeometryWithOptions(new render_Feature.ZP(geometryType,"Polygon"===geometryType?function orientFlatCoordinates(flatCoordinates,ends,stride){return Array.isArray(ends[0])?((0,orient.Oj)(flatCoordinates,0,ends,stride)||(flatCoordinates=flatCoordinates.slice(),(0,orient.dL)(flatCoordinates,0,ends,stride)),flatCoordinates):((0,orient.$v)(flatCoordinates,0,ends,stride)||(flatCoordinates=flatCoordinates.slice(),(0,orient.zX)(flatCoordinates,0,ends,stride)),flatCoordinates)}(geometry.flatCoordinates,geometry.ends,stride):geometry.flatCoordinates,geometry.ends?.flat(),stride,object.properties||{},object.id).enableSimplifyTransformed(),!1,options)}function createGeometry(object,options){if(!object)return null;if(Array.isArray(object)){const geometries=object.map((geometry=>createGeometry(geometry,options)));return new geom_GeometryCollection(geometries)}return transformGeometryWithOptions(new(0,GeometryConstructor[object.type])(object.flatCoordinates,object.layout,object.ends),!1,options)}},"./node_modules/ol/format/GeoJSON.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>format_GeoJSON});var Feature=__webpack_require__("./node_modules/ol/Feature.js"),format_Feature=__webpack_require__("./node_modules/ol/format/Feature.js"),util=__webpack_require__("./node_modules/ol/util.js");class JSONFeature extends format_Feature.ZP{constructor(){super()}getType(){return"json"}readFeature(source,options){return this.readFeatureFromObject(getObject(source),this.getReadOptions(source,options))}readFeatures(source,options){return this.readFeaturesFromObject(getObject(source),this.getReadOptions(source,options))}readFeatureFromObject(object,options){return(0,util.O3)()}readFeaturesFromObject(object,options){return(0,util.O3)()}readGeometry(source,options){return this.readGeometryFromObject(getObject(source),this.getReadOptions(source,options))}readGeometryFromObject(object,options){return(0,util.O3)()}readProjection(source){return this.readProjectionFromObject(getObject(source))}readProjectionFromObject(object){return(0,util.O3)()}writeFeature(feature,options){return JSON.stringify(this.writeFeatureObject(feature,options))}writeFeatureObject(feature,options){return(0,util.O3)()}writeFeatures(features,options){return JSON.stringify(this.writeFeaturesObject(features,options))}writeFeaturesObject(features,options){return(0,util.O3)()}writeGeometry(geometry,options){return JSON.stringify(this.writeGeometryObject(geometry,options))}writeGeometryObject(geometry,options){return(0,util.O3)()}}function getObject(source){if("string"==typeof source){const object=JSON.parse(source);return object||null}return null!==source?source:null}const format_JSONFeature=JSONFeature;var render_Feature=__webpack_require__("./node_modules/ol/render/Feature.js"),deflate=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),SimpleGeometry=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),proj=__webpack_require__("./node_modules/ol/proj.js"),obj=__webpack_require__("./node_modules/ol/obj.js");function readGeometryInternal(object,options){if(!object)return null;let geometry;switch(object.type){case"Point":geometry=function readPointGeometry(object){const flatCoordinates=object.coordinates;return{type:"Point",flatCoordinates,layout:(0,SimpleGeometry.Ss)(flatCoordinates.length)}}(object);break;case"LineString":geometry=function readLineStringGeometry(object){const coordinates=object.coordinates,flatCoordinates=coordinates.flat();return{type:"LineString",flatCoordinates,ends:[flatCoordinates.length],layout:(0,SimpleGeometry.Ss)(coordinates[0].length)}}(object);break;case"Polygon":geometry=function readPolygonGeometry(object){const coordinates=object.coordinates,flatCoordinates=[],stride=coordinates[0][0].length,ends=(0,deflate._5)(flatCoordinates,0,coordinates,stride);return{type:"Polygon",flatCoordinates,ends,layout:(0,SimpleGeometry.Ss)(stride)}}(object);break;case"MultiPoint":geometry=function readMultiPointGeometry(object){const coordinates=object.coordinates;return{type:"MultiPoint",flatCoordinates:coordinates.flat(),layout:(0,SimpleGeometry.Ss)(coordinates[0].length)}}(object);break;case"MultiLineString":geometry=function readMultiLineStringGeometry(object){const coordinates=object.coordinates,stride=coordinates[0][0].length,flatCoordinates=[],ends=(0,deflate._5)(flatCoordinates,0,coordinates,stride);return{type:"MultiLineString",flatCoordinates,ends,layout:(0,SimpleGeometry.Ss)(stride)}}(object);break;case"MultiPolygon":geometry=function readMultiPolygonGeometry(object){const coordinates=object.coordinates,flatCoordinates=[],stride=coordinates[0][0][0].length,endss=(0,deflate.QT)(flatCoordinates,0,coordinates,stride);return{type:"MultiPolygon",flatCoordinates,ends:endss,layout:(0,SimpleGeometry.Ss)(stride)}}(object);break;case"GeometryCollection":geometry=function readGeometryCollectionGeometry(object,options){const geometries=object.geometries.map((function(geometry){return readGeometryInternal(geometry,options)}));return geometries}(object);break;default:throw new Error("Unsupported GeoJSON type: "+object.type)}return geometry}function writeGeometry(geometry,options){const type=(geometry=(0,format_Feature.fI)(geometry,!0,options)).getType();let geoJSON;switch(type){case"Point":geoJSON=function writePointGeometry(geometry,options){return{type:"Point",coordinates:geometry.getCoordinates()}}(geometry);break;case"LineString":geoJSON=function writeLineStringGeometry(geometry,options){return{type:"LineString",coordinates:geometry.getCoordinates()}}(geometry);break;case"Polygon":geoJSON=function writePolygonGeometry(geometry,options){let right;options&&(right=options.rightHanded);return{type:"Polygon",coordinates:geometry.getCoordinates(right)}}(geometry,options);break;case"MultiPoint":geoJSON=function writeMultiPointGeometry(geometry,options){return{type:"MultiPoint",coordinates:geometry.getCoordinates()}}(geometry);break;case"MultiLineString":geoJSON=function writeMultiLineStringGeometry(geometry,options){return{type:"MultiLineString",coordinates:geometry.getCoordinates()}}(geometry);break;case"MultiPolygon":geoJSON=function writeMultiPolygonGeometry(geometry,options){let right;options&&(right=options.rightHanded);return{type:"MultiPolygon",coordinates:geometry.getCoordinates(right)}}(geometry,options);break;case"GeometryCollection":geoJSON=function writeGeometryCollectionGeometry(geometry,options){options=Object.assign({},options),delete options.featureProjection;const geometries=geometry.getGeometriesArray().map((function(geometry){return writeGeometry(geometry,options)}));return{type:"GeometryCollection",geometries}}(geometry,options);break;case"Circle":geoJSON={type:"GeometryCollection",geometries:[]};break;default:throw new Error("Unsupported geometry type: "+type)}return geoJSON}const format_GeoJSON=class GeoJSON extends format_JSONFeature{constructor(options){options=options||{},super(),this.dataProjection=(0,proj.U2)(options.dataProjection?options.dataProjection:"EPSG:4326"),options.featureProjection&&(this.defaultFeatureProjection=(0,proj.U2)(options.featureProjection)),options.featureClass&&(this.featureClass=options.featureClass),this.geometryName_=options.geometryName,this.extractGeometryName_=options.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(object,options){let geoJSONFeature=null;geoJSONFeature="Feature"===object.type?object:{type:"Feature",geometry:object,properties:null};const geometry=readGeometryInternal(geoJSONFeature.geometry,options);if(this.featureClass===render_Feature.ZP)return(0,format_Feature.zg)({geometry,id:geoJSONFeature.id,properties:geoJSONFeature.properties},options);const feature=new Feature.Z;return this.geometryName_?feature.setGeometryName(this.geometryName_):this.extractGeometryName_&&"geometry_name"in geoJSONFeature!==void 0&&feature.setGeometryName(geoJSONFeature.geometry_name),feature.setGeometry((0,format_Feature.YU)(geometry,options)),"id"in geoJSONFeature&&feature.setId(geoJSONFeature.id),geoJSONFeature.properties&&feature.setProperties(geoJSONFeature.properties,!0),feature}readFeaturesFromObject(object,options){let features=null;if("FeatureCollection"===object.type){features=[];const geoJSONFeatures=object.features;for(let i=0,ii=geoJSONFeatures.length;i<ii;++i){const featureObject=this.readFeatureFromObject(geoJSONFeatures[i],options);featureObject&&features.push(featureObject)}}else features=[this.readFeatureFromObject(object,options)];return features.flat()}readGeometryFromObject(object,options){return function readGeometry(object,options){const geometryObject=readGeometryInternal(object,options);return(0,format_Feature.YU)(geometryObject,options)}(object,options)}readProjectionFromObject(object){const crs=object.crs;let projection;if(crs)if("name"==crs.type)projection=(0,proj.U2)(crs.properties.name);else{if("EPSG"!==crs.type)throw new Error("Unknown SRS type");projection=(0,proj.U2)("EPSG:"+crs.properties.code)}else projection=this.dataProjection;return projection}writeFeatureObject(feature,options){options=this.adaptOptions(options);const object={type:"Feature",geometry:null,properties:null},id=feature.getId();if(void 0!==id&&(object.id=id),!feature.hasProperties())return object;const properties=feature.getProperties(),geometry=feature.getGeometry();return geometry&&(object.geometry=writeGeometry(geometry,options),delete properties[feature.getGeometryName()]),(0,obj.x)(properties)||(object.properties=properties),object}writeFeaturesObject(features,options){options=this.adaptOptions(options);const objects=[];for(let i=0,ii=features.length;i<ii;++i)objects.push(this.writeFeatureObject(features[i],options));return{type:"FeatureCollection",features:objects}}writeGeometryObject(geometry,options){return writeGeometry(geometry,this.adaptOptions(options))}}},"./node_modules/ol/geom/LineString.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/closest.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/ol/geom/flat/simplify.js"),_array_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/array.js"),_flat_segments_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/segments.js"),_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/flat/inflate.js"),_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/flat/interpolate.js"),_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/ol/geom/flat/intersectsextent.js"),_flat_length_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/ol/geom/flat/length.js");class LineString extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout){super(),this.flatMidpoint_=null,this.flatMidpointRevision_=-1,this.maxDelta_=-1,this.maxDeltaRevision_=-1,void 0===layout||Array.isArray(coordinates[0])?this.setCoordinates(coordinates,layout):this.setFlatCoordinates(layout,coordinates)}appendCoordinate(coordinate){(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(this.flatCoordinates,coordinate),this.changed()}clone(){const lineString=new LineString(this.flatCoordinates.slice(),this.layout);return lineString.applyProperties(this),lineString}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qf)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.Bv)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.H$)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,x,y,closestPoint,minSquaredDistance))}forEachSegment(callback){return(0,_flat_segments_js__WEBPACK_IMPORTED_MODULE_4__.E)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,callback)}getCoordinateAtM(m,extrapolate){return"XYM"!=this.layout&&"XYZM"!=this.layout?null:(extrapolate=void 0!==extrapolate&&extrapolate,(0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_5__.iJ)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,m,extrapolate))}getCoordinates(){return(0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__.Ml)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinateAt(fraction,dest){return(0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_5__.WW)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,fraction,dest,this.stride)}getLength(){return(0,_flat_length_js__WEBPACK_IMPORTED_MODULE_7__.W)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getFlatMidpoint(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_??void 0),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[];return simplifiedFlatCoordinates.length=(0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__.dt)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,squaredTolerance,simplifiedFlatCoordinates,0),new LineString(simplifiedFlatCoordinates,"XY")}getType(){return"LineString"}intersectsExtent(extent){return(0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__.Kz)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_10__.Sg)(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=LineString},"./node_modules/ol/geom/LinearRing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/geom/flat/closest.js"),_extent_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_flat_simplify_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/flat/simplify.js"),_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/inflate.js"),_flat_area_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/area.js");class LinearRing extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout){super(),this.maxDelta_=-1,this.maxDeltaRevision_=-1,void 0===layout||Array.isArray(coordinates[0])?this.setCoordinates(coordinates,layout):this.setFlatCoordinates(layout,coordinates)}clone(){return new LinearRing(this.flatCoordinates.slice(),this.layout)}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.qf)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.Bv)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_2__.H$)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,x,y,closestPoint,minSquaredDistance))}getArea(){return(0,_flat_area_js__WEBPACK_IMPORTED_MODULE_3__.QQ)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinates(){return(0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__.Ml)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[];return simplifiedFlatCoordinates.length=(0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_5__.dt)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,squaredTolerance,simplifiedFlatCoordinates,0),new LinearRing(simplifiedFlatCoordinates,"XY")}getType(){return"LinearRing"}intersectsExtent(extent){return!1}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__.Sg)(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=LinearRing},"./node_modules/ol/geom/MultiLineString.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _LineString_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/LineString.js"),_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/closest.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_flat_simplify_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/ol/geom/flat/simplify.js"),_array_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/array.js"),_flat_inflate_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/flat/inflate.js"),_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/interpolate.js"),_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/ol/geom/flat/intersectsextent.js");class MultiLineString extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout,ends){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(coordinates[0]))this.setCoordinates(coordinates,layout);else if(void 0!==layout&&ends)this.setFlatCoordinates(layout,coordinates),this.ends_=ends;else{const lineStrings=coordinates,flatCoordinates=[],ends=[];for(let i=0,ii=lineStrings.length;i<ii;++i){const lineString=lineStrings[i];(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(flatCoordinates,lineString.getFlatCoordinates()),ends.push(flatCoordinates.length)}const layout=0===lineStrings.length?this.getLayout():lineStrings[0].getLayout();this.setFlatCoordinates(layout,flatCoordinates),this.ends_=ends}}appendLineString(lineString){(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(this.flatCoordinates,lineString.getFlatCoordinates().slice()),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const multiLineString=new MultiLineString(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return multiLineString.applyProperties(this),multiLineString}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qf)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.Af)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.Xl)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,x,y,closestPoint,minSquaredDistance))}getCoordinateAtM(m,extrapolate,interpolate){return"XYM"!=this.layout&&"XYZM"!=this.layout||0===this.flatCoordinates.length?null:(extrapolate=void 0!==extrapolate&&extrapolate,interpolate=void 0!==interpolate&&interpolate,(0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_4__.dG)(this.flatCoordinates,0,this.ends_,this.stride,m,extrapolate,interpolate))}getCoordinates(){return(0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_5__.o1)(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(index){return index<0||this.ends_.length<=index?null:new _LineString_js__WEBPACK_IMPORTED_MODULE_6__.Z(this.flatCoordinates.slice(0===index?0:this.ends_[index-1],this.ends_[index]),this.layout)}getLineStrings(){const flatCoordinates=this.flatCoordinates,ends=this.ends_,layout=this.layout,lineStrings=[];let offset=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],lineString=new _LineString_js__WEBPACK_IMPORTED_MODULE_6__.Z(flatCoordinates.slice(offset,end),layout);lineStrings.push(lineString),offset=end}return lineStrings}getFlatMidpoints(){const midpoints=[],flatCoordinates=this.flatCoordinates;let offset=0;const ends=this.ends_,stride=this.stride;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],midpoint=(0,_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_4__.WW)(flatCoordinates,offset,end,stride,.5);(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(midpoints,midpoint),offset=end}return midpoints}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[],simplifiedEnds=[];return simplifiedFlatCoordinates.length=(0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_7__.UJ)(this.flatCoordinates,0,this.ends_,this.stride,squaredTolerance,simplifiedFlatCoordinates,0,simplifiedEnds),new MultiLineString(simplifiedFlatCoordinates,"XY",simplifiedEnds)}getType(){return"MultiLineString"}intersectsExtent(extent){return(0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_8__.AW)(this.flatCoordinates,0,this.ends_,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,2),this.flatCoordinates||(this.flatCoordinates=[]);const ends=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_9__._5)(this.flatCoordinates,0,coordinates,this.stride,this.ends_);this.flatCoordinates.length=0===ends.length?0:ends[ends.length-1],this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=MultiLineString},"./node_modules/ol/geom/MultiPoint.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _Point_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/Point.js"),_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_array_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/array.js"),_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/inflate.js"),_math_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/math.js");class MultiPoint extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout){super(),layout&&!Array.isArray(coordinates[0])?this.setFlatCoordinates(layout,coordinates):this.setCoordinates(coordinates,layout)}appendPoint(point){(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(this.flatCoordinates,point.getFlatCoordinates()),this.changed()}clone(){const multiPoint=new MultiPoint(this.flatCoordinates.slice(),this.layout);return multiPoint.applyProperties(this),multiPoint}closestPointXY(x,y,closestPoint,minSquaredDistance){if(minSquaredDistance<(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qf)(this.getExtent(),x,y))return minSquaredDistance;const flatCoordinates=this.flatCoordinates,stride=this.stride;for(let i=0,ii=flatCoordinates.length;i<ii;i+=stride){const squaredDistance=(0,_math_js__WEBPACK_IMPORTED_MODULE_3__.bI)(x,y,flatCoordinates[i],flatCoordinates[i+1]);if(squaredDistance<minSquaredDistance){minSquaredDistance=squaredDistance;for(let j=0;j<stride;++j)closestPoint[j]=flatCoordinates[i+j];closestPoint.length=stride}}return minSquaredDistance}getCoordinates(){return(0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_4__.Ml)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getPoint(index){const n=this.flatCoordinates.length/this.stride;return index<0||n<=index?null:new _Point_js__WEBPACK_IMPORTED_MODULE_5__.Z(this.flatCoordinates.slice(index*this.stride,(index+1)*this.stride),this.layout)}getPoints(){const flatCoordinates=this.flatCoordinates,layout=this.layout,stride=this.stride,points=[];for(let i=0,ii=flatCoordinates.length;i<ii;i+=stride){const point=new _Point_js__WEBPACK_IMPORTED_MODULE_5__.Z(flatCoordinates.slice(i,i+stride),layout);points.push(point)}return points}getType(){return"MultiPoint"}intersectsExtent(extent){const flatCoordinates=this.flatCoordinates,stride=this.stride;for(let i=0,ii=flatCoordinates.length;i<ii;i+=stride){const x=flatCoordinates[i],y=flatCoordinates[i+1];if((0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.jE)(extent,x,y))return!0}return!1}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__.Sg)(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=MultiPoint},"./node_modules/ol/geom/MultiPolygon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _MultiPoint_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/ol/geom/MultiPoint.js"),_Polygon_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/ol/geom/Polygon.js"),_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/closest.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_array_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/array.js"),_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/ol/geom/flat/interiorpoint.js"),_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/ol/geom/flat/inflate.js"),_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/ol/geom/flat/intersectsextent.js"),_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/flat/orient.js"),_flat_area_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/flat/area.js"),_flat_center_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/ol/geom/flat/center.js"),_flat_contains_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/contains.js"),_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/ol/geom/flat/simplify.js");class MultiPolygon extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout,endss){if(super(),this.endss_=[],this.flatInteriorPointsRevision_=-1,this.flatInteriorPoints_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,!endss&&!Array.isArray(coordinates[0])){const polygons=coordinates,flatCoordinates=[],thisEndss=[];for(let i=0,ii=polygons.length;i<ii;++i){const polygon=polygons[i],offset=flatCoordinates.length,ends=polygon.getEnds();for(let j=0,jj=ends.length;j<jj;++j)ends[j]+=offset;(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(flatCoordinates,polygon.getFlatCoordinates()),thisEndss.push(ends)}layout=0===polygons.length?this.getLayout():polygons[0].getLayout(),coordinates=flatCoordinates,endss=thisEndss}void 0!==layout&&endss?(this.setFlatCoordinates(layout,coordinates),this.endss_=endss):this.setCoordinates(coordinates,layout)}appendPolygon(polygon){let ends;if(this.flatCoordinates){const offset=this.flatCoordinates.length;(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(this.flatCoordinates,polygon.getFlatCoordinates()),ends=polygon.getEnds().slice();for(let i=0,ii=ends.length;i<ii;++i)ends[i]+=offset}else this.flatCoordinates=polygon.getFlatCoordinates().slice(),ends=polygon.getEnds().slice(),this.endss_.push();this.endss_.push(ends),this.changed()}clone(){const len=this.endss_.length,newEndss=new Array(len);for(let i=0;i<len;++i)newEndss[i]=this.endss_[i].slice();const multiPolygon=new MultiPolygon(this.flatCoordinates.slice(),this.layout,newEndss);return multiPolygon.applyProperties(this),multiPolygon}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qf)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.sD)(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.gI)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,x,y,closestPoint,minSquaredDistance))}containsXY(x,y){return(0,_flat_contains_js__WEBPACK_IMPORTED_MODULE_4__.Zl)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,x,y)}getArea(){return(0,_flat_area_js__WEBPACK_IMPORTED_MODULE_5__.Eu)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)}getCoordinates(right){let flatCoordinates;return void 0!==right?(flatCoordinates=this.getOrientedFlatCoordinates().slice(),(0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__.dL)(flatCoordinates,0,this.endss_,this.stride,right)):flatCoordinates=this.flatCoordinates,(0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__.ug)(flatCoordinates,0,this.endss_,this.stride)}getEndss(){return this.endss_}getFlatInteriorPoints(){if(this.flatInteriorPointsRevision_!=this.getRevision()){const flatCenters=(0,_flat_center_js__WEBPACK_IMPORTED_MODULE_8__.E)(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=(0,_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_9__.U)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,flatCenters),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_}getInteriorPoints(){return new _MultiPoint_js__WEBPACK_IMPORTED_MODULE_10__.Z(this.getFlatInteriorPoints().slice(),"XYM")}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const flatCoordinates=this.flatCoordinates;(0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__.Oj)(flatCoordinates,0,this.endss_,this.stride)?this.orientedFlatCoordinates_=flatCoordinates:(this.orientedFlatCoordinates_=flatCoordinates.slice(),this.orientedFlatCoordinates_.length=(0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__.dL)(this.orientedFlatCoordinates_,0,this.endss_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[],simplifiedEndss=[];return simplifiedFlatCoordinates.length=(0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__.Pp)(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(squaredTolerance),simplifiedFlatCoordinates,0,simplifiedEndss),new MultiPolygon(simplifiedFlatCoordinates,"XY",simplifiedEndss)}getPolygon(index){if(index<0||this.endss_.length<=index)return null;let offset;if(0===index)offset=0;else{const prevEnds=this.endss_[index-1];offset=prevEnds[prevEnds.length-1]}const ends=this.endss_[index].slice(),end=ends[ends.length-1];if(0!==offset)for(let i=0,ii=ends.length;i<ii;++i)ends[i]-=offset;return new _Polygon_js__WEBPACK_IMPORTED_MODULE_12__.ZP(this.flatCoordinates.slice(offset,end),this.layout,ends)}getPolygons(){const layout=this.layout,flatCoordinates=this.flatCoordinates,endss=this.endss_,polygons=[];let offset=0;for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i].slice(),end=ends[ends.length-1];if(0!==offset)for(let j=0,jj=ends.length;j<jj;++j)ends[j]-=offset;const polygon=new _Polygon_js__WEBPACK_IMPORTED_MODULE_12__.ZP(flatCoordinates.slice(offset,end),layout,ends);polygons.push(polygon),offset=end}return polygons}getType(){return"MultiPolygon"}intersectsExtent(extent){return(0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_13__.oW)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,3),this.flatCoordinates||(this.flatCoordinates=[]);const endss=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_14__.QT)(this.flatCoordinates,0,coordinates,this.stride,this.endss_);if(0===endss.length)this.flatCoordinates.length=0;else{const lastEnds=endss[endss.length-1];this.flatCoordinates.length=0===lastEnds.length?0:lastEnds[lastEnds.length-1]}this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=MultiPolygon},"./node_modules/ol/geom/Point.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_math_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/math.js");class Point extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout){super(),this.setCoordinates(coordinates,layout)}clone(){const point=new Point(this.flatCoordinates.slice(),this.layout);return point.applyProperties(this),point}closestPointXY(x,y,closestPoint,minSquaredDistance){const flatCoordinates=this.flatCoordinates,squaredDistance=(0,_math_js__WEBPACK_IMPORTED_MODULE_1__.bI)(x,y,flatCoordinates[0],flatCoordinates[1]);if(squaredDistance<minSquaredDistance){const stride=this.stride;for(let i=0;i<stride;++i)closestPoint[i]=flatCoordinates[i];return closestPoint.length=stride,squaredDistance}return minSquaredDistance}getCoordinates(){return this.flatCoordinates.slice()}computeExtent(extent){return(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.HK)(this.flatCoordinates,extent)}getType(){return"Point"}intersectsExtent(extent){return(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.jE)(extent,this.flatCoordinates[0],this.flatCoordinates[1])}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__.IG)(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=Point},"./node_modules/ol/geom/Polygon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ZP:()=>__WEBPACK_DEFAULT_EXPORT__,oJ:()=>fromExtent});var _LinearRing_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/ol/geom/LinearRing.js"),_Point_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/ol/geom/Point.js"),_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/SimpleGeometry.js"),_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/closest.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_flat_deflate_js__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/ol/geom/flat/deflate.js"),_array_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/array.js"),_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/ol/geom/flat/interiorpoint.js"),_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/ol/geom/flat/inflate.js"),_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/ol/geom/flat/intersectsextent.js"),_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/flat/orient.js"),_flat_area_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/flat/area.js"),_flat_contains_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/contains.js"),_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/ol/geom/flat/simplify.js");class Polygon extends _SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ZP{constructor(coordinates,layout,ends){super(),this.ends_=[],this.flatInteriorPointRevision_=-1,this.flatInteriorPoint_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,void 0!==layout&&ends?(this.setFlatCoordinates(layout,coordinates),this.ends_=ends):this.setCoordinates(coordinates,layout)}appendLinearRing(linearRing){this.flatCoordinates?(0,_array_js__WEBPACK_IMPORTED_MODULE_1__.l7)(this.flatCoordinates,linearRing.getFlatCoordinates()):this.flatCoordinates=linearRing.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const polygon=new Polygon(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return polygon.applyProperties(this),polygon}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qf)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.Af)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,_flat_closest_js__WEBPACK_IMPORTED_MODULE_3__.Xl)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,x,y,closestPoint,minSquaredDistance))}containsXY(x,y){return(0,_flat_contains_js__WEBPACK_IMPORTED_MODULE_4__.wY)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,x,y)}getArea(){return(0,_flat_area_js__WEBPACK_IMPORTED_MODULE_5__.KP)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)}getCoordinates(right){let flatCoordinates;return void 0!==right?(flatCoordinates=this.getOrientedFlatCoordinates().slice(),(0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__.zX)(flatCoordinates,0,this.ends_,this.stride,right)):flatCoordinates=this.flatCoordinates,(0,_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__.o1)(flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getFlatInteriorPoint(){if(this.flatInteriorPointRevision_!=this.getRevision()){const flatCenter=(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qg)(this.getExtent());this.flatInteriorPoint_=(0,_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_8__.X)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,flatCenter,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_}getInteriorPoint(){return new _Point_js__WEBPACK_IMPORTED_MODULE_9__.Z(this.getFlatInteriorPoint(),"XYM")}getLinearRingCount(){return this.ends_.length}getLinearRing(index){return index<0||this.ends_.length<=index?null:new _LinearRing_js__WEBPACK_IMPORTED_MODULE_10__.Z(this.flatCoordinates.slice(0===index?0:this.ends_[index-1],this.ends_[index]),this.layout)}getLinearRings(){const layout=this.layout,flatCoordinates=this.flatCoordinates,ends=this.ends_,linearRings=[];let offset=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],linearRing=new _LinearRing_js__WEBPACK_IMPORTED_MODULE_10__.Z(flatCoordinates.slice(offset,end),layout);linearRings.push(linearRing),offset=end}return linearRings}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const flatCoordinates=this.flatCoordinates;(0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__.$v)(flatCoordinates,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=flatCoordinates:(this.orientedFlatCoordinates_=flatCoordinates.slice(),this.orientedFlatCoordinates_.length=(0,_flat_orient_js__WEBPACK_IMPORTED_MODULE_6__.zX)(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[],simplifiedEnds=[];return simplifiedFlatCoordinates.length=(0,_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__.Zh)(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(squaredTolerance),simplifiedFlatCoordinates,0,simplifiedEnds),new Polygon(simplifiedFlatCoordinates,"XY",simplifiedEnds)}getType(){return"Polygon"}intersectsExtent(extent){return(0,_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_12__.ac)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,2),this.flatCoordinates||(this.flatCoordinates=[]);const ends=(0,_flat_deflate_js__WEBPACK_IMPORTED_MODULE_13__._5)(this.flatCoordinates,0,coordinates,this.stride,this.ends_);this.flatCoordinates.length=0===ends.length?0:ends[ends.length-1],this.changed()}}const __WEBPACK_DEFAULT_EXPORT__=Polygon;function fromExtent(extent){if((0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.xb)(extent))throw new Error("Cannot create polygon from empty extent");const minX=extent[0],minY=extent[1],maxX=extent[2],maxY=extent[3],flatCoordinates=[minX,minY,minX,maxY,maxX,maxY,maxX,minY,minX,minY];return new Polygon(flatCoordinates,"XY",[flatCoordinates.length])}},"./node_modules/ol/geom/SimpleGeometry.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Kr:()=>transformGeom2D,Ss:()=>getLayoutForStride,ZP:()=>__WEBPACK_DEFAULT_EXPORT__});var _Geometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/geom/Geometry.js"),_util_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/util.js"),_extent_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/extent.js"),_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/transform.js");class SimpleGeometry extends _Geometry_js__WEBPACK_IMPORTED_MODULE_0__.Z{constructor(){super(),this.layout="XY",this.stride=2,this.flatCoordinates}computeExtent(extent){return(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.GN)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,extent)}getCoordinates(){return(0,_util_js__WEBPACK_IMPORTED_MODULE_2__.O3)()}getFirstCoordinate(){return this.flatCoordinates.slice(0,this.stride)}getFlatCoordinates(){return this.flatCoordinates}getLastCoordinate(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)}getLayout(){return this.layout}getSimplifiedGeometry(squaredTolerance){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),squaredTolerance<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&squaredTolerance<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;const simplifiedGeometry=this.getSimplifiedGeometryInternal(squaredTolerance);return simplifiedGeometry.getFlatCoordinates().length<this.flatCoordinates.length?simplifiedGeometry:(this.simplifiedGeometryMaxMinSquaredTolerance=squaredTolerance,this)}getSimplifiedGeometryInternal(squaredTolerance){return this}getStride(){return this.stride}setFlatCoordinates(layout,flatCoordinates){this.stride=getStrideForLayout(layout),this.layout=layout,this.flatCoordinates=flatCoordinates}setCoordinates(coordinates,layout){(0,_util_js__WEBPACK_IMPORTED_MODULE_2__.O3)()}setLayout(layout,coordinates,nesting){let stride;if(layout)stride=getStrideForLayout(layout);else{for(let i=0;i<nesting;++i){if(0===coordinates.length)return this.layout="XY",void(this.stride=2);coordinates=coordinates[0]}stride=coordinates.length,layout=getLayoutForStride(stride)}this.layout=layout,this.stride=stride}applyTransform(transformFn){this.flatCoordinates&&(transformFn(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())}rotate(angle,anchor){const flatCoordinates=this.getFlatCoordinates();if(flatCoordinates){const stride=this.getStride();(0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.U1)(flatCoordinates,0,flatCoordinates.length,stride,angle,anchor,flatCoordinates),this.changed()}}scale(sx,sy,anchor){void 0===sy&&(sy=sx),anchor||(anchor=(0,_extent_js__WEBPACK_IMPORTED_MODULE_1__.qg)(this.getExtent()));const flatCoordinates=this.getFlatCoordinates();if(flatCoordinates){const stride=this.getStride();(0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.bA)(flatCoordinates,0,flatCoordinates.length,stride,sx,sy,anchor,flatCoordinates),this.changed()}}translate(deltaX,deltaY){const flatCoordinates=this.getFlatCoordinates();if(flatCoordinates){const stride=this.getStride();(0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.Iu)(flatCoordinates,0,flatCoordinates.length,stride,deltaX,deltaY,flatCoordinates),this.changed()}}}function getLayoutForStride(stride){let layout;return 2==stride?layout="XY":3==stride?layout="XYZ":4==stride&&(layout="XYZM"),layout}function getStrideForLayout(layout){let stride;return"XY"==layout?stride=2:"XYZ"==layout||"XYM"==layout?stride=3:"XYZM"==layout&&(stride=4),stride}function transformGeom2D(simpleGeometry,transform,dest){const flatCoordinates=simpleGeometry.getFlatCoordinates();if(!flatCoordinates)return null;const stride=simpleGeometry.getStride();return(0,_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__.vT)(flatCoordinates,0,flatCoordinates.length,stride,transform,dest)}const __WEBPACK_DEFAULT_EXPORT__=SimpleGeometry},"./node_modules/ol/geom/flat/area.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function linearRing(flatCoordinates,offset,end,stride){let twiceArea=0,x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1];for(;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1];twiceArea+=y1*x2-x1*y2,x1=x2,y1=y2}return twiceArea/2}function linearRings(flatCoordinates,offset,ends,stride){let area=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];area+=linearRing(flatCoordinates,offset,end,stride),offset=end}return area}function linearRingss(flatCoordinates,offset,endss,stride){let area=0;for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];area+=linearRings(flatCoordinates,offset,ends,stride),offset=ends[ends.length-1]}return area}__webpack_require__.d(__webpack_exports__,{Eu:()=>linearRingss,KP:()=>linearRings,QQ:()=>linearRing})},"./node_modules/ol/geom/flat/center.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>linearRingss});var _extent_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/extent.js");function linearRingss(flatCoordinates,offset,endss,stride){const flatCenters=[];let extent=(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.lJ)();for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];extent=(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.GN)(flatCoordinates,offset,ends[0],stride),flatCenters.push((extent[0]+extent[2])/2,(extent[1]+extent[3])/2),offset=ends[ends.length-1]}return flatCenters}},"./node_modules/ol/geom/flat/closest.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Af:()=>arrayMaxSquaredDelta,Bv:()=>maxSquaredDelta,H$:()=>assignClosestPoint,Xl:()=>assignClosestArrayPoint,gI:()=>assignClosestMultiArrayPoint,sD:()=>multiArrayMaxSquaredDelta});var _math_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/math.js");function assignClosest(flatCoordinates,offset1,offset2,stride,x,y,closestPoint){const x1=flatCoordinates[offset1],y1=flatCoordinates[offset1+1],dx=flatCoordinates[offset2]-x1,dy=flatCoordinates[offset2+1]-y1;let offset;if(0===dx&&0===dy)offset=offset1;else{const t=((x-x1)*dx+(y-y1)*dy)/(dx*dx+dy*dy);if(t>1)offset=offset2;else{if(t>0){for(let i=0;i<stride;++i)closestPoint[i]=(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.t7)(flatCoordinates[offset1+i],flatCoordinates[offset2+i],t);return void(closestPoint.length=stride)}offset=offset1}}for(let i=0;i<stride;++i)closestPoint[i]=flatCoordinates[offset+i];closestPoint.length=stride}function maxSquaredDelta(flatCoordinates,offset,end,stride,max){let x1=flatCoordinates[offset],y1=flatCoordinates[offset+1];for(offset+=stride;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1],squaredDelta=(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.bI)(x1,y1,x2,y2);squaredDelta>max&&(max=squaredDelta),x1=x2,y1=y2}return max}function arrayMaxSquaredDelta(flatCoordinates,offset,ends,stride,max){for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];max=maxSquaredDelta(flatCoordinates,offset,end,stride,max),offset=end}return max}function multiArrayMaxSquaredDelta(flatCoordinates,offset,endss,stride,max){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];max=arrayMaxSquaredDelta(flatCoordinates,offset,ends,stride,max),offset=ends[ends.length-1]}return max}function assignClosestPoint(flatCoordinates,offset,end,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint){if(offset==end)return minSquaredDistance;let i,squaredDistance;if(0===maxDelta){if(squaredDistance=(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.bI)(x,y,flatCoordinates[offset],flatCoordinates[offset+1]),squaredDistance<minSquaredDistance){for(i=0;i<stride;++i)closestPoint[i]=flatCoordinates[offset+i];return closestPoint.length=stride,squaredDistance}return minSquaredDistance}tmpPoint=tmpPoint||[NaN,NaN];let index=offset+stride;for(;index<end;)if(assignClosest(flatCoordinates,index-stride,index,stride,x,y,tmpPoint),squaredDistance=(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.bI)(x,y,tmpPoint[0],tmpPoint[1]),squaredDistance<minSquaredDistance){for(minSquaredDistance=squaredDistance,i=0;i<stride;++i)closestPoint[i]=tmpPoint[i];closestPoint.length=stride,index+=stride}else index+=stride*Math.max((Math.sqrt(squaredDistance)-Math.sqrt(minSquaredDistance))/maxDelta|0,1);if(isRing&&(assignClosest(flatCoordinates,end-stride,offset,stride,x,y,tmpPoint),squaredDistance=(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.bI)(x,y,tmpPoint[0],tmpPoint[1]),squaredDistance<minSquaredDistance)){for(minSquaredDistance=squaredDistance,i=0;i<stride;++i)closestPoint[i]=tmpPoint[i];closestPoint.length=stride}return minSquaredDistance}function assignClosestArrayPoint(flatCoordinates,offset,ends,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint){tmpPoint=tmpPoint||[NaN,NaN];for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];minSquaredDistance=assignClosestPoint(flatCoordinates,offset,end,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint),offset=end}return minSquaredDistance}function assignClosestMultiArrayPoint(flatCoordinates,offset,endss,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint){tmpPoint=tmpPoint||[NaN,NaN];for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];minSquaredDistance=assignClosestArrayPoint(flatCoordinates,offset,ends,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint),offset=ends[ends.length-1]}return minSquaredDistance}},"./node_modules/ol/geom/flat/contains.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{TG:()=>linearRingContainsXY,Zl:()=>linearRingssContainsXY,uG:()=>linearRingContainsExtent,wY:()=>linearRingsContainsXY});var _extent_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/extent.js");function linearRingContainsExtent(flatCoordinates,offset,end,stride,extent){return!(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.H6)(extent,(function(coordinate){return!linearRingContainsXY(flatCoordinates,offset,end,stride,coordinate[0],coordinate[1])}))}function linearRingContainsXY(flatCoordinates,offset,end,stride,x,y){let wn=0,x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1];for(;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1];y1<=y?y2>y&&(x2-x1)*(y-y1)-(x-x1)*(y2-y1)>0&&wn++:y2<=y&&(x2-x1)*(y-y1)-(x-x1)*(y2-y1)<0&&wn--,x1=x2,y1=y2}return 0!==wn}function linearRingsContainsXY(flatCoordinates,offset,ends,stride,x,y){if(0===ends.length)return!1;if(!linearRingContainsXY(flatCoordinates,offset,ends[0],stride,x,y))return!1;for(let i=1,ii=ends.length;i<ii;++i)if(linearRingContainsXY(flatCoordinates,ends[i-1],ends[i],stride,x,y))return!1;return!0}function linearRingssContainsXY(flatCoordinates,offset,endss,stride,x,y){if(0===endss.length)return!1;for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];if(linearRingsContainsXY(flatCoordinates,offset,ends,stride,x,y))return!0;offset=ends[ends.length-1]}return!1}},"./node_modules/ol/geom/flat/deflate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function deflateCoordinate(flatCoordinates,offset,coordinate,stride){for(let i=0,ii=coordinate.length;i<ii;++i)flatCoordinates[offset++]=coordinate[i];return offset}function deflateCoordinates(flatCoordinates,offset,coordinates,stride){for(let i=0,ii=coordinates.length;i<ii;++i){const coordinate=coordinates[i];for(let j=0;j<stride;++j)flatCoordinates[offset++]=coordinate[j]}return offset}function deflateCoordinatesArray(flatCoordinates,offset,coordinatess,stride,ends){ends=ends||[];let i=0;for(let j=0,jj=coordinatess.length;j<jj;++j){const end=deflateCoordinates(flatCoordinates,offset,coordinatess[j],stride);ends[i++]=end,offset=end}return ends.length=i,ends}function deflateMultiCoordinatesArray(flatCoordinates,offset,coordinatesss,stride,endss){endss=endss||[];let i=0;for(let j=0,jj=coordinatesss.length;j<jj;++j){const ends=deflateCoordinatesArray(flatCoordinates,offset,coordinatesss[j],stride,endss[i]);0===ends.length&&(ends[0]=offset),endss[i++]=ends,offset=ends[ends.length-1]}return endss.length=i,endss}__webpack_require__.d(__webpack_exports__,{IG:()=>deflateCoordinate,QT:()=>deflateMultiCoordinatesArray,Sg:()=>deflateCoordinates,_5:()=>deflateCoordinatesArray})},"./node_modules/ol/geom/flat/inflate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function inflateCoordinates(flatCoordinates,offset,end,stride,coordinates){coordinates=void 0!==coordinates?coordinates:[];let i=0;for(let j=offset;j<end;j+=stride)coordinates[i++]=flatCoordinates.slice(j,j+stride);return coordinates.length=i,coordinates}function inflateCoordinatesArray(flatCoordinates,offset,ends,stride,coordinatess){coordinatess=void 0!==coordinatess?coordinatess:[];let i=0;for(let j=0,jj=ends.length;j<jj;++j){const end=ends[j];coordinatess[i++]=inflateCoordinates(flatCoordinates,offset,end,stride,coordinatess[i]),offset=end}return coordinatess.length=i,coordinatess}function inflateMultiCoordinatesArray(flatCoordinates,offset,endss,stride,coordinatesss){coordinatesss=void 0!==coordinatesss?coordinatesss:[];let i=0;for(let j=0,jj=endss.length;j<jj;++j){const ends=endss[j];coordinatesss[i++]=1===ends.length&&ends[0]===offset?[]:inflateCoordinatesArray(flatCoordinates,offset,ends,stride,coordinatesss[i]),offset=ends[ends.length-1]}return coordinatesss.length=i,coordinatesss}__webpack_require__.d(__webpack_exports__,{Ml:()=>inflateCoordinates,o1:()=>inflateCoordinatesArray,ug:()=>inflateMultiCoordinatesArray})},"./node_modules/ol/geom/flat/interiorpoint.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>getInteriorPointsOfMultiArray,X:()=>getInteriorPointOfArray});var _array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/array.js"),_contains_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/geom/flat/contains.js");function getInteriorPointOfArray(flatCoordinates,offset,ends,stride,flatCenters,flatCentersOffset,dest){let i,ii,x,x1,x2,y1,y2;const y=flatCenters[flatCentersOffset+1],intersections=[];for(let r=0,rr=ends.length;r<rr;++r){const end=ends[r];for(x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1],i=offset;i<end;i+=stride)x2=flatCoordinates[i],y2=flatCoordinates[i+1],(y<=y1&&y2<=y||y1<=y&&y<=y2)&&(x=(y-y1)/(y2-y1)*(x2-x1)+x1,intersections.push(x)),x1=x2,y1=y2}let pointX=NaN,maxSegmentLength=-1/0;for(intersections.sort(_array_js__WEBPACK_IMPORTED_MODULE_0__.j2),x1=intersections[0],i=1,ii=intersections.length;i<ii;++i){x2=intersections[i];const segmentLength=Math.abs(x2-x1);segmentLength>maxSegmentLength&&(x=(x1+x2)/2,(0,_contains_js__WEBPACK_IMPORTED_MODULE_1__.wY)(flatCoordinates,offset,ends,stride,x,y)&&(pointX=x,maxSegmentLength=segmentLength)),x1=x2}return isNaN(pointX)&&(pointX=flatCenters[flatCentersOffset]),dest?(dest.push(pointX,y,maxSegmentLength),dest):[pointX,y,maxSegmentLength]}function getInteriorPointsOfMultiArray(flatCoordinates,offset,endss,stride,flatCenters){let interiorPoints=[];for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];interiorPoints=getInteriorPointOfArray(flatCoordinates,offset,ends,stride,flatCenters,2*i,interiorPoints),offset=ends[ends.length-1]}return interiorPoints}},"./node_modules/ol/geom/flat/interpolate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{WW:()=>interpolatePoint,dG:()=>lineStringsCoordinateAtM,iJ:()=>lineStringCoordinateAtM});var _array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/array.js"),_math_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/math.js");function interpolatePoint(flatCoordinates,offset,end,stride,fraction,dest,dimension){let o,t;const n=(end-offset)/stride;if(1===n)o=offset;else if(2===n)o=offset,t=fraction;else if(0!==n){let x1=flatCoordinates[offset],y1=flatCoordinates[offset+1],length=0;const cumulativeLengths=[0];for(let i=offset+stride;i<end;i+=stride){const x2=flatCoordinates[i],y2=flatCoordinates[i+1];length+=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)),cumulativeLengths.push(length),x1=x2,y1=y2}const target=fraction*length,index=(0,_array_js__WEBPACK_IMPORTED_MODULE_0__.ry)(cumulativeLengths,target);index<0?(t=(target-cumulativeLengths[-index-2])/(cumulativeLengths[-index-1]-cumulativeLengths[-index-2]),o=offset+(-index-2)*stride):o=offset+index*stride}dimension=dimension>1?dimension:2,dest=dest||new Array(dimension);for(let i=0;i<dimension;++i)dest[i]=void 0===o?NaN:void 0===t?flatCoordinates[o+i]:(0,_math_js__WEBPACK_IMPORTED_MODULE_1__.t7)(flatCoordinates[o+i],flatCoordinates[o+stride+i],t);return dest}function lineStringCoordinateAtM(flatCoordinates,offset,end,stride,m,extrapolate){if(end==offset)return null;let coordinate;if(m<flatCoordinates[offset+stride-1])return extrapolate?(coordinate=flatCoordinates.slice(offset,offset+stride),coordinate[stride-1]=m,coordinate):null;if(flatCoordinates[end-1]<m)return extrapolate?(coordinate=flatCoordinates.slice(end-stride,end),coordinate[stride-1]=m,coordinate):null;if(m==flatCoordinates[offset+stride-1])return flatCoordinates.slice(offset,offset+stride);let lo=offset/stride,hi=end/stride;for(;lo<hi;){const mid=lo+hi>>1;m<flatCoordinates[(mid+1)*stride-1]?hi=mid:lo=mid+1}const m0=flatCoordinates[lo*stride-1];if(m==m0)return flatCoordinates.slice((lo-1)*stride,(lo-1)*stride+stride);const t=(m-m0)/(flatCoordinates[(lo+1)*stride-1]-m0);coordinate=[];for(let i=0;i<stride-1;++i)coordinate.push((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.t7)(flatCoordinates[(lo-1)*stride+i],flatCoordinates[lo*stride+i],t));return coordinate.push(m),coordinate}function lineStringsCoordinateAtM(flatCoordinates,offset,ends,stride,m,extrapolate,interpolate){if(interpolate)return lineStringCoordinateAtM(flatCoordinates,offset,ends[ends.length-1],stride,m,extrapolate);let coordinate;if(m<flatCoordinates[stride-1])return extrapolate?(coordinate=flatCoordinates.slice(0,stride),coordinate[stride-1]=m,coordinate):null;if(flatCoordinates[flatCoordinates.length-1]<m)return extrapolate?(coordinate=flatCoordinates.slice(flatCoordinates.length-stride),coordinate[stride-1]=m,coordinate):null;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];if(offset!=end){if(m<flatCoordinates[offset+stride-1])return null;if(m<=flatCoordinates[end-1])return lineStringCoordinateAtM(flatCoordinates,offset,end,stride,m,!1);offset=end}}return null}},"./node_modules/ol/geom/flat/intersectsextent.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AW:()=>intersectsLineStringArray,Kz:()=>intersectsLineString,ac:()=>intersectsLinearRingArray,mV:()=>intersectsLinearRing,oW:()=>intersectsLinearRingMultiArray});var _extent_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/extent.js"),_segments_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/geom/flat/segments.js"),_contains_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/geom/flat/contains.js");function intersectsLineString(flatCoordinates,offset,end,stride,extent){const coordinatesExtent=(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.qP)((0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.lJ)(),flatCoordinates,offset,end,stride);return!!(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.kK)(extent,coordinatesExtent)&&(!!(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.r4)(extent,coordinatesExtent)||(coordinatesExtent[0]>=extent[0]&&coordinatesExtent[2]<=extent[2]||(coordinatesExtent[1]>=extent[1]&&coordinatesExtent[3]<=extent[3]||(0,_segments_js__WEBPACK_IMPORTED_MODULE_1__.E)(flatCoordinates,offset,end,stride,(function(point1,point2){return(0,_extent_js__WEBPACK_IMPORTED_MODULE_0__.I7)(extent,point1,point2)})))))}function intersectsLineStringArray(flatCoordinates,offset,ends,stride,extent){for(let i=0,ii=ends.length;i<ii;++i){if(intersectsLineString(flatCoordinates,offset,ends[i],stride,extent))return!0;offset=ends[i]}return!1}function intersectsLinearRing(flatCoordinates,offset,end,stride,extent){return!!intersectsLineString(flatCoordinates,offset,end,stride,extent)||(!!(0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.TG)(flatCoordinates,offset,end,stride,extent[0],extent[1])||(!!(0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.TG)(flatCoordinates,offset,end,stride,extent[0],extent[3])||(!!(0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.TG)(flatCoordinates,offset,end,stride,extent[2],extent[1])||!!(0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.TG)(flatCoordinates,offset,end,stride,extent[2],extent[3]))))}function intersectsLinearRingArray(flatCoordinates,offset,ends,stride,extent){if(!intersectsLinearRing(flatCoordinates,offset,ends[0],stride,extent))return!1;if(1===ends.length)return!0;for(let i=1,ii=ends.length;i<ii;++i)if((0,_contains_js__WEBPACK_IMPORTED_MODULE_2__.uG)(flatCoordinates,ends[i-1],ends[i],stride,extent)&&!intersectsLineString(flatCoordinates,ends[i-1],ends[i],stride,extent))return!1;return!0}function intersectsLinearRingMultiArray(flatCoordinates,offset,endss,stride,extent){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];if(intersectsLinearRingArray(flatCoordinates,offset,ends,stride,extent))return!0;offset=ends[ends.length-1]}return!1}},"./node_modules/ol/geom/flat/length.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function lineStringLength(flatCoordinates,offset,end,stride){let x1=flatCoordinates[offset],y1=flatCoordinates[offset+1],length=0;for(let i=offset+stride;i<end;i+=stride){const x2=flatCoordinates[i],y2=flatCoordinates[i+1];length+=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)),x1=x2,y1=y2}return length}__webpack_require__.d(__webpack_exports__,{W:()=>lineStringLength})},"./node_modules/ol/geom/flat/orient.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function coordinates(flatCoordinates,offset,end,stride){for(;offset<end-stride;){for(let i=0;i<stride;++i){const tmp=flatCoordinates[offset+i];flatCoordinates[offset+i]=flatCoordinates[end-stride+i],flatCoordinates[end-stride+i]=tmp}offset+=stride,end-=stride}}function linearRingIsClockwise(flatCoordinates,offset,end,stride){let edge=0,x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1];for(;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1];edge+=(x2-x1)*(y2+y1),x1=x2,y1=y2}return 0===edge?void 0:edge>0}function linearRingsAreOriented(flatCoordinates,offset,ends,stride,right){right=void 0!==right&&right;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],isClockwise=linearRingIsClockwise(flatCoordinates,offset,end,stride);if(0===i){if(right&&isClockwise||!right&&!isClockwise)return!1}else if(right&&!isClockwise||!right&&isClockwise)return!1;offset=end}return!0}function linearRingssAreOriented(flatCoordinates,offset,endss,stride,right){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];if(!linearRingsAreOriented(flatCoordinates,offset,ends,stride,right))return!1;ends.length&&(offset=ends[ends.length-1])}return!0}function orientLinearRings(flatCoordinates,offset,ends,stride,right){right=void 0!==right&&right;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],isClockwise=linearRingIsClockwise(flatCoordinates,offset,end,stride);(0===i?right&&isClockwise||!right&&!isClockwise:right&&!isClockwise||!right&&isClockwise)&&coordinates(flatCoordinates,offset,end,stride),offset=end}return offset}function orientLinearRingsArray(flatCoordinates,offset,endss,stride,right){for(let i=0,ii=endss.length;i<ii;++i)offset=orientLinearRings(flatCoordinates,offset,endss[i],stride,right);return offset}function inflateEnds(flatCoordinates,ends){const endss=[];let startOrientation,offset=0,prevEndIndex=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],orientation=linearRingIsClockwise(flatCoordinates,offset,end,2);if(void 0===startOrientation&&(startOrientation=orientation),orientation===startOrientation)endss.push(ends.slice(prevEndIndex,i+1));else{if(0===endss.length)continue;endss[endss.length-1].push(ends[prevEndIndex])}prevEndIndex=i+1,offset=end}return endss}__webpack_require__.d(__webpack_exports__,{Q3:()=>inflateEnds,$v:()=>linearRingsAreOriented,Oj:()=>linearRingssAreOriented,zX:()=>orientLinearRings,dL:()=>orientLinearRingsArray})},"./node_modules/ol/geom/flat/segments.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function forEach(flatCoordinates,offset,end,stride,callback){let ret;for(offset+=stride;offset<end;offset+=stride)if(ret=callback(flatCoordinates.slice(offset-stride,offset),flatCoordinates.slice(offset,offset+stride)),ret)return ret;return!1}__webpack_require__.d(__webpack_exports__,{E:()=>forEach})},"./node_modules/ol/geom/flat/simplify.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Pp:()=>quantizeMultiArray,UJ:()=>douglasPeuckerArray,Zh:()=>quantizeArray,dt:()=>douglasPeucker,uZ:()=>snap});var _math_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/math.js");function douglasPeucker(flatCoordinates,offset,end,stride,squaredTolerance,simplifiedFlatCoordinates,simplifiedOffset){const n=(end-offset)/stride;if(n<3){for(;offset<end;offset+=stride)simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset],simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset+1];return simplifiedOffset}const markers=new Array(n);markers[0]=1,markers[n-1]=1;const stack=[offset,end-stride];let index=0;for(;stack.length>0;){const last=stack.pop(),first=stack.pop();let maxSquaredDistance=0;const x1=flatCoordinates[first],y1=flatCoordinates[first+1],x2=flatCoordinates[last],y2=flatCoordinates[last+1];for(let i=first+stride;i<last;i+=stride){const x=flatCoordinates[i],y=flatCoordinates[i+1],squaredDistance=(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.rU)(x,y,x1,y1,x2,y2);squaredDistance>maxSquaredDistance&&(index=i,maxSquaredDistance=squaredDistance)}maxSquaredDistance>squaredTolerance&&(markers[(index-offset)/stride]=1,first+stride<index&&stack.push(first,index),index+stride<last&&stack.push(index,last))}for(let i=0;i<n;++i)markers[i]&&(simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset+i*stride],simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset+i*stride+1]);return simplifiedOffset}function douglasPeuckerArray(flatCoordinates,offset,ends,stride,squaredTolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEnds){for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];simplifiedOffset=douglasPeucker(flatCoordinates,offset,end,stride,squaredTolerance,simplifiedFlatCoordinates,simplifiedOffset),simplifiedEnds.push(simplifiedOffset),offset=end}return simplifiedOffset}function snap(value,tolerance){return tolerance*Math.round(value/tolerance)}function quantize(flatCoordinates,offset,end,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset){if(offset==end)return simplifiedOffset;let x2,y2,x1=snap(flatCoordinates[offset],tolerance),y1=snap(flatCoordinates[offset+1],tolerance);offset+=stride,simplifiedFlatCoordinates[simplifiedOffset++]=x1,simplifiedFlatCoordinates[simplifiedOffset++]=y1;do{if(x2=snap(flatCoordinates[offset],tolerance),y2=snap(flatCoordinates[offset+1],tolerance),(offset+=stride)==end)return simplifiedFlatCoordinates[simplifiedOffset++]=x2,simplifiedFlatCoordinates[simplifiedOffset++]=y2,simplifiedOffset}while(x2==x1&&y2==y1);for(;offset<end;){const x3=snap(flatCoordinates[offset],tolerance),y3=snap(flatCoordinates[offset+1],tolerance);if(offset+=stride,x3==x2&&y3==y2)continue;const dx1=x2-x1,dy1=y2-y1,dx2=x3-x1,dy2=y3-y1;dx1*dy2==dy1*dx2&&(dx1<0&&dx2<dx1||dx1==dx2||dx1>0&&dx2>dx1)&&(dy1<0&&dy2<dy1||dy1==dy2||dy1>0&&dy2>dy1)?(x2=x3,y2=y3):(simplifiedFlatCoordinates[simplifiedOffset++]=x2,simplifiedFlatCoordinates[simplifiedOffset++]=y2,x1=x2,y1=y2,x2=x3,y2=y3)}return simplifiedFlatCoordinates[simplifiedOffset++]=x2,simplifiedFlatCoordinates[simplifiedOffset++]=y2,simplifiedOffset}function quantizeArray(flatCoordinates,offset,ends,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEnds){for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];simplifiedOffset=quantize(flatCoordinates,offset,end,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset),simplifiedEnds.push(simplifiedOffset),offset=end}return simplifiedOffset}function quantizeMultiArray(flatCoordinates,offset,endss,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEndss){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i],simplifiedEnds=[];simplifiedOffset=quantizeArray(flatCoordinates,offset,ends,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEnds),simplifiedEndss.push(simplifiedEnds),offset=ends[ends.length-1]}return simplifiedOffset}},"./node_modules/ol/render/Feature.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ZP:()=>__WEBPACK_DEFAULT_EXPORT__});var _transform_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ol/transform.js"),_extent_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ol/extent.js"),_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/ol/geom/flat/simplify.js"),_array_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/ol/array.js"),_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ol/geom/flat/interiorpoint.js"),_proj_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ol/proj.js"),_geom_flat_orient_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ol/geom/flat/orient.js"),_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/ol/geom/flat/interpolate.js"),_geom_flat_center_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/ol/geom/flat/center.js"),_functions_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/ol/functions.js"),_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/ol/geom/flat/transform.js");const tmpTransform=(0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.Ue)();class RenderFeature{constructor(type,flatCoordinates,ends,stride,properties,id){this.styleFunction,this.extent_,this.id_=id,this.type_=type,this.flatCoordinates_=flatCoordinates,this.flatInteriorPoints_=null,this.flatMidpoints_=null,this.ends_=ends,this.properties_=properties,this.squaredTolerance_,this.stride_=stride,this.simplifiedGeometry_}get(key){return this.properties_[key]}getExtent(){return this.extent_||(this.extent_="Point"===this.type_?(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.HK)(this.flatCoordinates_):(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.GN)(this.flatCoordinates_,0,this.flatCoordinates_.length,2)),this.extent_}getFlatInteriorPoint(){if(!this.flatInteriorPoints_){const flatCenter=(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.qg)(this.getExtent());this.flatInteriorPoints_=(0,_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_3__.X)(this.flatCoordinates_,0,this.ends_,2,flatCenter,0)}return this.flatInteriorPoints_}getFlatInteriorPoints(){if(!this.flatInteriorPoints_){const ends=(0,_geom_flat_orient_js__WEBPACK_IMPORTED_MODULE_4__.Q3)(this.flatCoordinates_,this.ends_),flatCenters=(0,_geom_flat_center_js__WEBPACK_IMPORTED_MODULE_5__.E)(this.flatCoordinates_,0,ends,2);this.flatInteriorPoints_=(0,_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_3__.U)(this.flatCoordinates_,0,ends,2,flatCenters)}return this.flatInteriorPoints_}getFlatMidpoint(){return this.flatMidpoints_||(this.flatMidpoints_=(0,_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_6__.WW)(this.flatCoordinates_,0,this.flatCoordinates_.length,2,.5)),this.flatMidpoints_}getFlatMidpoints(){if(!this.flatMidpoints_){this.flatMidpoints_=[];const flatCoordinates=this.flatCoordinates_;let offset=0;const ends=this.ends_;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],midpoint=(0,_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_6__.WW)(flatCoordinates,offset,end,2,.5);(0,_array_js__WEBPACK_IMPORTED_MODULE_7__.l7)(this.flatMidpoints_,midpoint),offset=end}}return this.flatMidpoints_}getId(){return this.id_}getOrientedFlatCoordinates(){return this.flatCoordinates_}getGeometry(){return this}getSimplifiedGeometry(squaredTolerance){return this}simplifyTransformed(squaredTolerance,transform){return this}getProperties(){return this.properties_}getPropertiesInternal(){return this.properties_}getStride(){return this.stride_}getStyleFunction(){return this.styleFunction}getType(){return this.type_}transform(projection){const pixelExtent=(projection=(0,_proj_js__WEBPACK_IMPORTED_MODULE_0__.U2)(projection)).getExtent(),projectedExtent=projection.getWorldExtent();if(pixelExtent&&projectedExtent){const scale=(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.Cr)(projectedExtent)/(0,_extent_js__WEBPACK_IMPORTED_MODULE_2__.Cr)(pixelExtent);(0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.qC)(tmpTransform,projectedExtent[0],projectedExtent[3],scale,-scale,0,0,0),(0,_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_8__.vT)(this.flatCoordinates_,0,this.flatCoordinates_.length,2,tmpTransform,this.flatCoordinates_)}}applyTransform(transformFn){transformFn(this.flatCoordinates_,this.flatCoordinates_,this.stride_)}clone(){return new RenderFeature(this.type_,this.flatCoordinates_.slice(),this.ends_.slice(),this.stride_,Object.assign({},this.properties_),this.id_)}getEnds(){return this.ends_}enableSimplifyTransformed(){return this.simplifyTransformed=(0,_functions_js__WEBPACK_IMPORTED_MODULE_9__.qe)(((squaredTolerance,transform)=>{if(squaredTolerance===this.squaredTolerance_)return this.simplifiedGeometry_;this.simplifiedGeometry_=this.clone(),transform&&this.simplifiedGeometry_.applyTransform(transform);const simplifiedFlatCoordinates=this.simplifiedGeometry_.getFlatCoordinates();let simplifiedEnds;switch(this.type_){case"LineString":simplifiedFlatCoordinates.length=(0,_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_10__.dt)(simplifiedFlatCoordinates,0,this.simplifiedGeometry_.flatCoordinates_.length,this.simplifiedGeometry_.stride_,squaredTolerance,simplifiedFlatCoordinates,0),simplifiedEnds=[simplifiedFlatCoordinates.length];break;case"MultiLineString":simplifiedEnds=[],simplifiedFlatCoordinates.length=(0,_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_10__.UJ)(simplifiedFlatCoordinates,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,squaredTolerance,simplifiedFlatCoordinates,0,simplifiedEnds);break;case"Polygon":simplifiedEnds=[],simplifiedFlatCoordinates.length=(0,_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_10__.Zh)(simplifiedFlatCoordinates,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,Math.sqrt(squaredTolerance),simplifiedFlatCoordinates,0,simplifiedEnds)}return simplifiedEnds&&(this.simplifiedGeometry_=new RenderFeature(this.type_,simplifiedFlatCoordinates,simplifiedEnds,2,this.properties_,this.id_)),this.squaredTolerance_=squaredTolerance,this.simplifiedGeometry_})),this}}RenderFeature.prototype.getFlatCoordinates=RenderFeature.prototype.getOrientedFlatCoordinates;const __WEBPACK_DEFAULT_EXPORT__=RenderFeature}}]);