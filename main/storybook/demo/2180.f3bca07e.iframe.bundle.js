/*! For license information please see 2180.f3bca07e.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkgeonetwork_ui=self.webpackChunkgeonetwork_ui||[]).push([[2180],{"./node_modules/@camptocamp/ogc-client/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ld:()=>OgcApiEndpoint,VR:()=>WfsEndpoint,us:()=>WmsEndpoint,Nn:()=>WmtsEndpoint,Td:()=>sharedFetch,YT:()=>useCache});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");let counter=0;function sendTaskRequest(taskName,workerInstance2,params){return new Promise(((resolve,reject)=>{const requestId=function worker_getUniqueId(){return counter++}(),request={requestId,taskName,params};null===workerInstance2?globalThis.dispatchEvent(new CustomEvent("ogc-client.request",{detail:request})):workerInstance2.postMessage(request);const handler=response=>{response.requestId===requestId&&(null===workerInstance2?globalThis.removeEventListener("message",windowHandler):workerInstance2.removeEventListener("message",workerHandler),"error"in response?reject(response.error):resolve(response.response))},windowHandler=event=>handler(event.detail),workerHandler=event=>handler(event.data);null===workerInstance2?globalThis.addEventListener("ogc-client.response",windowHandler):workerInstance2.addEventListener("message",workerHandler)}))}var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,src_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(src_exports,{XmlCdata:()=>XmlCdata,XmlComment:()=>XmlComment,XmlDeclaration:()=>XmlDeclaration,XmlDocument:()=>XmlDocument,XmlDocumentType:()=>XmlDocumentType,XmlElement:()=>XmlElement,XmlError:()=>XmlError,XmlNode:()=>XmlNode,XmlProcessingInstruction:()=>XmlProcessingInstruction,XmlText:()=>XmlText,parseXml:()=>parseXml}),mod=src_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})})(__defProp({},"__esModule",{value:!0}),mod);var surrogatePair=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,attValueCharDoubleQuote=/[^"&<]+/y,attValueCharSingleQuote=/[^'&<]+/y,attValueNormalizedWhitespace=/\r\n|[\n\r\t]/g,endCharData=/<|&|]]>/,predefinedEntities=Object.freeze(Object.assign(Object.create(null),{amp:"&",apos:"'",gt:">",lt:"<",quot:'"'}));function isNameChar(char){let cp=getCodePoint(char);return cp>=97&&cp<=122||cp>=65&&cp<=90||cp>=48&&cp<=57||45===cp||46===cp||183===cp||cp>=768&&cp<=879||cp>=8255&&cp<=8256||isNameStartChar(char,cp)}function isNameStartChar(char,cp=getCodePoint(char)){return cp>=97&&cp<=122||cp>=65&&cp<=90||58===cp||95===cp||cp>=192&&cp<=214||cp>=216&&cp<=246||cp>=248&&cp<=767||cp>=880&&cp<=893||cp>=895&&cp<=8191||cp>=8204&&cp<=8205||cp>=8304&&cp<=8591||cp>=11264&&cp<=12271||cp>=12289&&cp<=55295||cp>=63744&&cp<=64975||cp>=65008&&cp<=65533||cp>=65536&&cp<=983039}function isReferenceChar(char){return"#"===char||isNameChar(char)}function isWhitespace(char){let cp=getCodePoint(char);return 32===cp||9===cp||10===cp||13===cp}function isXmlCodePoint(cp){return 9===cp||10===cp||13===cp||cp>=32&&cp<=55295||cp>=57344&&cp<=65533||cp>=65536&&cp<=1114111}function getCodePoint(char){return char.codePointAt(0)||-1}var _XmlNode=class{constructor(){this.parent=null,this.start=-1,this.end=-1}get document(){var _a,_b;return null!=(_b=null==(_a=this.parent)?void 0:_a.document)?_b:null}get isRootNode(){return null!==this.parent&&this.parent===this.document&&this.type===_XmlNode.TYPE_ELEMENT}get preserveWhitespace(){var _a;return!!(null==(_a=this.parent)?void 0:_a.preserveWhitespace)}get type(){return""}toJSON(){let json={type:this.type};return this.isRootNode&&(json.isRootNode=!0),this.preserveWhitespace&&(json.preserveWhitespace=!0),-1!==this.start&&(json.start=this.start,json.end=this.end),json}},XmlNode=_XmlNode;XmlNode.TYPE_CDATA="cdata",XmlNode.TYPE_COMMENT="comment",XmlNode.TYPE_DOCUMENT="document",XmlNode.TYPE_DOCUMENT_TYPE="doctype",XmlNode.TYPE_ELEMENT="element",XmlNode.TYPE_PROCESSING_INSTRUCTION="pi",XmlNode.TYPE_TEXT="text",XmlNode.TYPE_XML_DECLARATION="xmldecl";var XmlText=class extends XmlNode{constructor(text=""){super(),this.text=text}get type(){return XmlNode.TYPE_TEXT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{text:this.text})}},XmlCdata=class extends XmlText{get type(){return XmlNode.TYPE_CDATA}},XmlComment=class extends XmlNode{constructor(content=""){super(),this.content=content}get type(){return XmlNode.TYPE_COMMENT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{content:this.content})}},XmlDeclaration=class extends XmlNode{constructor(version,encoding,standalone){super(),this.version=version,this.encoding=null!=encoding?encoding:null,this.standalone=null!=standalone?standalone:null}get type(){return XmlNode.TYPE_XML_DECLARATION}toJSON(){let json=XmlNode.prototype.toJSON.call(this);json.version=this.version;for(let key of["encoding","standalone"])null!==this[key]&&(json[key]=this[key]);return json}},XmlElement=class extends XmlNode{constructor(name,attributes=Object.create(null),children=[]){super(),this.name=name,this.attributes=attributes,this.children=children}get isEmpty(){return 0===this.children.length}get preserveWhitespace(){let node=this;for(;node instanceof XmlElement;){if("xml:space"in node.attributes)return"preserve"===node.attributes["xml:space"];node=node.parent}return!1}get text(){return this.children.map((child=>"text"in child?child.text:"")).join("")}get type(){return XmlNode.TYPE_ELEMENT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{name:this.name,attributes:this.attributes,children:this.children.map((child=>child.toJSON()))})}},XmlDocument=class extends XmlNode{constructor(children=[]){super(),this.children=children}get document(){return this}get root(){for(let child of this.children)if(child instanceof XmlElement)return child;return null}get text(){return this.children.map((child=>"text"in child?child.text:"")).join("")}get type(){return XmlNode.TYPE_DOCUMENT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{children:this.children.map((child=>child.toJSON()))})}},XmlDocumentType=class extends XmlNode{constructor(name,publicId,systemId,internalSubset){super(),this.name=name,this.publicId=null!=publicId?publicId:null,this.systemId=null!=systemId?systemId:null,this.internalSubset=null!=internalSubset?internalSubset:null}get type(){return XmlNode.TYPE_DOCUMENT_TYPE}toJSON(){let json=XmlNode.prototype.toJSON.call(this);json.name=this.name;for(let key of["publicId","systemId","internalSubset"])null!==this[key]&&(json[key]=this[key]);return json}},XmlError=class extends Error{constructor(message,charIndex,xml){let column=1,excerpt="",line=1;for(let i=0;i<charIndex;++i){let char=xml[i];"\n"===char?(column=1,excerpt="",line+=1):(column+=1,excerpt+=char)}let eol=xml.indexOf("\n",charIndex);excerpt+=-1===eol?xml.slice(charIndex):xml.slice(charIndex,eol);let excerptStart=0;excerpt.length>50&&(column<40?excerpt=excerpt.slice(0,50):(excerptStart=column-20,excerpt=excerpt.slice(excerptStart,column+30))),super(`${message} (line ${line}, column ${column})\n  ${excerpt}\n`+" ".repeat(column-excerptStart+1)+"^\n"),this.column=column,this.excerpt=excerpt,this.line=line,this.name="XmlError",this.pos=charIndex}},XmlProcessingInstruction=class extends XmlNode{constructor(name,content=""){super(),this.name=name,this.content=content}get type(){return XmlNode.TYPE_PROCESSING_INSTRUCTION}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{name:this.name,content:this.content})}},Parser=class{constructor(xml,options={}){let doc=this.document=new XmlDocument,scanner=this.c=new class{constructor(string){if(this.k=this.q(string,!0),this.d=0,this.length=string.length,this.n=this.k!==this.length,this.m=string,this.n){let charsToBytes=[];for(let byteIndex=0,charIndex=0;charIndex<this.k;++charIndex)charsToBytes[charIndex]=byteIndex,byteIndex+=string.codePointAt(byteIndex)>65535?2:1;this.y=charsToBytes}}get z(){return this.d>=this.k}q(string,multiByteSafe=this.n){return multiByteSafe?string.replace(surrogatePair,"_").length:string.length}g(count=1){this.d=Math.min(this.k,this.d+count)}i(charIndex=this.d){var _a;return this.n?null!=(_a=this.y[charIndex])?_a:1/0:charIndex}F(count=1){let chars=this.h(count);return this.g(count),chars}G(regex){if(!regex.sticky)throw new Error('`regex` must have a sticky flag ("y")');regex.lastIndex=this.i();let result=regex.exec(this.m);if(null===result||0===result.length)return"";let match=result[0];return this.g(this.q(match)),match}v(fn){let char,match="";for(;(char=this.h())&&fn(char);)match+=char,this.g();return match}Q(stringToConsume){if(this.b(stringToConsume))return stringToConsume;if(this.n){let{length}=stringToConsume,charLengthToMatch=this.q(stringToConsume);if(charLengthToMatch!==length&&stringToConsume===this.h(charLengthToMatch))return this.g(charLengthToMatch),stringToConsume}return""}b(stringToConsume){let{length}=stringToConsume;return this.h(length)===stringToConsume?(this.g(length),stringToConsume):""}A(regex){let restOfString=this.m.slice(this.i()),matchByteIndex=restOfString.search(regex);if(matchByteIndex<=0)return"";let result=restOfString.slice(0,matchByteIndex);return this.g(this.q(result)),result}t(searchString){let{m:string}=this,byteIndex=this.i(),matchByteIndex=string.indexOf(searchString,byteIndex);if(matchByteIndex<=0)return"";let result=string.slice(byteIndex,matchByteIndex);return this.g(this.q(result)),result}h(count=1){let{d:charIndex,n:multiByteMode,m:string}=this;return multiByteMode?charIndex>=this.k?"":string.slice(this.i(charIndex),this.i(charIndex+count)):string.slice(charIndex,charIndex+count)}o(index=0){this.d=index>=0?Math.min(this.k,index):Math.max(0,this.d+index)}}(xml);if(this.l=doc,this.f=options,this.f.includeOffsets&&(doc.start=0,doc.end=xml.length),scanner.b("\ufeff"),this.H(),!this.B())throw this.a("Root element is missing or invalid");for(;this.w(););if(!scanner.z)throw this.a("Extra content at the end of the document")}j(node,charIndex){return node.parent=this.l,this.f.includeOffsets&&(node.start=this.c.i(charIndex),node.end=this.c.i()),this.l.children.push(node),!0}x(text,charIndex){let{children}=this.l,{length}=children;if(text=normalizeLineBreaks(text),length>0){let prevNode=children[length-1];if((null==prevNode?void 0:prevNode.type)===XmlNode.TYPE_TEXT){let textNode=prevNode;return textNode.text+=text,this.f.includeOffsets&&(textNode.end=this.c.i()),!0}}return this.j(new XmlText(text),charIndex)}I(){let attributes=Object.create(null);for(;this.e();){let attrName=this.r();if(!attrName)break;let attrValue=this.u()&&this.J();if(!1===attrValue)throw this.a("Attribute value expected");if(attrName in attributes)throw this.a(`Duplicate attribute: ${attrName}`);if("xml:space"===attrName&&"default"!==attrValue&&"preserve"!==attrValue)throw this.a('Value of the `xml:space` attribute must be "default" or "preserve"');attributes[attrName]=attrValue}if(this.f.sortAttributes){let attrNames=Object.keys(attributes).sort(),sortedAttributes=Object.create(null);for(let i=0;i<attrNames.length;++i){let attrName=attrNames[i];sortedAttributes[attrName]=attributes[attrName]}attributes=sortedAttributes}return attributes}J(){let chars,{c:scanner}=this,quote=scanner.h();if('"'!==quote&&"'"!==quote)return!1;scanner.g();let isClosed=!1,value="",regex='"'===quote?attValueCharDoubleQuote:attValueCharSingleQuote;matchLoop:for(;!scanner.z;)switch(chars=scanner.G(regex),chars&&(this.p(chars),value+=chars.replace(attValueNormalizedWhitespace," ")),scanner.h()){case quote:isClosed=!0;break matchLoop;case"&":value+=this.C();continue;case"<":throw this.a("Unescaped `<` is not allowed in an attribute value");case"":break matchLoop}if(!isClosed)throw this.a("Unclosed attribute");return scanner.g(),value}K(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<![CDATA["))return!1;let text=scanner.t("]]>");if(this.p(text),!scanner.b("]]>"))throw this.a("Unclosed CDATA section");return this.f.preserveCdata?this.j(new XmlCdata(normalizeLineBreaks(text)),startIndex):this.x(text,startIndex)}L(){let{c:scanner}=this,startIndex=scanner.d,charData=scanner.A(endCharData);if(!charData)return!1;if(this.p(charData),"]]>"===scanner.h(3))throw this.a("Element content may not contain the CDATA section close delimiter `]]>`");return this.x(charData,startIndex)}D(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("\x3c!--"))return!1;let content=scanner.t("--");if(this.p(content),!scanner.b("--\x3e")){if("--"===scanner.h(2))throw this.a("The string `--` isn't allowed inside a comment");throw this.a("Unclosed comment")}return!this.f.preserveComments||this.j(new XmlComment(normalizeLineBreaks(content)),startIndex)}M(){let startIndex=this.c.d,ref=this.C();return!!ref&&this.x(ref,startIndex)}N(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<!DOCTYPE"))return!1;let publicId,systemId,internalSubset,name=this.e()&&this.r();if(!name)throw this.a("Expected a name");if(this.e()){if(scanner.b("PUBLIC")){if(publicId=this.e()&&this.O(),!1===publicId)throw this.a("Expected a public identifier");this.e()}if(void 0!==publicId||scanner.b("SYSTEM")){if(this.e(),systemId=this.s(),!1===systemId)throw this.a("Expected a system identifier");this.e()}}if(scanner.b("[")){if(internalSubset=scanner.A(/\][\x20\t\r\n]*>/),!scanner.b("]"))throw this.a("Unclosed internal subset");this.e()}if(!scanner.b(">"))throw this.a("Unclosed doctype declaration");return!this.f.preserveDocumentType||this.j(new XmlDocumentType(name,publicId,systemId,internalSubset),startIndex)}B(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<"))return!1;let name=this.r();if(!name)return scanner.o(startIndex),!1;let attributes=this.I(),isEmpty=!!scanner.b("/>"),element=new XmlElement(name,attributes);if(element.parent=this.l,!isEmpty){if(!scanner.b(">"))throw this.a(`Unclosed start tag for element \`${name}\``);this.l=element;do{this.L()}while(this.B()||this.M()||this.K()||this.E()||this.D());let endTagName,endTagMark=scanner.d;if(!scanner.b("</")||!(endTagName=this.r())||endTagName!==name)throw scanner.o(endTagMark),this.a(`Missing end tag for element ${name}`);if(this.e(),!scanner.b(">"))throw this.a(`Unclosed end tag for element ${name}`);this.l=element.parent}return this.j(element,startIndex)}u(){return this.e(),!!this.c.b("=")&&(this.e(),!0)}w(){return this.D()||this.E()||this.e()}r(){return isNameStartChar(this.c.h())?this.c.v(isNameChar):""}E(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<?"))return!1;let name=this.r();if(!name)throw this.a("Invalid processing instruction");if("xml"===name.toLowerCase())throw scanner.o(startIndex),this.a("XML declaration isn't allowed here");if(!this.e()){if(scanner.b("?>"))return this.j(new XmlProcessingInstruction(name),startIndex);throw this.a("Whitespace is required after a processing instruction name")}let content=scanner.t("?>");if(this.p(content),!scanner.b("?>"))throw this.a("Unterminated processing instruction");return this.j(new XmlProcessingInstruction(name,normalizeLineBreaks(content)),startIndex)}H(){let{c:scanner}=this,startIndex=scanner.d;for(this.P();this.w(););if(this.N())for(;this.w(););return startIndex<scanner.d}O(){let startIndex=this.c.d,value=this.s();if(!1!==value&&!/^[-\x20\r\na-zA-Z0-9'()+,./:=?;!*#@$_%]*$/.test(value))throw this.c.o(startIndex),this.a("Invalid character in public identifier");return value}C(){let{c:scanner}=this;if(!scanner.b("&"))return!1;let parsedValue,ref=scanner.v(isReferenceChar);if(";"!==scanner.F())throw this.a("Unterminated reference (a reference must end with `;`)");if("#"===ref[0]){let codePoint="x"===ref[1]?parseInt(ref.slice(2),16):parseInt(ref.slice(1),10);if(isNaN(codePoint))throw this.a("Invalid character reference");if(!isXmlCodePoint(codePoint))throw this.a("Character reference resolves to an invalid character");parsedValue=String.fromCodePoint(codePoint)}else if(parsedValue=predefinedEntities[ref],void 0===parsedValue){let{ignoreUndefinedEntities,resolveUndefinedEntity}=this.f,wrappedRef=`&${ref};`;if(resolveUndefinedEntity){let resolvedValue=resolveUndefinedEntity(wrappedRef);if(null!=resolvedValue){let type=typeof resolvedValue;if("string"!==type)throw new TypeError(`\`resolveUndefinedEntity()\` must return a string, \`null\`, or \`undefined\`, but returned a value of type ${type}`);return resolvedValue}}if(ignoreUndefinedEntities)return wrappedRef;throw scanner.o(-wrappedRef.length),this.a(`Named entity isn't defined: ${wrappedRef}`)}return parsedValue}s(){let{c:scanner}=this,quote=scanner.b('"')||scanner.b("'");if(!quote)return!1;let value=scanner.t(quote);if(this.p(value),!scanner.b(quote))throw this.a("Missing end quote");return value}e(){return!!this.c.v(isWhitespace)}P(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<?xml"))return!1;if(!this.e())throw this.a("Invalid XML declaration");let encoding,standalone,version=!!scanner.b("version")&&this.u()&&this.s();if(!1===version)throw this.a("XML version is missing or invalid");if(!/^1\.[0-9]+$/.test(version))throw this.a("Invalid character in version number");if(this.e()&&(encoding=!!scanner.b("encoding")&&this.u()&&this.s(),encoding&&this.e(),standalone=!!scanner.b("standalone")&&this.u()&&this.s(),standalone)){if("yes"!==standalone&&"no"!==standalone)throw this.a('Only "yes" and "no" are permitted as values of `standalone`');this.e()}if(!scanner.b("?>"))throw this.a("Invalid or unclosed XML declaration");return!this.f.preserveXmlDeclaration||this.j(new XmlDeclaration(version,encoding||void 0,standalone||void 0),startIndex)}a(message){let{c:scanner}=this;return new XmlError(message,scanner.d,scanner.m)}p(string){let{length}=string;for(let i=0;i<length;++i){let cp=string.codePointAt(i);if(!isXmlCodePoint(cp))throw this.c.o(-([...string].length-i)),this.a("Invalid character");cp>65535&&(i+=1)}}};function normalizeLineBreaks(text){let i=0;for(;-1!==(i=text.indexOf("\r",i));)text="\n"===text[i+1]?text.slice(0,i)+text.slice(i+1):text.slice(0,i)+"\n"+text.slice(i+1);return text}function parseXml(xml,options){return new Parser(xml,options).document}const encodedJs="",blob="undefined"!=typeof window&&window.Blob&&new Blob([atob(encodedJs)],{type:"text/javascript;charset=utf-8"});function WorkerWrapper(options){let objURL;try{if(objURL=blob&&(window.URL||window.webkitURL).createObjectURL(blob),!objURL)throw"";const worker=new Worker(objURL,{name:null==options?void 0:options.name});return worker.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(objURL)})),worker}catch(e){return new Worker("data:text/javascript;base64,"+encodedJs,{name:null==options?void 0:options.name})}finally{objURL&&(window.URL||window.webkitURL).revokeObjectURL(objURL)}}let workerInstance,fallbackWithoutWorker=!1;function getWorkerInstance(){return fallbackWithoutWorker?null:(workerInstance||(workerInstance=new WorkerWrapper),workerInstance)}var browser=__webpack_require__("./node_modules/@camptocamp/ogc-client/node_modules/@rgrove/parse-xml/dist/browser.js");class XmlParseError extends Error{constructor(message){super(message)}}function stripNamespace(name){const colon=name.indexOf(":");return colon>-1?name.substr(colon+1):name}function getRootElement(xmlDoc){return xmlDoc.children[0]}function getElementName(element){return element.name||""}function findChildrenElement(element,name,nested=!1){const strippedName=stripNamespace(name);return element&&Array.isArray(element.children)?element.children.reduce((function reducer(prev,curr){return stripNamespace(getElementName(curr))===strippedName&&prev.push(curr),nested&&Array.isArray(curr.children)?[...prev,...curr.children.reduce(reducer,[])]:prev}),[]):[]}function findChildElement(element,name,nested=!1){return findChildrenElement(element,name,nested)[0]||null}function getChildrenElement(element){return element&&Array.isArray(element.children)?[...element.children.filter((el=>el instanceof browser.XmlElement))]:[]}function getElementText(element){const textNode=element&&Array.isArray(element.children)?element.children.find((node=>"text"===node.type)):null;return textNode?textNode.text:""}function getElementAttribute(element,attrName){return element&&element.attributes[attrName]||""}class EndpointError extends Error{constructor(message,httpStatus,isCrossOriginRelated){super(message),this.message=message,this.httpStatus=httpStatus,this.isCrossOriginRelated=isCrossOriginRelated}}const ENCODINGS=["utf-8","utf-16","iso-8859-1"],FALLBACK_ENCODING="utf-8";const fetchPromises=new Map;let fetchOptions={},fetchOptionsUpdateCallback=null;function getFetchOptions(){return fetchOptions}function sharedFetch(url,method="GET"){const fetchKey=`${method}#${url}`;if(fetchPromises.has(fetchKey))return fetchPromises.get(fetchKey);const promise=fetch(url,{...getFetchOptions(),method}).catch((e=>e)).then((resp=>(fetchPromises.delete(fetchKey),resp)));return fetchPromises.set(fetchKey,promise),promise.then((resp=>{if(resp instanceof Error)throw resp;return resp}))}function queryXmlDocument(url){return sharedFetch(url).catch((()=>fetch(url,{...getFetchOptions(),method:"HEAD",mode:"no-cors"}).catch((error=>{throw new EndpointError(`Fetching the document failed either due to network errors or unreachable host, error is: ${error.message}`,0,!1)})).then((()=>{throw new EndpointError("The document could not be fetched due to CORS limitations",0,!0)})))).then(function(){var _ref=(0,asyncToGenerator.Z)((function*(resp){if(!resp.ok){const text=yield resp.text();throw new EndpointError(`Received an error with code ${resp.status}: ${text}`,resp.status,!1)}return function decodeString(buffer,contentType){const encodingHint=contentType?function extractEncoding(contentType){const matches=/charset=([^;]+)/.exec(contentType);return matches?matches[1]:null}(contentType):null,encodingAttempts=encodingHint?[encodingHint,...ENCODINGS]:ENCODINGS;for(const encoding of encodingAttempts)try{return new TextDecoder(encoding,{fatal:!0}).decode(buffer)}catch(e){}return console.warn(`[ogc-client] XML document encoding could not be determined, falling back to ${FALLBACK_ENCODING}.`),new TextDecoder(FALLBACK_ENCODING).decode(buffer)}(yield resp.arrayBuffer(),resp.headers.get("Content-Type"))}));return function(_x){return _ref.apply(this,arguments)}}()).then((xml=>function parseXmlString(xmlString){let doc=null;try{doc=(0,browser.parseXml)(xmlString)}catch(e){throw new XmlParseError(e.message)}return doc}(xml)))}function setQueryParams(url,params){const encodedUrlMatch=url.match(/(https?%3A%2F%2F[^/]+)$/);if(encodedUrlMatch){const encodedUrl=encodedUrlMatch[1],modifiedUrl=setQueryParams(decodeURIComponent(encodedUrl),params);return url.replace(encodedUrl,encodeURIComponent(modifiedUrl))}const urlObj=new URL(url),keys=Object.keys(params),keysLower=keys.map((key=>key.toLowerCase())),toDelete=[];for(const param of urlObj.searchParams.keys())keysLower.indexOf(param.toLowerCase())>-1&&toDelete.push(param);return toDelete.map((param=>urlObj.searchParams.delete(param))),keys.forEach((key=>urlObj.searchParams.set(key,!0===params[key]?"":params[key]))),urlObj.toString()}function getTypeFromXsdType(xsdType){switch(xsdType.indexOf(":")>-1?xsdType.substr(xsdType.indexOf(":")+1):xsdType){case"string":default:return"string";case"boolean":return"boolean";case"float":case"double":case"decimal":return"float";case"long":case"byte":case"integer":case"int":case"positiveInteger":case"negativeInteger":case"nonPositiveInteger":case"nonNegativeInteger":case"short":case"unsignedLong":case"unsignedInt":case"unsignedShort":case"unsignedByte":return"integer"}}let cachePromise,cacheExpiryDuration=36e5;function getCache(){return void 0!==cachePromise?cachePromise:"caches"in globalThis?(cachePromise=caches.open("ogc-client").catch((e=>(console.info("[ogc-client] Cache could not be accessed for the following reason:",e),null))),cachePromise):(cachePromise=Promise.resolve(null),cachePromise)}function _storeCacheEntry(){return(_storeCacheEntry=(0,asyncToGenerator.Z)((function*(object,...keys){const cache=yield getCache();if(!cache)return;const entryUrl="https://cache/"+keys.join("/");yield cache.put(entryUrl,new Response(JSON.stringify(object),{headers:{"x-expiry":(Date.now()+cacheExpiryDuration).toString(10)}}))}))).apply(this,arguments)}function _hasValidCacheEntry(){return(_hasValidCacheEntry=(0,asyncToGenerator.Z)((function*(...keys){const cache=yield getCache();if(!cache)return;const entryUrl="https://cache/"+keys.join("/");return cache.match(entryUrl).then((req=>!!req&&parseInt(req.headers.get("x-expiry"))>Date.now()))}))).apply(this,arguments)}function _readCacheEntry(){return(_readCacheEntry=(0,asyncToGenerator.Z)((function*(...keys){const cache=yield getCache();if(!cache)return;const entryUrl="https://cache/"+keys.join("/"),response=yield cache.match(entryUrl);return response?response.clone().json():null}))).apply(this,arguments)}const tasksMap=new Map;function useCache(_x2){return _useCache.apply(this,arguments)}function _useCache(){return _useCache=(0,asyncToGenerator.Z)((function*(factory,...keys){if(yield function purgeEntries(){return _purgeEntries.apply(this,arguments)}(),yield function hasValidCacheEntry(){return _hasValidCacheEntry.apply(this,arguments)}(...keys))return function readCacheEntry(){return _readCacheEntry.apply(this,arguments)}(...keys);const taskKey=keys.join("#");if(tasksMap.has(taskKey))return tasksMap.get(taskKey);const taskRun=factory();taskRun instanceof Promise&&(taskRun.then((()=>tasksMap.delete(taskKey))),tasksMap.set(taskKey,taskRun));const result=yield taskRun;return yield function storeCacheEntry(_x){return _storeCacheEntry.apply(this,arguments)}(result,...keys),result})),_useCache.apply(this,arguments)}function _purgeEntries(){return(_purgeEntries=(0,asyncToGenerator.Z)((function*(){const cache=yield getCache();if(!cache)return;const keys=yield cache.keys();for(const key of keys){const resp=yield cache.match(key);parseInt(resp.headers.get("x-expiry"))<=Date.now()&&(yield cache.delete(key))}}))).apply(this,arguments)}function generateGetFeatureUrl(serviceUrl,version,featureType,outputFormat,maxFeatures,attributes,hitsOnly,outputCrs,extent,extentCrs){const countParam="2.0.0"===version?"COUNT":"MAXFEATURES",newParams={SERVICE:"WFS",REQUEST:"GetFeature",VERSION:version,["2.0.0"===version?"TYPENAMES":"TYPENAME"]:featureType};if(void 0!==outputFormat&&(newParams.OUTPUTFORMAT=outputFormat),void 0!==attributes&&(newParams.PROPERTYNAME=attributes.join(",")),hitsOnly?(newParams.RESULTTYPE="hits",newParams[countParam]="1"):void 0!==maxFeatures&&(newParams[countParam]=maxFeatures.toString(10)),outputCrs&&(newParams.SRSNAME=outputCrs),extent){const extentJoined=extent.join(",");newParams.BBOX=extentCrs?`${extentJoined},${extentCrs}`:extentJoined}return setQueryParams(serviceUrl,newParams)}function isMimeTypeJson(mimeType){return mimeType.toLowerCase().indexOf("json")>-1}function isMimeTypeGeoJson(mimeType){return/geo.?json/.test(mimeType)}function isMimeTypeJsonFg(mimeType){return/json.?fg|fg.?json/.test(mimeType)}class WfsEndpoint{_capabilitiesUrl;_capabilitiesPromise;_info;_featureTypes;_version;constructor(url){this._capabilitiesUrl=setQueryParams(url,{SERVICE:"WFS",REQUEST:"GetCapabilities"}),this._capabilitiesPromise=useCache((()=>function parseWfsCapabilities(capabilitiesUrl){return sendTaskRequest("parseWfsCapabilities",getWorkerInstance(),{url:capabilitiesUrl})}(this._capabilitiesUrl)),"WFS","CAPABILITIES",this._capabilitiesUrl).then((({info,featureTypes,version})=>{this._info=info,this._featureTypes=featureTypes,this._version=version}))}isReady(){return this._capabilitiesPromise.then((()=>this))}getServiceInfo(){return this._info}getFeatureTypes(){return this._featureTypes.map((featureType=>({name:featureType.name,..."title"in featureType&&{title:featureType.title},..."abstract"in featureType&&{abstract:featureType.abstract},..."latLonBoundingBox"in featureType&&{boundingBox:featureType.latLonBoundingBox}})))}_getFeatureTypeByName(name){if(!this._featureTypes)return null;const isQualified=stripNamespace(name)!==name;return this._featureTypes.find((featureType=>isQualified?featureType.name===name:stripNamespace(featureType.name)===name))||null}getFeatureTypeSummary(name){const featureType=this._getFeatureTypeByName(name);return featureType?{name:featureType.name,..."title"in featureType&&{title:featureType.title},..."abstract"in featureType&&{abstract:featureType.abstract},..."latLonBoundingBox"in featureType&&{boundingBox:featureType.latLonBoundingBox},defaultCrs:featureType.defaultCrs,otherCrs:featureType.otherCrs,outputFormats:featureType.outputFormats}:null}getFeatureTypeFull(name){const featureType=this._getFeatureTypeByName(name);return featureType?useCache((()=>{const describeUrl=function generateDescribeFeatureTypeUrl(serviceUrl,version,featureType){return setQueryParams(serviceUrl,{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:version,["2.0.0"===version?"TYPENAMES":"TYPENAME"]:featureType})}(this._capabilitiesUrl,this._version,name),getFeatureUrl=generateGetFeatureUrl(this._capabilitiesUrl,this._version,name,void 0,void 0,void 0,!0);return Promise.all([queryXmlDocument(describeUrl),queryXmlDocument(getFeatureUrl)]).then((([describeResponse,getFeatureResponse])=>function parseFeatureTypeInfo(featureType,describeFeatureTypeDoc,getFeatureHitsDoc,serviceVersion){const{name,title,abstract,defaultCrs,otherCrs,outputFormats,latLonBoundingBox:boundingBox}=featureType,hitsAttr=serviceVersion.startsWith("2.0")?"numberMatched":"numberOfFeatures",objectCount=parseInt(getElementAttribute(getRootElement(getFeatureHitsDoc),hitsAttr)),complexTypeEl=findChildrenElement(getRootElement(describeFeatureTypeDoc),"complexType",!0)[0],typeElementsEls=findChildrenElement(complexTypeEl,"element",!0),properties=typeElementsEls.filter((el=>getElementAttribute(el,"type").startsWith("xsd:"))).reduce(((prev,curr)=>({...prev,[getElementAttribute(curr,"name")]:getTypeFromXsdType(getElementAttribute(curr,"type"))})),{}),geomEl=typeElementsEls.filter((el=>getElementAttribute(el,"type").startsWith("gml:")))[0],geometryName=geomEl?getElementAttribute(geomEl,"name"):void 0,geometryType=geomEl?function getGeomTypeFromGmlType(gmlType){switch(gmlType.indexOf(":")>-1?gmlType.substr(gmlType.indexOf(":")+1):gmlType){case"PointPropertyType":return"point";case"MultiPointPropertyType":return"multipoint";case"CurvePropertyType":case"LineStringPropertyType":case"MultiCurvePropertyType":case"MultiLineStringPropertyType":return"linestring";case"PolygonPropertyType":case"SurfacePropertyType":return"polygon";case"MultiPolygonPropertyType":case"MultiSurfacePropertyType":return"multipolygon";default:return"unknown"}}(getElementAttribute(geomEl,"type")):void 0;return{name,...title&&{title},...abstract&&{abstract},...boundingBox&&{boundingBox},...defaultCrs&&{defaultCrs},...otherCrs&&{otherCrs},...outputFormats&&{outputFormats},properties,...geometryName&&{geometryName},...geometryType&&{geometryType},...!Number.isNaN(objectCount)&&{objectCount}}}(featureType,describeResponse,getFeatureResponse,this._version)))}),"WFS","FEATURETYPEINFO",this._capabilitiesUrl,name):null}getSingleFeatureTypeName(){return this._featureTypes&&1===this._featureTypes.length?this._featureTypes[0].name:null}getFeatureTypePropDetails(name){var _this=this;return(0,asyncToGenerator.Z)((function*(){const featureTypeFull=yield _this.getFeatureTypeFull(name);return null===featureTypeFull?null:useCache((()=>function queryWfsFeatureTypeDetails(capabilitiesUrl,serviceVersion,featureTypeFull){return sendTaskRequest("queryWfsFeatureTypeDetails",getWorkerInstance(),{url:capabilitiesUrl,serviceVersion,featureTypeFull})}(_this._capabilitiesUrl,_this._version,featureTypeFull).then((result=>result.props))),"WFS","FEATURETYPEPROPDETAILS",_this._capabilitiesUrl,name)}))()}getVersion(){return this._version}_getJsonCompatibleOutputFormat(featureType){const featureTypeInfo=this._getFeatureTypeByName(featureType);if(!featureTypeInfo)throw new Error(`The following feature type was not found in the service: ${featureType}`);const candidates=featureTypeInfo.outputFormats.filter(isMimeTypeJson);return candidates.length?candidates[0]:null}supportsJson(featureType){return this._featureTypes?!!this._getJsonCompatibleOutputFormat(featureType):null}getFeatureUrl(featureType,options){if(!this._featureTypes)return null;const{maxFeatures,asJson,outputFormat,outputCrs,extent,extentCrs}=options||{},internalFeatureType=this._getFeatureTypeByName(featureType);if(!internalFeatureType)throw new Error(`The following feature type was not found in the service: ${featureType}`);let format=outputFormat;if(asJson){if(format=this._getJsonCompatibleOutputFormat(featureType)||void 0,!format)throw new Error(`The endpoint does not appear to support GeoJSON for the feature type ${internalFeatureType.name}`)}else outputFormat&&-1===internalFeatureType.outputFormats.indexOf(outputFormat)&&console.warn(`[ogc-client] The following output format type was not found in the feature type ${internalFeatureType.name}: ${outputFormat}`);return generateGetFeatureUrl(this._capabilitiesUrl,this._version,internalFeatureType.name,format,maxFeatures,void 0,void 0,outputCrs,extent,extentCrs)}}class WmsEndpoint{_capabilitiesPromise;_info;_layers;_version;constructor(url){const capabilitiesUrl=setQueryParams(url,{SERVICE:"WMS",REQUEST:"GetCapabilities"});this._capabilitiesPromise=useCache((()=>function parseWmsCapabilities(capabilitiesUrl){return sendTaskRequest("parseWmsCapabilities",getWorkerInstance(),{url:capabilitiesUrl})}(capabilitiesUrl)),"WMS","CAPABILITIES",capabilitiesUrl).then((({info,layers,version})=>{this._info=info,this._layers=layers,this._version=version}))}isReady(){return this._capabilitiesPromise.then((()=>this))}getServiceInfo(){return this._info}getLayers(){return this._layers.map((function layerSummaryMapper(layerFull){return{title:layerFull.title,name:layerFull.name,abstract:layerFull.abstract,..."children"in layerFull&&{children:layerFull.children.map(layerSummaryMapper)}}}))}getLayerByName(name){let result=null;return this._layers.map((function layerLookup(layer){null===result&&(layer.name!==name?"children"in layer&&layer.children.map(layerLookup):result=layer)})),result}getSingleLayerName(){if(!this._layers)return null;const layers=[];return this._layers.map((function layerLookup(layer){layer.name&&layers.push(layer),"children"in layer&&layer.children.map(layerLookup)})),1===layers.length?layers[0].name:null}getVersion(){return this._version}}class WmtsEndpoint{_capabilitiesPromise;_info=null;_layers=null;_matrixSets=null;constructor(url){const capabilitiesUrl=setQueryParams(url,{SERVICE:"WMTS",REQUEST:"GetCapabilities"});this._capabilitiesPromise=useCache((()=>function parseWmtsCapabilities(capabilitiesUrl){return sendTaskRequest("parseWmtsCapabilities",getWorkerInstance(),{url:capabilitiesUrl})}(capabilitiesUrl)),"WMTS","CAPABILITIES",capabilitiesUrl).then((({info,layers,matrixSets})=>{this._info=info,this._layers=layers,this._matrixSets=matrixSets}))}isReady(){return this._capabilitiesPromise.then((()=>this))}getServiceInfo(){return this._info}getLayers(){return this._layers}getMatrixSets(){return this._matrixSets}getMatrixSetByIdentifier(identifier){return this._matrixSets?this._matrixSets.find((matrixSet=>matrixSet.identifier===identifier))??null:null}getLayerByName(name){return this._layers?this._layers.find((layer=>layer.name===name))??null:null}getSingleLayerName(){return this._layers&&1===this._layers.length?this._layers[0].name:null}getLayerResourceLink(layerName,formatHint){if(!this._layers)return null;const layer=this.getLayerByName(layerName);let resourceLinkIndex=0;formatHint&&(resourceLinkIndex=layer.resourceLinks.findIndex((resourceLink2=>resourceLink2.format===formatHint))||0);const resourceLink=layer.resourceLinks[resourceLinkIndex];return formatHint&&resourceLink.format!==formatHint&&console.warn(`[ogc-client] Requested '${formatHint}' format for the WMTS layer but it is not available in REST encoding, falling back to '${resourceLink.format}'`),resourceLink}getTileUrl(layerName,styleName,matrixSetName,tileMatrix,tileRow,tileCol,outputFormat){if(!this._layers)return null;const resourceLink=this.getLayerResourceLink(layerName,outputFormat);return function generateGetTileUrl(baseUrl,requestEncoding,layerName,styleName,matrixSetName,tileMatrix,tileRow,tileCol,outputFormat){const context={layer:layerName,style:styleName,tilematrixset:matrixSetName,Service:"WMTS",Request:"GetTile",Format:outputFormat,TileMatrix:tileMatrix,TileCol:tileCol.toString(),TileRow:tileRow.toString()};if("REST"===requestEncoding){let url=baseUrl;for(const key in context)url=url.replace(new RegExp(`{${key}}`,"ig"),context[key]);return url}return setQueryParams(baseUrl,context)}(resourceLink.url,resourceLink.encoding,layerName,styleName,matrixSetName,tileMatrix,tileRow,tileCol,resourceLink.format)}getDefaultDimensions(layerName){if(!this._layers)return null;const layer=this.getLayerByName(layerName);return layer.dimensions?layer.dimensions.reduce(((prev,curr)=>({...prev,[curr.identifier]:curr.defaultValue})),{}):{}}tileGridModule;getOpenLayersTileGrid(layerName,matrixSetIdentifier){if(!this._layers)return null;this.tileGridModule||(this.tileGridModule=Promise.all([__webpack_require__.e(206),__webpack_require__.e(6586),__webpack_require__.e(7564)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@camptocamp/ogc-client/dist/wmts/ol-tilegrid.js")).catch((e=>(console.warn("[ogc-client] Cannot use getOpenLayersTileGrid, the 'ol' package is probably not available.\n",e),null))));const layer=this.getLayerByName(layerName),matrixSetLink=layer.matrixSets.find((matrixSet2=>matrixSet2.identifier===matrixSetIdentifier))??layer.matrixSets[0],matrixSet=this.getMatrixSetByIdentifier(matrixSetLink.identifier);return this.tileGridModule.then((({buildOpenLayersTileGrid})=>buildOpenLayersTileGrid(matrixSet,matrixSetLink.limits)))}}const CollectionParameterTypes=["string","number","integer","date","point","linestring","polygon","geometry"];function fetchDocument(url){const urlObj=new URL(url,window.location.toString());urlObj.searchParams.set("f","json");const options=getFetchOptions(),optionsHeaders="headers"in options?options.headers:{};return fetch(urlObj.toString(),{...options,headers:{...optionsHeaders,Accept:"application/json"}}).then((resp=>{if(!resp.ok)throw new Error(`The document at ${urlObj} could not be fetched.`);return resp.json().catch((()=>{throw new Error(`The document at ${urlObj} does not appear to be valid JSON.`)}))}))}function fetchRoot(url){return fetchDocument(url).then((doc=>{if(!hasLinks(doc,["data","http://www.opengis.net/def/rel/ogc/1.0/data"])||!hasLinks(doc,["conformance","http://www.opengis.net/def/rel/ogc/1.0/conformance"])){let parentUrl=getParentPath(url);if(!parentUrl)throw new Error("Could not find a root JSON document containing both a link with rel='data' and a link with rel='conformance'.");if("collections"in doc){const urlObj=new URL(parentUrl);urlObj.pathname=`${urlObj.pathname}/`,parentUrl=urlObj.toString()}return fetchRoot(parentUrl)}return doc}))}function fetchCollectionRoot(url){return fetchDocument(url).then((doc=>{if(hasLinks(doc,["data","http://www.opengis.net/def/rel/ogc/1.0/data"]))return null;let parentUrl=getParentPath(url);return hasLinks(doc,["items"])?doc:("collections"in doc&&(parentUrl=`${parentUrl}/`),fetchCollectionRoot(parentUrl))}))}function getLinks(doc,relType){return doc.links?.filter((link=>Array.isArray(relType)?relType.indexOf(link.rel)>-1:link.rel===relType))||[]}function getLinkUrl(doc,relType,baseUrl){const link=getLinks(doc,relType)[0];return link?new URL(link.href,baseUrl||window.location.toString()).toString():null}function fetchLink(doc,relType,baseUrl){const url=getLinkUrl(doc,relType,baseUrl);return url?fetchDocument(url):Promise.reject(new EndpointError(`Could not find link with type: ${relType}`))}function hasLinks(doc,relType){return!!getLinkUrl(doc,relType)}function assertHasLinks(doc,relType){if(!hasLinks(doc,relType))throw new EndpointError(`Could not find link with type: ${relType}`)}function getParentPath(url){const urlObj=new URL(url,window.location.toString()),pathParts=urlObj.pathname.replace(/\/$/,"").split("/");return pathParts.length<=2?null:(urlObj.pathname=pathParts.slice(0,-1).join("/"),urlObj.toString())}function parseEndpointInfo(rootDoc){try{assertHasLinks(rootDoc,["data","http://www.opengis.net/def/rel/ogc/1.0/data"]),assertHasLinks(rootDoc,["conformance","http://www.opengis.net/def/rel/ogc/1.0/conformance"])}catch(e){throw new EndpointError(`The endpoint appears non-conforming, the following error was encountered:\n${e.message}`)}return{title:rootDoc.title,description:rootDoc.description,attribution:rootDoc.attribution}}function parseConformance(doc){return doc.conformsTo}function parseCollections(itemType=null){return doc=>doc.collections.filter((collection=>null===itemType||collection.itemType===itemType)).map((collection=>collection.id))}function checkTileConformance(conformance){return conformance.indexOf("http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core")>-1}function checkStyleConformance(conformance){return conformance.indexOf("http://www.opengis.net/spec/ogcapi-styles-1/0.0/conf/core")>-1}function checkHasRecords([collections,conformance]){return(["http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-core","http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-collection","http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/record-api"].every((confClass=>conformance.indexOf(confClass)>-1))||conformance.indexOf("http://www.opengis.net/spec/ogcapi-records-1/1.0/conf/core")>-1)&&collections.some((collection=>"record"===collection.itemType))}function checkHasFeatures([collections,conformance]){return conformance.indexOf("http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core")>-1&&collections.some((collection=>"feature"===collection.itemType))}function parseCollectionParameters(doc){return"properties"in doc&&"object"==typeof doc.properties?Object.keys(doc.properties).map((name=>{const prop=doc.properties[name];let type="string";if("string"==typeof prop.$ref){const schemaRef=prop.$ref.toLowerCase();schemaRef.indexOf("point")>-1?type="point":schemaRef.indexOf("linestring")>-1?type="linestring":schemaRef.indexOf("polygon")>-1?type="polygon":schemaRef.indexOf("geometry")>-1&&(type="geometry")}else"string"==typeof prop.type&&CollectionParameterTypes.indexOf(prop.type.toLowerCase())>-1&&(type=prop.type.toLowerCase());return{name,type,..."string"==typeof prop.title&&{title:prop.title}}})):Array.isArray(doc)?doc.map((prop=>({name:prop,type:"string"}))):[]}class OgcApiEndpoint{constructor(baseUrl){this.baseUrl=baseUrl}root_;conformance_;data_;get root(){return this.root_||(this.root_=fetchRoot(this.baseUrl).catch((e=>{throw new Error(`The endpoint appears non-conforming, the following error was encountered:\n${e.message}`)}))),this.root_}get conformance(){return this.conformance_||(this.conformance_=this.root.then((root=>fetchLink(root,["conformance","http://www.opengis.net/def/rel/ogc/1.0/conformance"],this.baseUrl)))),this.conformance_}get collectionsUrl(){return this.root.then((root=>getLinkUrl(root,["data","http://www.opengis.net/def/rel/ogc/1.0/data"],this.baseUrl)))}get data(){var _this=this;return this.data_||(this.data_=this.collectionsUrl.then(fetchDocument).then(function(){var _ref=(0,asyncToGenerator.Z)((function*(data){const singleCollection=yield fetchCollectionRoot(_this.baseUrl);return null!==singleCollection&&Array.isArray(data.collections)&&(data.collections=data.collections.filter((collection=>collection.id===singleCollection.id))),data}));return function(_x){return _ref.apply(this,arguments)}}())),this.data_}get info(){return this.root.then(parseEndpointInfo)}get conformanceClasses(){return this.conformance.then(parseConformance)}get allCollections(){return this.data.then(parseCollections())}get recordCollections(){return Promise.all([this.data,this.hasRecords]).then((([data,hasRecords])=>hasRecords?data:{collections:[]})).then(parseCollections("record"))}get featureCollections(){return Promise.all([this.data,this.hasFeatures]).then((([data,hasFeatures])=>hasFeatures?data:{collections:[]})).then(parseCollections("feature"))}get hasTiles(){return this.conformanceClasses.then(checkTileConformance)}get hasStyles(){return this.conformanceClasses.then(checkStyleConformance)}get hasFeatures(){return Promise.all([this.data.then((data=>data.collections)),this.conformanceClasses]).then(checkHasFeatures)}get hasRecords(){return Promise.all([this.data.then((data=>data.collections)),this.conformanceClasses]).then(checkHasRecords)}getCollectionDocument(collectionId){var _this2=this;return Promise.all([this.allCollections,this.data]).then((([collections,data])=>{if(-1===collections.indexOf(collectionId))throw new EndpointError(`Collection not found: ${collectionId}`);return data.collections.find((collection=>collection.id===collectionId))})).then(function(){var _ref2=(0,asyncToGenerator.Z)((function*(collection){return hasLinks(collection,["self"])?fetchLink(collection,"self",_this2.baseUrl):fetchDocument(`${yield _this2.collectionsUrl}/${collectionId}`)}));return function(_x2){return _ref2.apply(this,arguments)}}())}getCollectionInfo(collectionId){var _this3=this;return(0,asyncToGenerator.Z)((function*(){const collectionDoc=yield _this3.getCollectionDocument(collectionId),baseInfo=function parseBaseCollectionInfo(doc){const{links,...props}=doc,itemFormats=links.filter((link=>"items"===link.rel)).map((link=>link.type)),bulkDownloadLinks=links.filter((link=>"enclosure"===link.rel)).reduce(((acc,link)=>(acc[link.type]=link.href,acc)),{}),mimeTypes=Object.keys(bulkDownloadLinks),jsonMimeType=mimeTypes.find(isMimeTypeJsonFg)||mimeTypes.find(isMimeTypeGeoJson)||mimeTypes.find(isMimeTypeJson);return{itemFormats,bulkDownloadLinks,jsonDownloadLink:jsonMimeType?bulkDownloadLinks[jsonMimeType]:null,...props}}(collectionDoc),[queryables,sortables]=yield Promise.all([fetchLink(collectionDoc,["queryables","http://www.opengis.net/def/rel/ogc/1.0/queryables"],_this3.baseUrl).then(parseCollectionParameters).catch((()=>[])),fetchLink(collectionDoc,["sortables","http://www.opengis.net/def/rel/ogc/1.0/sortables"],_this3.baseUrl).then(parseCollectionParameters).catch((()=>[]))]);return{...baseInfo,queryables,sortables}}))()}getCollectionItems(collectionId,limit=10,offset=0,skipGeometry=null,sortby=null,bbox=null,properties=null){return this.getCollectionDocument(collectionId).then((collectionDoc=>{const url=new URL(getLinkUrl(collectionDoc,"items",this.baseUrl),window.location.toString());return url.searchParams.set("limit",limit.toString()),url.searchParams.set("offset",offset.toString()),null!==skipGeometry&&url.searchParams.set("skipGeometry",skipGeometry.toString()),null!==sortby&&url.searchParams.set("sortby",sortby.join(",").toString()),null!==bbox&&url.searchParams.set("bbox",bbox.join(",").toString()),null!==properties&&url.searchParams.set("properties",properties.join(",").toString()),url.toString()})).then(fetchDocument).then((doc=>doc.features))}getCollectionItem(collectionId,itemId){return this.getCollectionDocument(collectionId).then((collectionDoc=>{const url=new URL(getLinkUrl(collectionDoc,"items",this.baseUrl),window.location.toString());return url.pathname+=`/${itemId}`,url.toString()})).then(fetchDocument)}getCollectionItemsUrl(collectionId,options={}){return this.getCollectionDocument(collectionId).then((collectionDoc=>{const baseUrl=this.baseUrl||"",itemLinks=getLinks(collectionDoc,"items");let url,linkWithFormat=itemLinks.find((link=>link.type===options?.outputFormat));return options.asJson&&(linkWithFormat=itemLinks.find((link=>isMimeTypeJsonFg(link.type)))||itemLinks.find((link=>isMimeTypeGeoJson(link.type)))||itemLinks.find((link=>isMimeTypeJson(link.type)))),options?.outputFormat&&!linkWithFormat?(console.warn(`[ogc-client] The following output format type was not found in the collection '${collectionId}': ${options.outputFormat}`),url=new URL(itemLinks[0].href,baseUrl),url.searchParams.set("f",options.outputFormat)):url=linkWithFormat?new URL(linkWithFormat.href,baseUrl):new URL(itemLinks[0].href,baseUrl),void 0!==options.query&&(url.search+=(url.search?"&":"")+options.query),void 0!==options.limit&&url.searchParams.set("limit",options.limit.toString()),void 0!==options.offset&&url.searchParams.set("offset",options.offset.toString()),void 0!==options.outputCrs&&url.searchParams.set("crs",options.outputCrs),void 0!==options.extent&&4===options.extent.length&&url.searchParams.set("bbox",options.extent.join(",")),void 0!==options.extentCrs&&url.searchParams.set("bbox-crs",options.extentCrs),url.toString()})).catch((error=>{throw console.error("Error fetching collection items URL:",error),error}))}}function addTaskHandler(taskName,scope,handler){const useWorker="undefined"!=typeof WorkerGlobalScope,eventHandler=function(){var _ref=(0,asyncToGenerator.Z)((function*(request){if(request.taskName===taskName){let response,error;try{response=yield handler(request.params)}catch(e){error=e}const message={taskName,requestId:request.requestId,...response&&{response},...error&&{error}};useWorker?scope.postMessage(message):scope.dispatchEvent(new CustomEvent("ogc-client.response",{detail:message}))}}));return function eventHandler(_x){return _ref.apply(this,arguments)}}();useWorker?scope.addEventListener("message",(event=>eventHandler(event.data))):scope.addEventListener("ogc-client.request",(event=>eventHandler(event.detail)))}const LatLonCrsList=["EPSG:4046","EPSG:4075","EPSG:4120","EPSG:4122","EPSG:4124","EPSG:4126","EPSG:4149","EPSG:4151","EPSG:4153","EPSG:4155","EPSG:4157","EPSG:4159","EPSG:4161","EPSG:4163","EPSG:4165","EPSG:4167","EPSG:4169","EPSG:4171","EPSG:4173","EPSG:4175","EPSG:4178","EPSG:4180","EPSG:4182","EPSG:4184","EPSG:4188","EPSG:4190","EPSG:4191","EPSG:4196","EPSG:4198","EPSG:4202","EPSG:4210","EPSG:4211","EPSG:4214","EPSG:4226","EPSG:4229","EPSG:4231","EPSG:4233","EPSG:4236","EPSG:4238","EPSG:4240","EPSG:4242","EPSG:4244","EPSG:4246","EPSG:4248","EPSG:4250","EPSG:4252","EPSG:4255","EPSG:4258","EPSG:4261","EPSG:4264","EPSG:4267","EPSG:4270","EPSG:4273","EPSG:4276","EPSG:4279","EPSG:4281","EPSG:4284","EPSG:4286","EPSG:4288","EPSG:4292","EPSG:4295","EPSG:4297","EPSG:4299","EPSG:4302","EPSG:4324","EPSG:4326"];function simplifyEpsgUrn(fullCrsName){if(/^urn:(?:x-)?ogc:def:crs:epsg:/.test(fullCrsName.toLowerCase())){return`EPSG:${/([0-9]+)$/.exec(fullCrsName)[1]}`}return fullCrsName}function readVersionFromCapabilities(capabilitiesDoc){return getRootElement(capabilitiesDoc).attributes.version}function readLayersFromCapabilities(capabilitiesDoc){const version=readVersionFromCapabilities(capabilitiesDoc);return findChildrenElement(findChildElement(getRootElement(capabilitiesDoc),"Capability"),"Layer").map((layerEl=>parseLayer(layerEl,version)))}function readInfoFromCapabilities(capabilitiesDoc){const service=findChildElement(getRootElement(capabilitiesDoc),"Service"),keywords=findChildrenElement(findChildElement(service,"KeywordList"),"Keyword").map(getElementText).filter(((v,i,arr)=>arr.indexOf(v)===i));return{title:getElementText(findChildElement(service,"Title")),name:getElementText(findChildElement(service,"Name")),abstract:getElementText(findChildElement(service,"Abstract")),fees:getElementText(findChildElement(service,"Fees")),constraints:getElementText(findChildElement(service,"AccessConstraints")),keywords}}function parseLayer(layerEl,version,inheritedSrs=[],inheritedStyles=[],inheritedAttribution=null,inheritedBoundingBoxes=null){const srsTag="1.3.0"===version?"CRS":"SRS",srsList=findChildrenElement(layerEl,srsTag).map(getElementText),availableCrs=srsList.length>0?srsList:inheritedSrs,layerStyles=findChildrenElement(layerEl,"Style").map(parseLayerStyle),styles=layerStyles.length>0?layerStyles:inheritedStyles;function parseBBox(bboxEl){return(function hasInvertedCoordinates(crsName){return LatLonCrsList.indexOf(simplifyEpsgUrn(crsName))>-1}(getElementAttribute(bboxEl,srsTag))&&"1.3.0"===version?["miny","minx","maxy","maxx"]:["minx","miny","maxx","maxy"]).map((name=>getElementAttribute(bboxEl,name)))}const attributionEl=findChildElement(layerEl,"Attribution"),attribution=null!==attributionEl?function parseLayerAttribution(attributionEl){const logoUrl=getElementAttribute(findChildElement(findChildElement(attributionEl,"LogoURL"),"OnlineResource"),"xlink:href"),url=getElementAttribute(findChildElement(attributionEl,"OnlineResource"),"xlink:href"),title=getElementText(findChildElement(attributionEl,"Title"));return{...title&&{title},...url&&{url},...logoUrl&&{logoUrl}}}(attributionEl):inheritedAttribution,latLonBboxEl=findChildElement(layerEl,"1.3.0"===version?"EX_GeographicBoundingBox":"LatLonBoundingBox"),baseBoundingBox={};latLonBboxEl&&(baseBoundingBox["EPSG:4326"]="1.3.0"===version?function parseExGeographicBoundingBox(bboxEl){return["westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude"].map((name=>getElementText(findChildElement(bboxEl,name))))}(latLonBboxEl):function parseLatLonBoundingBox(bboxEl){return["minx","miny","maxx","maxy"].map((name=>getElementAttribute(bboxEl,name)))}(latLonBboxEl));let boundingBoxes=findChildrenElement(layerEl,"BoundingBox").reduce(((prev,bboxEl)=>({...prev,[getElementAttribute(bboxEl,srsTag)]:parseBBox(bboxEl)})),baseBoundingBox);boundingBoxes=Object.keys(boundingBoxes).length>0||null===inheritedBoundingBoxes?boundingBoxes:inheritedBoundingBoxes;const children=findChildrenElement(layerEl,"Layer").map((layer=>parseLayer(layer,version,availableCrs,styles,attribution,boundingBoxes)));return{name:getElementText(findChildElement(layerEl,"Name")),title:getElementText(findChildElement(layerEl,"Title")),abstract:getElementText(findChildElement(layerEl,"Abstract")),availableCrs,styles,attribution,boundingBoxes,...children.length&&{children}}}function parseLayerStyle(styleEl){const legendUrl=getElementAttribute(findChildElement(findChildElement(styleEl,"LegendURL"),"OnlineResource"),"xlink:href");return{name:getElementText(findChildElement(styleEl,"Name")),title:getElementText(findChildElement(styleEl,"Title")),...legendUrl&&{legendUrl}}}function capabilities_readVersionFromCapabilities(capabilitiesDoc){return getRootElement(capabilitiesDoc).attributes.version}function readOutputFormatsFromCapabilities(capabilitiesDoc){let outputFormats;if(capabilities_readVersionFromCapabilities(capabilitiesDoc).startsWith("1.0")){const getFeature=findChildElement(findChildElement(findChildElement(getRootElement(capabilitiesDoc),"Capability"),"Request"),"GetFeature");outputFormats=getChildrenElement(findChildElement(getFeature,"ResultFormat")).map(getElementName)}else{const getFeature=findChildrenElement(findChildElement(getRootElement(capabilitiesDoc),"OperationsMetadata"),"Operation").find((el=>"GetFeature"===getElementAttribute(el,"name"))),parameter=findChildrenElement(getFeature,"Parameter").find((el=>"outputFormat"===getElementAttribute(el,"name")));outputFormats=findChildrenElement(parameter,"Value",!0).map(getElementText)}return outputFormats}function capabilities_readInfoFromCapabilities(capabilitiesDoc){const version=capabilities_readVersionFromCapabilities(capabilitiesDoc),serviceTag=version.startsWith("1.0")?"Service":"ServiceIdentification",nameTag=version.startsWith("1.0")?"Name":"ServiceType",service=findChildElement(getRootElement(capabilitiesDoc),serviceTag);let keywords;return keywords=version.startsWith("1.0")?getElementText(findChildElement(service,"Keywords")).split(",").map((keyword=>keyword.trim())):findChildrenElement(findChildElement(service,"Keywords"),"Keyword").map(getElementText),{title:getElementText(findChildElement(service,"Title")),name:getElementText(findChildElement(service,nameTag)),abstract:getElementText(findChildElement(service,"Abstract")),fees:getElementText(findChildElement(service,"Fees")),constraints:getElementText(findChildElement(service,"AccessConstraints")),keywords,outputFormats:readOutputFormatsFromCapabilities(capabilitiesDoc)}}function readFeatureTypesFromCapabilities(capabilitiesDoc){const version=capabilities_readVersionFromCapabilities(capabilitiesDoc),outputFormats=readOutputFormatsFromCapabilities(capabilitiesDoc);return findChildrenElement(findChildElement(getRootElement(capabilitiesDoc),"FeatureTypeList"),"FeatureType").map((featureTypeEl=>function parseFeatureType(featureTypeEl,serviceVersion,defaultOutputFormats){const srsTag=serviceVersion.startsWith("2.")?"CRS":"SRS",defaultSrsTag=serviceVersion.startsWith("1.0")?"SRS":`Default${srsTag}`;function parseBBox100(){const bboxEl=findChildElement(featureTypeEl,"LatLongBoundingBox");return["minx","miny","maxx","maxy"].map((name=>getElementAttribute(bboxEl,name))).map(parseFloat)}function parseBBox(){const bboxEl=findChildElement(featureTypeEl,"WGS84BoundingBox");return["LowerCorner","UpperCorner"].map((elName=>findChildElement(bboxEl,elName))).map((cornerEl=>getElementText(cornerEl).split(" "))).reduce(((prev,curr)=>[...prev,...curr])).map(parseFloat)}const otherCrs=serviceVersion.startsWith("1.0")?[]:findChildrenElement(featureTypeEl,`Other${srsTag}`).map(getElementText).map(simplifyEpsgUrn),outputFormats=serviceVersion.startsWith("1.0")?[]:findChildrenElement(findChildElement(featureTypeEl,"OutputFormats"),"Format").map(getElementText);return{name:getElementText(findChildElement(featureTypeEl,"Name")),title:getElementText(findChildElement(featureTypeEl,"Title")),abstract:getElementText(findChildElement(featureTypeEl,"Abstract")),defaultCrs:simplifyEpsgUrn(getElementText(findChildElement(featureTypeEl,defaultSrsTag))),otherCrs,outputFormats:outputFormats.length>0?outputFormats:defaultOutputFormats,latLonBoundingBox:serviceVersion.startsWith("1.0")?parseBBox100():parseBBox()}}(featureTypeEl,version,outputFormats)))}function parseBBox(xmlElement){const result=["LowerCorner","UpperCorner"].map((elName=>findChildElement(xmlElement,elName))).map((cornerEl=>getElementText(cornerEl).split(" "))).reduce(((prev,curr)=>[...prev,...curr])).map(parseFloat);return result.some(Number.isNaN)?null:result}function wmts_capabilities_readInfoFromCapabilities(capabilitiesDoc){const rootEl=getRootElement(capabilitiesDoc),service=findChildElement(rootEl,"ServiceIdentification"),keywords=findChildrenElement(findChildElement(service,"Keywords"),"Keyword").map(getElementText),getTileOperation=findChildrenElement(findChildElement(rootEl,"OperationsMetadata"),"Operation").find((el=>"GetTile"==getElementAttribute(el,"name"))),getTileUrls=findChildrenElement(getTileOperation,"Get",!0).reduce(((prev,curr)=>{const encodingType=getElementText(findChildElement(curr,"Value",!0)),url=getElementAttribute(curr,"xlink:href");return"restful"===encodingType.toLowerCase()?{...prev,rest:url}:{...prev,kvp:url}}),{});return{title:getElementText(findChildElement(service,"Title")),name:getElementText(findChildElement(service,"ServiceType")),abstract:getElementText(findChildElement(service,"Abstract")),fees:getElementText(findChildElement(service,"Fees")),constraints:getElementText(findChildElement(service,"AccessConstraints")),keywords,getTileUrls}}function readMatrixSetsFromCapabilities(capabilitiesDoc){function parseMatrixSet(element){const topLeft=getElementText(findChildElement(element,"TopLeftCorner")).split(" ").map(parseFloat);return{identifier:getElementText(findChildElement(element,"Identifier")),tileWidth:parseInt(getElementText(findChildElement(element,"TileWidth"))),tileHeight:parseInt(getElementText(findChildElement(element,"TileHeight"))),matrixWidth:parseInt(getElementText(findChildElement(element,"MatrixWidth"))),matrixHeight:parseInt(getElementText(findChildElement(element,"MatrixHeight"))),scaleDenominator:parseFloat(getElementText(findChildElement(element,"ScaleDenominator"))),topLeft}}return findChildrenElement(findChildElement(getRootElement(capabilitiesDoc),"Contents"),"TileMatrixSet").map((element=>{const wellKnownScaleSet=getElementText(findChildElement(element,"WellKnownScaleSet")),boundingBox=parseBBox(findChildElement(element,"BoundingBox"));return{identifier:getElementText(findChildElement(element,"Identifier")),crs:getElementText(findChildElement(element,"SupportedCRS")),tileMatrices:findChildrenElement(element,"TileMatrix").map(parseMatrixSet),...boundingBox&&{boundingBox},...wellKnownScaleSet&&{wellKnownScaleSet}}}))}function capabilities_readLayersFromCapabilities(capabilitiesDoc){const rootEl=getRootElement(capabilitiesDoc),contentsEl=findChildElement(rootEl,"Contents");function parseMatrixSetLink(element){const fullMatrixSet=findChildrenElement(contentsEl,"TileMatrixSet").find((el=>getElementText(findChildElement(el,"Identifier"))));return{identifier:getElementText(findChildElement(element,"TileMatrixSet")),crs:getElementText(findChildElement(fullMatrixSet,"SupportedCRS")),limits:findChildrenElement(element,"TileMatrixLimits",!0).map((element2=>({tileMatrix:getElementText(findChildElement(element2,"TileMatrix")),minTileRow:parseInt(getElementText(findChildElement(element2,"MinTileRow"))),minTileCol:parseInt(getElementText(findChildElement(element2,"MinTileCol"))),maxTileRow:parseInt(getElementText(findChildElement(element2,"MaxTileRow"))),maxTileCol:parseInt(getElementText(findChildElement(element2,"MaxTileCol")))})))}}const getTileOperation=findChildrenElement(findChildElement(rootEl,"OperationsMetadata"),"Operation").find((el=>"GetTile"==getElementAttribute(el,"name"))),getKvpElt=findChildrenElement(getTileOperation,"Get",!0).filter((elt=>"kvp"===getElementText(findChildElement(elt,"Value",!0)).toLowerCase()))[0],getKvpUrl=getKvpElt?getElementAttribute(getKvpElt,"xlink:href"):"";return findChildrenElement(findChildElement(rootEl,"Contents"),"Layer").map((element=>{const latLonBoundingBox=parseBBox(findChildElement(element,"WGS84BoundingBox"));let defaultStyle="";const styles=findChildrenElement(element,"Style").map((element2=>{const legendUrl=getElementAttribute(findChildElement(element2,"LegendURL"),"xlink:href"),style={title:getElementText(findChildElement(element2,"Title")),name:getElementText(findChildElement(element2,"Identifier")),...legendUrl&&{legendUrl}};return"true"===getElementAttribute(element2,"isDefault")&&(defaultStyle=style.name),style})),outputFormats=findChildrenElement(element,"Format").map(getElementText),resourceLinks=findChildrenElement(element,"ResourceURL").filter((element2=>"tile"===getElementAttribute(element2,"resourceType"))).map((element2=>({format:getElementAttribute(element2,"format"),url:getElementAttribute(element2,"template"),encoding:"REST"})));getKvpUrl&&resourceLinks.push(...outputFormats.map((format=>({encoding:"KVP",url:getKvpUrl,format}))));const matrixSets=findChildrenElement(element,"TileMatrixSetLink").map(parseMatrixSetLink),dimensions=findChildrenElement(element,"Dimension").map((element2=>({identifier:getElementText(findChildElement(element2,"Identifier")),defaultValue:getElementText(findChildElement(element2,"Default")),values:findChildrenElement(element2,"Values").map(getElementText)})));return{name:getElementText(findChildElement(element,"Identifier")),title:getElementText(findChildElement(element,"Title")),abstract:getElementText(findChildElement(element,"Abstract")),styles,resourceLinks,matrixSets,defaultStyle,...latLonBoundingBox&&{latLonBoundingBox},...dimensions&&{dimensions}}}))}function parseFeatureProps(getFeaturesDoc,featureTypeFull,serviceVersion){const collection=getRootElement(getFeaturesDoc);let members;if(serviceVersion.startsWith("2.0"))members=findChildrenElement(collection,"member").map((parent=>getChildrenElement(parent)[0]));else{const membersRoot=findChildElement(collection,"featureMembers");members=membersRoot?getChildrenElement(membersRoot):findChildrenElement(collection,"featureMember").map((parent=>getChildrenElement(parent)[0]))}const idAttr="1.0.0"===serviceVersion?"fid":"gml:id";function parseElementPropertyValue(propName,valueAsString){switch(featureTypeFull.properties[propName]){case"integer":return parseInt(valueAsString);case"float":return parseFloat(valueAsString);case"boolean":return"true"===valueAsString;default:return valueAsString}}function getProperties(memberEl){return getChildrenElement(memberEl).filter((el=>function isElementProperty(propName){return propName in featureTypeFull.properties}(stripNamespace(getElementName(el))))).reduce(((prev,curr)=>{const propName=stripNamespace(getElementName(curr));return{...prev,[propName]:parseElementPropertyValue(propName,getElementText(curr))}}),{})}return members.map((el=>({id:getElementAttribute(el,idAttr),properties:getProperties(el)})))}addTaskHandler("parseWmsCapabilities",globalThis,(({url})=>queryXmlDocument(url).then((xmlDoc=>({info:readInfoFromCapabilities(xmlDoc),layers:readLayersFromCapabilities(xmlDoc),version:readVersionFromCapabilities(xmlDoc)}))))),addTaskHandler("parseWfsCapabilities",globalThis,(({url})=>queryXmlDocument(url).then((xmlDoc=>({info:capabilities_readInfoFromCapabilities(xmlDoc),featureTypes:readFeatureTypesFromCapabilities(xmlDoc),version:capabilities_readVersionFromCapabilities(xmlDoc)}))))),addTaskHandler("queryWfsFeatureTypeDetails",globalThis,(({url,serviceVersion,featureTypeFull})=>queryXmlDocument(generateGetFeatureUrl(url,serviceVersion,featureTypeFull.name,void 0,void 0,Object.keys(featureTypeFull.properties))).then((getFeatureDoc=>{return{props:(featuresWithProps=parseFeatureProps(getFeatureDoc,featureTypeFull,serviceVersion),featuresWithProps.reduce(((prev,curr)=>{for(const propName in curr.properties){const propValue=curr.properties[propName];propName in prev||(prev[propName]={uniqueValues:[]});const uniqueValue=prev[propName].uniqueValues.find((v=>v.value===propValue));uniqueValue?uniqueValue.count++:prev[propName].uniqueValues.push({value:propValue,count:1})}return prev}),{}))};var featuresWithProps})))),addTaskHandler("updateFetchOptions",globalThis,(({options})=>(function setFetchOptions(options){fetchOptions=options,fetchOptionsUpdateCallback&&fetchOptionsUpdateCallback(options)}(options),Promise.resolve({})))),addTaskHandler("parseWmtsCapabilities",globalThis,(({url})=>queryXmlDocument(url).then((xmlDoc=>({info:wmts_capabilities_readInfoFromCapabilities(xmlDoc),layers:capabilities_readLayersFromCapabilities(xmlDoc),matrixSets:readMatrixSetsFromCapabilities(xmlDoc)})))))},"./node_modules/@camptocamp/ogc-client/node_modules/@rgrove/parse-xml/dist/browser.js":module=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,src_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(src_exports,{XmlCdata:()=>XmlCdata,XmlComment:()=>XmlComment,XmlDeclaration:()=>XmlDeclaration,XmlDocument:()=>XmlDocument,XmlDocumentType:()=>XmlDocumentType,XmlElement:()=>XmlElement,XmlError:()=>XmlError,XmlNode:()=>XmlNode,XmlProcessingInstruction:()=>XmlProcessingInstruction,XmlText:()=>XmlText,parseXml:()=>parseXml}),module.exports=(mod=src_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));var surrogatePair=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,attValueCharDoubleQuote=/[^"&<]+/y,attValueCharSingleQuote=/[^'&<]+/y,attValueNormalizedWhitespace=/\r\n|[\n\r\t]/g,endCharData=/<|&|]]>/,predefinedEntities=Object.freeze(Object.assign(Object.create(null),{amp:"&",apos:"'",gt:">",lt:"<",quot:'"'}));function isNameChar(char){let cp=getCodePoint(char);return cp>=97&&cp<=122||cp>=65&&cp<=90||cp>=48&&cp<=57||45===cp||46===cp||183===cp||cp>=768&&cp<=879||cp>=8255&&cp<=8256||isNameStartChar(char,cp)}function isNameStartChar(char,cp=getCodePoint(char)){return cp>=97&&cp<=122||cp>=65&&cp<=90||58===cp||95===cp||cp>=192&&cp<=214||cp>=216&&cp<=246||cp>=248&&cp<=767||cp>=880&&cp<=893||cp>=895&&cp<=8191||cp>=8204&&cp<=8205||cp>=8304&&cp<=8591||cp>=11264&&cp<=12271||cp>=12289&&cp<=55295||cp>=63744&&cp<=64975||cp>=65008&&cp<=65533||cp>=65536&&cp<=983039}function isReferenceChar(char){return"#"===char||isNameChar(char)}function isWhitespace(char){let cp=getCodePoint(char);return 32===cp||9===cp||10===cp||13===cp}function isXmlCodePoint(cp){return 9===cp||10===cp||13===cp||cp>=32&&cp<=55295||cp>=57344&&cp<=65533||cp>=65536&&cp<=1114111}function getCodePoint(char){return char.codePointAt(0)||-1}var _XmlNode=class{constructor(){this.parent=null,this.start=-1,this.end=-1}get document(){var _a,_b;return null!=(_b=null==(_a=this.parent)?void 0:_a.document)?_b:null}get isRootNode(){return null!==this.parent&&this.parent===this.document&&this.type===_XmlNode.TYPE_ELEMENT}get preserveWhitespace(){var _a;return!!(null==(_a=this.parent)?void 0:_a.preserveWhitespace)}get type(){return""}toJSON(){let json={type:this.type};return this.isRootNode&&(json.isRootNode=!0),this.preserveWhitespace&&(json.preserveWhitespace=!0),-1!==this.start&&(json.start=this.start,json.end=this.end),json}},XmlNode=_XmlNode;XmlNode.TYPE_CDATA="cdata",XmlNode.TYPE_COMMENT="comment",XmlNode.TYPE_DOCUMENT="document",XmlNode.TYPE_DOCUMENT_TYPE="doctype",XmlNode.TYPE_ELEMENT="element",XmlNode.TYPE_PROCESSING_INSTRUCTION="pi",XmlNode.TYPE_TEXT="text",XmlNode.TYPE_XML_DECLARATION="xmldecl";var XmlText=class extends XmlNode{constructor(text=""){super(),this.text=text}get type(){return XmlNode.TYPE_TEXT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{text:this.text})}},XmlCdata=class extends XmlText{get type(){return XmlNode.TYPE_CDATA}},XmlComment=class extends XmlNode{constructor(content=""){super(),this.content=content}get type(){return XmlNode.TYPE_COMMENT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{content:this.content})}},XmlDeclaration=class extends XmlNode{constructor(version,encoding,standalone){super(),this.version=version,this.encoding=null!=encoding?encoding:null,this.standalone=null!=standalone?standalone:null}get type(){return XmlNode.TYPE_XML_DECLARATION}toJSON(){let json=XmlNode.prototype.toJSON.call(this);json.version=this.version;for(let key of["encoding","standalone"])null!==this[key]&&(json[key]=this[key]);return json}},XmlElement=class extends XmlNode{constructor(name,attributes=Object.create(null),children=[]){super(),this.name=name,this.attributes=attributes,this.children=children}get isEmpty(){return 0===this.children.length}get preserveWhitespace(){let node=this;for(;node instanceof XmlElement;){if("xml:space"in node.attributes)return"preserve"===node.attributes["xml:space"];node=node.parent}return!1}get text(){return this.children.map((child=>"text"in child?child.text:"")).join("")}get type(){return XmlNode.TYPE_ELEMENT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{name:this.name,attributes:this.attributes,children:this.children.map((child=>child.toJSON()))})}},XmlDocument=class extends XmlNode{constructor(children=[]){super(),this.children=children}get document(){return this}get root(){for(let child of this.children)if(child instanceof XmlElement)return child;return null}get text(){return this.children.map((child=>"text"in child?child.text:"")).join("")}get type(){return XmlNode.TYPE_DOCUMENT}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{children:this.children.map((child=>child.toJSON()))})}},XmlDocumentType=class extends XmlNode{constructor(name,publicId,systemId,internalSubset){super(),this.name=name,this.publicId=null!=publicId?publicId:null,this.systemId=null!=systemId?systemId:null,this.internalSubset=null!=internalSubset?internalSubset:null}get type(){return XmlNode.TYPE_DOCUMENT_TYPE}toJSON(){let json=XmlNode.prototype.toJSON.call(this);json.name=this.name;for(let key of["publicId","systemId","internalSubset"])null!==this[key]&&(json[key]=this[key]);return json}},XmlError=class extends Error{constructor(message,charIndex,xml){let column=1,excerpt="",line=1;for(let i=0;i<charIndex;++i){let char=xml[i];"\n"===char?(column=1,excerpt="",line+=1):(column+=1,excerpt+=char)}let eol=xml.indexOf("\n",charIndex);excerpt+=-1===eol?xml.slice(charIndex):xml.slice(charIndex,eol);let excerptStart=0;excerpt.length>50&&(column<40?excerpt=excerpt.slice(0,50):(excerptStart=column-20,excerpt=excerpt.slice(excerptStart,column+30))),super(`${message} (line ${line}, column ${column})\n  ${excerpt}\n`+" ".repeat(column-excerptStart+1)+"^\n"),this.column=column,this.excerpt=excerpt,this.line=line,this.name="XmlError",this.pos=charIndex}},XmlProcessingInstruction=class extends XmlNode{constructor(name,content=""){super(),this.name=name,this.content=content}get type(){return XmlNode.TYPE_PROCESSING_INSTRUCTION}toJSON(){return Object.assign(XmlNode.prototype.toJSON.call(this),{name:this.name,content:this.content})}},Parser=class{constructor(xml,options={}){let doc=this.document=new XmlDocument,scanner=this.c=new class{constructor(string){if(this.k=this.q(string,!0),this.d=0,this.length=string.length,this.n=this.k!==this.length,this.m=string,this.n){let charsToBytes=[];for(let byteIndex=0,charIndex=0;charIndex<this.k;++charIndex)charsToBytes[charIndex]=byteIndex,byteIndex+=string.codePointAt(byteIndex)>65535?2:1;this.y=charsToBytes}}get z(){return this.d>=this.k}q(string,multiByteSafe=this.n){return multiByteSafe?string.replace(surrogatePair,"_").length:string.length}g(count=1){this.d=Math.min(this.k,this.d+count)}i(charIndex=this.d){var _a;return this.n?null!=(_a=this.y[charIndex])?_a:1/0:charIndex}F(count=1){let chars=this.h(count);return this.g(count),chars}G(regex){if(!regex.sticky)throw new Error('`regex` must have a sticky flag ("y")');regex.lastIndex=this.i();let result=regex.exec(this.m);if(null===result||0===result.length)return"";let match=result[0];return this.g(this.q(match)),match}v(fn){let char,match="";for(;(char=this.h())&&fn(char);)match+=char,this.g();return match}Q(stringToConsume){if(this.b(stringToConsume))return stringToConsume;if(this.n){let{length}=stringToConsume,charLengthToMatch=this.q(stringToConsume);if(charLengthToMatch!==length&&stringToConsume===this.h(charLengthToMatch))return this.g(charLengthToMatch),stringToConsume}return""}b(stringToConsume){let{length}=stringToConsume;return this.h(length)===stringToConsume?(this.g(length),stringToConsume):""}A(regex){let restOfString=this.m.slice(this.i()),matchByteIndex=restOfString.search(regex);if(matchByteIndex<=0)return"";let result=restOfString.slice(0,matchByteIndex);return this.g(this.q(result)),result}t(searchString){let{m:string}=this,byteIndex=this.i(),matchByteIndex=string.indexOf(searchString,byteIndex);if(matchByteIndex<=0)return"";let result=string.slice(byteIndex,matchByteIndex);return this.g(this.q(result)),result}h(count=1){let{d:charIndex,n:multiByteMode,m:string}=this;return multiByteMode?charIndex>=this.k?"":string.slice(this.i(charIndex),this.i(charIndex+count)):string.slice(charIndex,charIndex+count)}o(index=0){this.d=index>=0?Math.min(this.k,index):Math.max(0,this.d+index)}}(xml);if(this.l=doc,this.f=options,this.f.includeOffsets&&(doc.start=0,doc.end=xml.length),scanner.b("\ufeff"),this.H(),!this.B())throw this.a("Root element is missing or invalid");for(;this.w(););if(!scanner.z)throw this.a("Extra content at the end of the document")}j(node,charIndex){return node.parent=this.l,this.f.includeOffsets&&(node.start=this.c.i(charIndex),node.end=this.c.i()),this.l.children.push(node),!0}x(text,charIndex){let{children}=this.l,{length}=children;if(text=normalizeLineBreaks(text),length>0){let prevNode=children[length-1];if((null==prevNode?void 0:prevNode.type)===XmlNode.TYPE_TEXT){let textNode=prevNode;return textNode.text+=text,this.f.includeOffsets&&(textNode.end=this.c.i()),!0}}return this.j(new XmlText(text),charIndex)}I(){let attributes=Object.create(null);for(;this.e();){let attrName=this.r();if(!attrName)break;let attrValue=this.u()&&this.J();if(!1===attrValue)throw this.a("Attribute value expected");if(attrName in attributes)throw this.a(`Duplicate attribute: ${attrName}`);if("xml:space"===attrName&&"default"!==attrValue&&"preserve"!==attrValue)throw this.a('Value of the `xml:space` attribute must be "default" or "preserve"');attributes[attrName]=attrValue}if(this.f.sortAttributes){let attrNames=Object.keys(attributes).sort(),sortedAttributes=Object.create(null);for(let i=0;i<attrNames.length;++i){let attrName=attrNames[i];sortedAttributes[attrName]=attributes[attrName]}attributes=sortedAttributes}return attributes}J(){let chars,{c:scanner}=this,quote=scanner.h();if('"'!==quote&&"'"!==quote)return!1;scanner.g();let isClosed=!1,value="",regex='"'===quote?attValueCharDoubleQuote:attValueCharSingleQuote;matchLoop:for(;!scanner.z;)switch(chars=scanner.G(regex),chars&&(this.p(chars),value+=chars.replace(attValueNormalizedWhitespace," ")),scanner.h()){case quote:isClosed=!0;break matchLoop;case"&":value+=this.C();continue;case"<":throw this.a("Unescaped `<` is not allowed in an attribute value");case"":break matchLoop}if(!isClosed)throw this.a("Unclosed attribute");return scanner.g(),value}K(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<![CDATA["))return!1;let text=scanner.t("]]>");if(this.p(text),!scanner.b("]]>"))throw this.a("Unclosed CDATA section");return this.f.preserveCdata?this.j(new XmlCdata(normalizeLineBreaks(text)),startIndex):this.x(text,startIndex)}L(){let{c:scanner}=this,startIndex=scanner.d,charData=scanner.A(endCharData);if(!charData)return!1;if(this.p(charData),"]]>"===scanner.h(3))throw this.a("Element content may not contain the CDATA section close delimiter `]]>`");return this.x(charData,startIndex)}D(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("\x3c!--"))return!1;let content=scanner.t("--");if(this.p(content),!scanner.b("--\x3e")){if("--"===scanner.h(2))throw this.a("The string `--` isn't allowed inside a comment");throw this.a("Unclosed comment")}return!this.f.preserveComments||this.j(new XmlComment(normalizeLineBreaks(content)),startIndex)}M(){let startIndex=this.c.d,ref=this.C();return!!ref&&this.x(ref,startIndex)}N(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<!DOCTYPE"))return!1;let publicId,systemId,internalSubset,name=this.e()&&this.r();if(!name)throw this.a("Expected a name");if(this.e()){if(scanner.b("PUBLIC")){if(publicId=this.e()&&this.O(),!1===publicId)throw this.a("Expected a public identifier");this.e()}if(void 0!==publicId||scanner.b("SYSTEM")){if(this.e(),systemId=this.s(),!1===systemId)throw this.a("Expected a system identifier");this.e()}}if(scanner.b("[")){if(internalSubset=scanner.A(/\][\x20\t\r\n]*>/),!scanner.b("]"))throw this.a("Unclosed internal subset");this.e()}if(!scanner.b(">"))throw this.a("Unclosed doctype declaration");return!this.f.preserveDocumentType||this.j(new XmlDocumentType(name,publicId,systemId,internalSubset),startIndex)}B(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<"))return!1;let name=this.r();if(!name)return scanner.o(startIndex),!1;let attributes=this.I(),isEmpty=!!scanner.b("/>"),element=new XmlElement(name,attributes);if(element.parent=this.l,!isEmpty){if(!scanner.b(">"))throw this.a(`Unclosed start tag for element \`${name}\``);this.l=element;do{this.L()}while(this.B()||this.M()||this.K()||this.E()||this.D());let endTagName,endTagMark=scanner.d;if(!scanner.b("</")||!(endTagName=this.r())||endTagName!==name)throw scanner.o(endTagMark),this.a(`Missing end tag for element ${name}`);if(this.e(),!scanner.b(">"))throw this.a(`Unclosed end tag for element ${name}`);this.l=element.parent}return this.j(element,startIndex)}u(){return this.e(),!!this.c.b("=")&&(this.e(),!0)}w(){return this.D()||this.E()||this.e()}r(){return isNameStartChar(this.c.h())?this.c.v(isNameChar):""}E(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<?"))return!1;let name=this.r();if(!name)throw this.a("Invalid processing instruction");if("xml"===name.toLowerCase())throw scanner.o(startIndex),this.a("XML declaration isn't allowed here");if(!this.e()){if(scanner.b("?>"))return this.j(new XmlProcessingInstruction(name),startIndex);throw this.a("Whitespace is required after a processing instruction name")}let content=scanner.t("?>");if(this.p(content),!scanner.b("?>"))throw this.a("Unterminated processing instruction");return this.j(new XmlProcessingInstruction(name,normalizeLineBreaks(content)),startIndex)}H(){let{c:scanner}=this,startIndex=scanner.d;for(this.P();this.w(););if(this.N())for(;this.w(););return startIndex<scanner.d}O(){let startIndex=this.c.d,value=this.s();if(!1!==value&&!/^[-\x20\r\na-zA-Z0-9'()+,./:=?;!*#@$_%]*$/.test(value))throw this.c.o(startIndex),this.a("Invalid character in public identifier");return value}C(){let{c:scanner}=this;if(!scanner.b("&"))return!1;let parsedValue,ref=scanner.v(isReferenceChar);if(";"!==scanner.F())throw this.a("Unterminated reference (a reference must end with `;`)");if("#"===ref[0]){let codePoint="x"===ref[1]?parseInt(ref.slice(2),16):parseInt(ref.slice(1),10);if(isNaN(codePoint))throw this.a("Invalid character reference");if(!isXmlCodePoint(codePoint))throw this.a("Character reference resolves to an invalid character");parsedValue=String.fromCodePoint(codePoint)}else if(parsedValue=predefinedEntities[ref],void 0===parsedValue){let{ignoreUndefinedEntities,resolveUndefinedEntity}=this.f,wrappedRef=`&${ref};`;if(resolveUndefinedEntity){let resolvedValue=resolveUndefinedEntity(wrappedRef);if(null!=resolvedValue){let type=typeof resolvedValue;if("string"!==type)throw new TypeError(`\`resolveUndefinedEntity()\` must return a string, \`null\`, or \`undefined\`, but returned a value of type ${type}`);return resolvedValue}}if(ignoreUndefinedEntities)return wrappedRef;throw scanner.o(-wrappedRef.length),this.a(`Named entity isn't defined: ${wrappedRef}`)}return parsedValue}s(){let{c:scanner}=this,quote=scanner.b('"')||scanner.b("'");if(!quote)return!1;let value=scanner.t(quote);if(this.p(value),!scanner.b(quote))throw this.a("Missing end quote");return value}e(){return!!this.c.v(isWhitespace)}P(){let{c:scanner}=this,startIndex=scanner.d;if(!scanner.b("<?xml"))return!1;if(!this.e())throw this.a("Invalid XML declaration");let encoding,standalone,version=!!scanner.b("version")&&this.u()&&this.s();if(!1===version)throw this.a("XML version is missing or invalid");if(!/^1\.[0-9]+$/.test(version))throw this.a("Invalid character in version number");if(this.e()&&(encoding=!!scanner.b("encoding")&&this.u()&&this.s(),encoding&&this.e(),standalone=!!scanner.b("standalone")&&this.u()&&this.s(),standalone)){if("yes"!==standalone&&"no"!==standalone)throw this.a('Only "yes" and "no" are permitted as values of `standalone`');this.e()}if(!scanner.b("?>"))throw this.a("Invalid or unclosed XML declaration");return!this.f.preserveXmlDeclaration||this.j(new XmlDeclaration(version,encoding||void 0,standalone||void 0),startIndex)}a(message){let{c:scanner}=this;return new XmlError(message,scanner.d,scanner.m)}p(string){let{length}=string;for(let i=0;i<length;++i){let cp=string.codePointAt(i);if(!isXmlCodePoint(cp))throw this.c.o(-([...string].length-i)),this.a("Invalid character");cp>65535&&(i+=1)}}};function normalizeLineBreaks(text){let i=0;for(;-1!==(i=text.indexOf("\r",i));)text="\n"===text[i+1]?text.slice(0,i)+text.slice(i+1):text.slice(0,i)+"\n"+text.slice(i+1);return text}function parseXml(xml,options){return new Parser(xml,options).document}}}]);