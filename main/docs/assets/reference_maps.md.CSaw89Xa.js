import{_ as a,c as e,o as s,a5 as t}from"./chunks/framework.Cz2oDBlC.js";const m=JSON.parse('{"title":"Interactive maps","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/maps.md","filePath":"reference/maps.md"}'),i={name:"reference/maps.md"},n=t(`<h1 id="interactive-maps" tabindex="-1">Interactive maps <a class="header-anchor" href="#interactive-maps" aria-label="Permalink to &quot;Interactive maps&quot;">​</a></h1><p>GeoNetwork-UI relies on the <a href="https://github.com/camptocamp/geospatial-sdk" target="_blank" rel="noreferrer">geospatial-sdk</a> library to render maps. This library works by taking in a Map Context (<a href="https://github.com/camptocamp/geospatial-sdk/blob/main/packages/core/lib/model/map-context.ts" target="_blank" rel="noreferrer">see the model here</a>) describing the layers and the view of the map to be shown.</p><p>Two components are present in GeoNetwork-UI to render a map using a context.</p><h2 id="mapcontainercomponent" tabindex="-1"><code>MapContainerComponent</code> <a class="header-anchor" href="#mapcontainercomponent" aria-label="Permalink to &quot;\`MapContainerComponent\`&quot;">​</a></h2><p>This component simply takes a map context as input and will render it. Everytime the map context changes, the map is updated accordingly.</p><p>This component also offers the following events: <code>mapClick</code>, <code>featuresClicked</code>, <code>featuresHovered</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MapContainerComponent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@geonetwork-ui/ui/map&#39;</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gn-ui-map-container</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  [context]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mapContext&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  (featuresClick)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handleFeaturesClicked($event)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gn-ui-map-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>There are a couple of injection tokens that can be used to specify some map options:</p><ul><li><code>BASEMAP_LAYERS</code>: this allows specifying layers that will be added in the background of the map, regardless of the layers in the context; note that there is always a default background tile layer so that the map shown is never empty; this default background layer can be disabled by setting the <code>DO_NOT_USE_DEFAULT_BASEMAP</code> token to <code>true</code></li><li><code>MAP_VIEW_CONSTRAINTS</code>: this allows specifying <code>maxZoom</code> and <code>maxExtent</code> options that will be applied regardless of the map context</li></ul><h2 id="mapstatecontainercomponent" tabindex="-1"><code>MapStateContainerComponent</code> <a class="header-anchor" href="#mapstatecontainercomponent" aria-label="Permalink to &quot;\`MapStateContainerComponent\`&quot;">​</a></h2><p>This component is connected to a map state accessible through the <code>MapFacade</code> class. This allows changing the context used in the map from anywhere in the application, as well as showing the currently selected feature in the map (if any).</p><p>The <code>LayersPanel</code> component is an example of how another component can interact with the map through the <code>MapFacade</code> class.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MapStateContainerComponent,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MapFacade,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  LayersPanel,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@geonetwork-ui/feature/map&#39;</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gn-ui-map-state-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gn-ui-map-state-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gn-ui-layers-panel</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;absolute inset-y-0 left-0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gn-ui-layers-panel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,15),p=[n];function l(o,h,r,c,d,k){return s(),e("div",null,p)}const E=a(i,[["render",l]]);export{m as __pageData,E as default};
