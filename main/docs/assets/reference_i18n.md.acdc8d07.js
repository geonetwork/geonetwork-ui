import{_ as e,v as a,b as t,R as n}from"./chunks/framework.02cfc778.js";const f=JSON.parse('{"title":"Internationalization","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/i18n.md","filePath":"reference/i18n.md"}'),r={name:"reference/i18n.md"},o=n('<h1 id="internationalization" tabindex="-1">Internationalization <a class="header-anchor" href="#internationalization" aria-label="Permalink to &quot;Internationalization&quot;">​</a></h1><h2 id="language-of-the-user-interface" tabindex="-1">Language of the User Interface <a class="header-anchor" href="#language-of-the-user-interface" aria-label="Permalink to &quot;Language of the User Interface&quot;">​</a></h2><p>The User Interface supports translated labels and switching languages at runtime. The <a href="https://github.com/ngx-translate/core" target="_blank" rel="noreferrer"><code>ngx-translate</code> library</a> is used to handle all i18n aspects in GeoNetwork-UI.</p><p>The <code>TranslateService</code> class, provided by <code>TranslateModule</code>, offers several functionalities:</p><ul><li>reading the current language using <code>currentLang</code> (this gives the value at a certain time and is not an observable)</li><li>changing the current language using the <code>use()</code> method</li></ul><p>Languages in GeoNetwork-UI should always be identified by their <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes" target="_blank" rel="noreferrer">two-character codes following the ISO-639-1 list</a>.</p><h2 id="supported-languages" tabindex="-1">Supported languages <a class="header-anchor" href="#supported-languages" aria-label="Permalink to &quot;Supported languages&quot;">​</a></h2><p>Currently, a small amount of languages is supported, see: <a href="https://github.com/geonetwork/geonetwork-ui/blob/main/libs/util/i18n/src/lib/i18n.constants.ts" target="_blank" rel="noreferrer">https://github.com/geonetwork/geonetwork-ui/blob/main/libs/util/i18n/src/lib/i18n.constants.ts</a></p><h2 id="where-translations-are-stored" tabindex="-1">Where translations are stored <a class="header-anchor" href="#where-translations-are-stored" aria-label="Permalink to &quot;Where translations are stored&quot;">​</a></h2><p>All translated labels are stored in JSON files situated in the <a href="https://github.com/geonetwork/geonetwork-ui/tree/main/translations" target="_blank" rel="noreferrer"><code>translations</code></a> folder at the root of the project.</p><p>The rules for showing the translated labels on screen are:</p><ul><li>if available, use the label for the current language</li><li>if that is not available, use the label for english as fallback</li><li>if that is unavailable as well, simply show the raw translation key on screen</li></ul><h2 id="how-to-include-translated-labels-in-geonetwork-ui" tabindex="-1">How to include translated labels in GeoNetwork-UI <a class="header-anchor" href="#how-to-include-translated-labels-in-geonetwork-ui" aria-label="Permalink to &quot;How to include translated labels in GeoNetwork-UI&quot;">​</a></h2><ul><li>use the <code>| translate</code> pipe or <code>translate</code> directive</li><li>avoid using instant translation in the code: in case the language is switched dynamically, labels translated that way will not be updated</li><li>if translation keys are computed dynamically, use the <a href="https://github.com/biesbjerg/ngx-translate-extract-marker" target="_blank" rel="noreferrer"><code>marker()</code></a> function to declare them beforehand; <strong>translation keys should be discoverable statically by analyzing the source code!</strong></li></ul><p>When a contribution adds new translated labels, the <code>npm run i18n:extract</code> command (which relies on the <a href="https://github.com/biesbjerg/ngx-translate-extract" target="_blank" rel="noreferrer"><code>ngx-translate-extract</code></a> library) should be run and its results committed separately. English labels should always be provided for new keys as this is the fallback language.</p><h2 id="how-to-contribute-new-translations" tabindex="-1">How to contribute new translations <a class="header-anchor" href="#how-to-contribute-new-translations" aria-label="Permalink to &quot;How to contribute new translations&quot;">​</a></h2><p>Simply open a PR modifying the translated labels as you see fit. <strong>Adding or removing keys in the translation files should only be done through the <code>npm run i18n:extract</code> command.</strong></p><h2 id="how-the-user-interface-language-is-detected" tabindex="-1">How the User Interface language is detected <a class="header-anchor" href="#how-the-user-interface-language-is-detected" aria-label="Permalink to &quot;How the User Interface language is detected&quot;">​</a></h2><p>The user will be able to change the language via a language switcher dropdown in the Interface.</p><p>The language:</p><ul><li>is stored in local storage under <code>geonetwork-ui-language</code></li><li>will use the browser language by default, if no language found</li><li>can be changed in the local storage externally and will be taken into account after a refresh</li></ul>',21),l=[o];function i(s,d,h,c,u,g){return a(),t("div",null,l)}const p=e(r,[["render",i]]);export{f as __pageData,p as default};
