(self.webpackChunkgeonetwork_ui=self.webpackChunkgeonetwork_ui||[]).push([[3936],{"./libs/ui/elements/src/lib/download-item/download-item.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{H:()=>DownloadItemComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var download_item_componentngResource=__webpack_require__("./libs/ui/elements/src/lib/download-item/download-item.component.css?ngResource"),download_item_componentngResource_default=__webpack_require__.n(download_item_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/fesm2022/ngx-translate-core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),ng_icons_core=__webpack_require__("./node_modules/@ng-icons/core/fesm2022/ng-icons-core.mjs"),ng_icons_iconoir=__webpack_require__("./node_modules/@ng-icons/iconoir/fesm2022/ng-icons-iconoir.mjs");let DownloadItemComponent=class DownloadItemComponent{constructor(){this.sizeClassMap={L:"gn-ui-card-l py-2 px-5",M:"gn-ui-card-m py-2 px-5",S:"gn-ui-card-s p-4",XS:"gn-ui-card-xs py-2 px-5"},this.cardClass="",this.exportUrl=new core.EventEmitter}set size(value){this._size=value,this.cardClass=this.sizeClassMap[value]}get size(){return this._size}openUrl(){this.exportUrl.emit(this.link.url.toString())}static{this.propDecorators={link:[{type:core.Input}],color:[{type:core.Input}],format:[{type:core.Input}],isFromApi:[{type:core.Input}],size:[{type:core.Input}],exportUrl:[{type:core.Output}]}}};DownloadItemComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"gn-ui-download-item",template:'<a\n  href="{{ link.url }}"\n  target="_blank"\n  class="group flex flex-row justify-between card-shadow cursor-pointer rounded overflow-hidden w-full"\n  rel="noopener"\n  [ngClass]="cardClass"\n>\n  <div class="flex flex-col flex-1 justify-between min-w-0">\n    <div class="gn-ui-card-title" [title]="link.description || link.name">\n      {{ link.description || link.name }}\n    </div>\n    <div class="gn-ui-card-detail">\n      {{ link.name }}\n    </div>\n    <div class="flex flex-row gap-2 items-center pt-1 min-w-0">\n      <span\n        class="inline-flex items-center justify-center px-2 py-1 text-13 font-medium leading-none text-white rounded transition-opacity opacity-70 group-hover:opacity-100 whitespace-nowrap"\n        [style.background-color]="color"\n        data-cy="download-format"\n        >{{ format || (\'downloads.format.unknown\' | translate) }}</span\n      >\n      <span class="text-gray-800 text-xs" *ngIf="isFromApi" translate=""\n        >datahub.search.filter.generatedByAPI</span\n      >\n    </div>\n  </div>\n  <div\n    class="flex min-w-[32px] flex-shrink-0"\n    [ngClass]="size === \'S\' ? \'items-end\' : \'items-center\'"\n  >\n    <div class="gn-ui-card-icon">\n      <ng-icon\n        class="inline-block card-icon align-middle"\n        name="iconoirDownload"\n      >\n      </ng-icon>\n    </div>\n  </div>\n</a>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,imports:[common.CommonModule,ngx_translate_core.Mm,ngx_translate_core.D9,ng_icons_core.$e],standalone:!0,viewProviders:[(0,ng_icons_core.EB)({iconoirDownload:ng_icons_iconoir.K$Y})],styles:[download_item_componentngResource_default()]})],DownloadItemComponent)},"./libs/ui/elements/src/lib/download-item/download-item.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SizeL:()=>SizeL,SizeM:()=>SizeM,SizeS:()=>SizeS,SizeXS:()=>SizeXS,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_download_item_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/ui/elements/src/lib/download-item/download-item.component.ts"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_geonetwork_ui_util_i18n__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/util/i18n/src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/DownloadsListItemComponent",component:_download_item_component__WEBPACK_IMPORTED_MODULE_1__.H,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.importProvidersFrom)(_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__.BrowserAnimationsModule),(0,_geonetwork_ui_util_i18n__WEBPACK_IMPORTED_MODULE_2__.GN)()]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="max-width: 800px">${story}</div>`))]},SizeXS={args:{size:"XS",link:{name:"allroads.geojson",type:"download",description:"A file that contains all roads",url:new URL("https://roads.com/allroads.geojson")}},argTypes:{exportUrl:{action:"exportUrl"}},render:args=>({props:args,template:'\n    <div class=\'border border-black inline-block rounded\'>\n      <gn-ui-download-item [link]="link" size="XS" color="#b3cde8" format="json" [isFromAPI]="true"></gn-ui-download-item>\n    </div>'})},SizeS={args:{size:"S",link:{name:"allroads.geojson",type:"download",description:"A file that contains all roads",url:new URL("https://roads.com/allroads.geojson")}},argTypes:{exportUrl:{action:"exportUrl"}},render:args=>({props:args,template:'\n    <div class=\'border border-black inline-block rounded\'>\n      <gn-ui-download-item [link]="link" size="S" color="#FFF2CC" format="html" [isFromAPI]="true"></gn-ui-download-item>\n    </div>'})},SizeM={args:{size:"M",link:{name:"allroads.geojson",type:"download",description:"A file that contains all roads",url:new URL("https://roads.com/allroads.geojson")}},argTypes:{exportUrl:{action:"exportUrl"}},render:args=>({props:args,template:'\n    <div class=\'border border-black inline-block rounded\'>\n      <gn-ui-download-item [link]="link" size="M" color="#a6d6c0" format="csv" [isFromAPI]="true"></gn-ui-download-item>\n    </div>'})},SizeL={args:{size:"L",link:{name:"allroads.geojson",type:"download",description:"A file that contains all roads",url:new URL("https://roads.com/allroads.geojson")}},argTypes:{exportUrl:{action:"exportUrl"}},render:args=>({props:args,template:'\n    <div class=\'border border-black inline-block rounded\'>\n      <gn-ui-download-item [link]="link" size="L" color="#f5b2a3" format="pdf" [isFromAPI]="true"></gn-ui-download-item>\n    </div>'})},__namedExportsOrder=["SizeXS","SizeS","SizeM","SizeL"];SizeXS.parameters={...SizeXS.parameters,docs:{...SizeXS.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'XS',\n    link: {\n      name: 'allroads.geojson',\n      type: 'download',\n      description: 'A file that contains all roads',\n      url: new URL('https://roads.com/allroads.geojson')\n    }\n  },\n  argTypes: {\n    exportUrl: {\n      action: 'exportUrl'\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `\n    <div class='border border-black inline-block rounded'>\n      <gn-ui-download-item [link]=\"link\" size=\"XS\" color=\"#b3cde8\" format=\"json\" [isFromAPI]=\"true\"></gn-ui-download-item>\n    </div>`\n  })\n}",...SizeXS.parameters?.docs?.source}}},SizeS.parameters={...SizeS.parameters,docs:{...SizeS.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'S',\n    link: {\n      name: 'allroads.geojson',\n      type: 'download',\n      description: 'A file that contains all roads',\n      url: new URL('https://roads.com/allroads.geojson')\n    }\n  },\n  argTypes: {\n    exportUrl: {\n      action: 'exportUrl'\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `\n    <div class='border border-black inline-block rounded'>\n      <gn-ui-download-item [link]=\"link\" size=\"S\" color=\"#FFF2CC\" format=\"html\" [isFromAPI]=\"true\"></gn-ui-download-item>\n    </div>`\n  })\n}",...SizeS.parameters?.docs?.source}}},SizeM.parameters={...SizeM.parameters,docs:{...SizeM.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'M',\n    link: {\n      name: 'allroads.geojson',\n      type: 'download',\n      description: 'A file that contains all roads',\n      url: new URL('https://roads.com/allroads.geojson')\n    }\n  },\n  argTypes: {\n    exportUrl: {\n      action: 'exportUrl'\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `\n    <div class='border border-black inline-block rounded'>\n      <gn-ui-download-item [link]=\"link\" size=\"M\" color=\"#a6d6c0\" format=\"csv\" [isFromAPI]=\"true\"></gn-ui-download-item>\n    </div>`\n  })\n}",...SizeM.parameters?.docs?.source}}},SizeL.parameters={...SizeL.parameters,docs:{...SizeL.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'L',\n    link: {\n      name: 'allroads.geojson',\n      type: 'download',\n      description: 'A file that contains all roads',\n      url: new URL('https://roads.com/allroads.geojson')\n    }\n  },\n  argTypes: {\n    exportUrl: {\n      action: 'exportUrl'\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `\n    <div class='border border-black inline-block rounded'>\n      <gn-ui-download-item [link]=\"link\" size=\"L\" color=\"#f5b2a3\" format=\"pdf\" [isFromAPI]=\"true\"></gn-ui-download-item>\n    </div>`\n  })\n}",...SizeL.parameters?.docs?.source}}}},"./libs/ui/elements/src/lib/download-item/download-item.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);