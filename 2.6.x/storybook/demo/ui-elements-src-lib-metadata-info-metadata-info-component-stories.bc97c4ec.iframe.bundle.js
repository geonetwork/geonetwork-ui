"use strict";(self.webpackChunkgeonetwork_ui=self.webpackChunkgeonetwork_ui||[]).push([[6048],{"./node_modules/@geospatial-sdk/legend/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>createLegendFromLayer});var dist=__webpack_require__("./node_modules/@geospatial-sdk/core/dist/index.js"),ogc_client_dist=__webpack_require__("./node_modules/@camptocamp/ogc-client/dist/index.js"),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};function createLegendFromLayer(layer,options={}){return __awaiter(this,void 0,void 0,(function*(){if("wms"!==layer.type&&"wmts"!==layer.type||!layer.url||!layer.name)return console.error("Invalid layer for legend creation"),null;const legendDiv=document.createElement("div");legendDiv.id="legend",legendDiv.setAttribute("role","region"),legendDiv.setAttribute("aria-label","Map Layer Legend"),legendDiv.classList.add("geosdk--legend-container");const layerDiv=document.createElement("div");layerDiv.classList.add("geosdk--legend-layer");const layerTitle=document.createElement("h4");layerTitle.textContent=layer.name,layerTitle.classList.add("geosdk--legend-layer-label"),layerDiv.appendChild(layerTitle);const img=document.createElement("img");img.alt=`Legend for ${layer.name}`,img.classList.add("geosdk--legend-layer-image"),img.onerror=e=>{console.warn(`Failed to load legend for layer: ${layer.name}`,e);const errorMessage=document.createElement("span");errorMessage.textContent=`Legend not available for ${layer.name}`,layerDiv.replaceChild(errorMessage,img)};try{let legendUrl=null;if("wms"===layer.type?legendUrl=function createWmsLegendUrl(layer,options={}){const{format="image/png",widthPxHint,heightPxHint}=options,legendUrl=new URL((0,dist.jc)(layer.url,["SERVICE","REQUEST","FORMAT","LAYER","LAYERTITLE","SLD_VERSION","WIDTH","HEIGHT"]));return legendUrl.searchParams.set("SERVICE","WMS"),legendUrl.searchParams.set("REQUEST","GetLegendGraphic"),legendUrl.searchParams.set("FORMAT",format),legendUrl.searchParams.set("LAYER",layer.name),legendUrl.searchParams.set("LAYERTITLE",(!1).toString()),legendUrl.searchParams.set("SLD_VERSION","1.1.0"),widthPxHint&&legendUrl.searchParams.set("WIDTH",widthPxHint.toString()),heightPxHint&&legendUrl.searchParams.set("HEIGHT",heightPxHint.toString()),legendUrl}(layer,options).toString():"wmts"===layer.type&&(legendUrl=yield function createWmtsLegendUrl(layer){return __awaiter(this,void 0,void 0,(function*(){const layerByName=(yield new ogc_client_dist.WmtsEndpoint(layer.url).isReady()).getLayerByName(layer.name);return layerByName.styles&&layerByName.styles.length>0&&layerByName.styles[0].legendUrl?layerByName.styles[0].legendUrl:null}))}(layer)),legendUrl)img.src=legendUrl,layerDiv.appendChild(img);else{const errorMessage=document.createElement("span");errorMessage.textContent=`Legend not available for ${layer.name}`,layerDiv.appendChild(errorMessage)}}catch(error){console.error(`Error creating legend for layer ${layer.name}:`,error);const errorMessage=document.createElement("span");errorMessage.textContent=`Error loading legend for ${layer.name}`,layerDiv.appendChild(errorMessage)}return legendDiv.appendChild(layerDiv),legendDiv}))}},"./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>firstValueFrom});var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/EmptyError.js"),_Subscriber__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscriber.js");function firstValueFrom(source,config){var hasConfig="object"==typeof config;return new Promise((function(resolve,reject){var subscriber=new _Subscriber__WEBPACK_IMPORTED_MODULE_0__.Ms({next:function(value){resolve(value),subscriber.unsubscribe()},error:reject,complete:function(){hasConfig?resolve(config.defaultValue):reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__.G)}});source.subscribe(subscriber)}))}},"./node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>throttleTime});var scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");function throttleTime(duration,scheduler,config){void 0===scheduler&&(scheduler=scheduler_async.E);var duration$=(0,timer.O)(duration,scheduler);return function throttle(durationSelector,config){return(0,lift.N)((function(source,subscriber){var _a=null!=config?config:{},_b=_a.leading,leading=void 0===_b||_b,_c=_a.trailing,trailing=void 0!==_c&&_c,hasValue=!1,sendValue=null,throttled=null,isComplete=!1,endThrottling=function(){null==throttled||throttled.unsubscribe(),throttled=null,trailing&&(send(),isComplete&&subscriber.complete())},cleanupThrottling=function(){throttled=null,isComplete&&subscriber.complete()},startThrottle=function(value){return throttled=(0,innerFrom.Tg)(durationSelector(value)).subscribe((0,OperatorSubscriber._)(subscriber,endThrottling,cleanupThrottling))},send=function(){if(hasValue){hasValue=!1;var value=sendValue;sendValue=null,subscriber.next(value),!isComplete&&startThrottle(value)}};source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){hasValue=!0,sendValue=value,(!throttled||throttled.closed)&&(leading?send():startThrottle(value))}),(function(){isComplete=!0,(!(trailing&&hasValue&&throttled)||throttled.closed)&&subscriber.complete()})))}))}((function(){return duration$}),config)}},"./libs/ui/elements/src/lib/metadata-info/metadata-info.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _geonetwork_ui_util_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/util/i18n/src/index.ts"),_storybook_angular__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_metadata_info_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/ui/elements/src/lib/metadata-info/metadata-info.component.ts"),_geonetwork_ui_common_fixtures__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/common/fixtures/src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/MetadataInfoComponent",component:_metadata_info_component__WEBPACK_IMPORTED_MODULE_2__.b,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.applicationConfig)({providers:[(0,_geonetwork_ui_util_i18n__WEBPACK_IMPORTED_MODULE_0__.GN)()]})]},Primary={args:{metadata:(0,_geonetwork_ui_common_fixtures__WEBPACK_IMPORTED_MODULE_3__._K)()[0],incomplete:!1}},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    metadata: datasetRecordsFixture()[0] as Partial<DatasetRecord>,\n    incomplete: false\n  }\n}",...Primary.parameters?.docs?.source}}}}}]);